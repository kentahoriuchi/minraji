{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js!/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/in_the_room.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/in_the_room.vue","mtime":1590302287000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["in_the_room.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<!-- 部屋の中の画面、へやのidによって画面が異なる -->\n<div>\n<header>\n<h1 class=\"headline\">\n      <a>みんラジ!</a>\n</h1>\n  <ul class=\"nav-list\">\n\n      <li class=\"nav-list-item\"><router-link to=\"/\"><button id=\"back-home-button\">ホーム</button></router-link></li>\n      <li class=\"nav-list-item\"><!-- 待機部屋に移動 --><router-link to=\"/room\"><button id=\"go-room-button\">ルーム広場に戻る</button></router-link></li>\n\n      <li class=\"nav-list-item\"><amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n</header>\n<main>\n<section>\n    <h2>ルーム</h2>\n\n    <p>ここはルームの中です。動画をみてラジオ体操をしましょう。\n      ラジオ体操が終わったら「ルームを消す」ボタンを押して、ルーム広場に戻りましょう。</p>\n    <div id=\"all-members\">  \n    <h2>参加者一覧</h2>\n    参加者 : {{members.length}} 名\n    <div  v-for=\"member in members\" :key=\"member.id\">\n      {{member.username}}\n    </div>\n    </div>\n   \n    \n    <!-- video-id youtubeの動画のid -->\n    <!--<youtube :video-id=\"video_url\" ref=\"youtube\" @playing=\"playing\"></youtube> -->\n</section>\n    \n<section>   \n    <!-- video-id youtubeの動画のid -->\n    <div align=\"center\"><youtube :video-id=\"video_url\" ref=\"youtube\" \n      @playing=\"playing\" \n      @cued=\"cued\" \n      @ready=\"ready\" \n      @ended=\"ended\" \n      @paused=\"paused\"\n      @buffering=\"buffering\">\n    </youtube>\n    </div>\n    <br>\n    \n    \n  <div id=\"two-buttons-up\">\n      <button v-on:click=\"playVideo\" id=\"play-button\">play</button>\n  <button v-on:click=\"chat\" id=\"chat-button\">チャットする</button>\n  </div>\n\n  <div id=\"two-buttons-down\">\n  <!-- ルームを消す--><button id=\"delete-room-button\" v-on:click=\"delete_room\">ルームを消す</button>\n    <router-link to=\"/room\"><button id=\"go-room-button\">ルーム広場に戻る</button></router-link>\n  </div>\n\n\n  <div id='overlay' v-show='showContent'>\n  <div v-for=\"message in messages\" :key=\"message.id\">\n    <p v-bind:class=\"[message.username === userName ? 'message' : 'message_opponent']\">{{message.content}}</p>\n    <p v-bind:class=\"[message.username === userName ? 'username' : 'username_opponent']\">{{message.username}}</p>\n  </div>\n  <table>\n  <tr>\n  <div>\n  <input id=\"messageinput\" placeholder=\"メッセージを入力してください\" size=\"25\" type='text' value=\"\"/>\n  </div>\n  </tr>\n  <tr>\n  <div>\n  <button id = \"sendMessage\" v-on:click=\"sendMessage\">送る</button>\n  <button id=\"chat-close\" v-on:click='closeModel'>閉じる</button>\n  </div>\n  </tr>\n  </table>\n</div>\n    \n    \n\n\n</section>\n</main>\n</div>\n</template>\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport Vue from 'vue'\nimport VueYoutube, {getIdFromUrl} from 'vue-youtube'\nimport { getRoom } from '../graphql/queries';\nimport { getUser } from '../graphql/queries';\nimport { deleteRoom } from '../graphql/mutations'\nimport router from '../router/router'\nimport UserStore from '../mobx/UserStore'\nimport { updateUser } from \"../graphql/mutations\";\nimport { updateRoom } from \"../graphql/mutations\";\nimport { createMessage } from \"../graphql/mutations\";\n// import foryoutube from './foryoutube'\n\nVue.use(VueYoutube)\n\nexport default {\n  name: 'room',\n  // components: {\n  //   foryoutube\n  // },\n  data(){\n    return {\n      video_url: \"\",\n      subscription: {},\n      error: \"\",\n      roomId: \"\",\n      members: [],\n      userName: \"\",\n      userId: \"\",\n      showContent: false,\n      messages: [],\n      createdTime: \"\",\n      nowTime: \"\"\n      // playerVars: {\n      //   autoplay: 0\n      // }\n      // videoId: '7bIBZ6M0-tU'\n    }\n  },\n  methods :{\n    async fetch(){\n      const getroom = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n      this.messages = getroom.data.getRoom.messages.items\n      console.log(this.messages)\n    },\n    async playVideo() {\n      // await this.player.seekTo(10,true)\n      await this.sendSeek(30)\n      this.player.playVideo()\n      console.log(await this.player.getPlayerState())\n      // Do something after the playVideo command\n      // this.player.seekTo(10)\n    },\n    async ready() {\n      console.log(\"Now we are ready for stream!!!\")\n      //this.player.addEventListener(this.player.onStateChange, )\n      console.log(await this.player.getPlayerState())\n      this.sendSeek(30)\n      // this.player.seekTo(Math.floor(new Date().getTime()/1000) - this.createdTime)\n      // this.playVideo()\n    },\n    async playing() {\n      // await this.sendSeek(30)\n      console.log('we are watching!!!')\n      console.log(this.player.getPlayerState())\n      // this.player.seekTo(10)\n    },\n    async cued() {\n      console.log('cued')\n      console.log(await this.player.getPlayerState())\n\n    },\n    ended() {\n      console.log('ended')\n      console.log(this.player.getPlayerState())\n    },\n    paused() {\n      console.log('paused')\n      console.log(this.player.getPlayerState())\n    },\n    async buffering() {\n      console.log('buffering')\n      console.log(this.player.getPlayerState())\n      setTimeout(console.log('7777777'),5000)\n      await this.checkTime()\n    },\n    sendSeek(seconds) {\n      this.player.seekTo(seconds)\n\n    },\n    chat(){\n      this.showContent = true\n    },\n    async sendMessage(){\n      const message = document.getElementById(\"messageinput\").value\n      const createmessage = {\n        id: new Date().getTime() + this.userName,\n        username: this.userName,\n        content: message,\n        messageRoomidId: this.roomId\n      }\n      console.log(createmessage)\n      await API.graphql(graphqlOperation(createMessage, { input: createmessage }))\n        .catch(error => this.error = JSON.stringify(error))\n    },\n    async delete_room(){\n      const roomi = {\n        id: this.roomId\n      }\n      console.log(roomi)\n      await API.graphql(graphqlOperation(deleteRoom, { input: roomi}))\n        .catch(error => this.error = JSON.stringify(error))\n      router.push({name:'room'})\n    },\n    closeModel: function(){\n      this.showContent = false\n    },\n    initializedate(){\n      var today = new Date();\n      today.setDate(today.getDate());\n      var yyyy = today.getFullYear();\n      var mm = (\"0\"+(today.getMonth()+1)).slice(-2);\n      var dd = (\"0\"+today.getDate()).slice(-2);\n      var hh = (\"0\"+(today.getHours())).slice(-2);\n      var min = (\"0\"+(today.getMinutes())).slice(-2);\n      var sec = (\"0\"+(today.getSeconds())).slice(-2);\n      this.nowTime = yyyy+'-'+mm+'-'+dd +\" \"+ hh+':'+min+':'+sec;\n    },\n    checkTime(){\n      this.initializedate()\n      const wordsCreated = this.createdTime.split(' ');\n      const wordsNow = this.nowTime.split(' ');\n      console.log( wordsCreated[0])\n      console.log( wordsNow[0])\n      if(wordsCreated[0].match(wordsNow[0]) != /(\\d{4})-(\\d{2})-(\\d{2})/){\n        console.log(\"day matched!\")\n        const timeCreated = wordsCreated[1].split(':')\n        const timeNow = wordsNow[1].split(':')\n        const timeFromStart = (timeNow[0] - timeCreated[0])*3600 + (timeNow[1] - timeCreated[1])*60 + (timeNow[2] - timeCreated[2])\n        console.log(timeFromStart)\n        // console.log(\"time is far! moving now\")\n        if(timeFromStart < 0){\n          this.player.pauseVideo()\n          console.log('waiting')\n          setTimeout(this.player.playVideo(),Math.abs(timeFromStart*1000))\n        }else{\n          this.sendSeek(timeFromStart)  \n        }\n        \n      }\n    }\n  },\n  computed: {\n    player() {\n      return this.$refs.youtube.player\n    },\n\n  },\n  async created(){\n    const { username,userid } = await UserStore\n    console.log(UserStore)\n    this.userName = username\n    this.userId = userid \n    const user_id = await API.graphql(graphqlOperation(getUser,{id: this.userId}))\n    console.log(user_id.data.getUser.roomid)\n    const room_info = user_id.data.getUser.roomid\n    this.video_url = getIdFromUrl(room_info.movie)\n    this.roomId = room_info.id\n    this.createdTime = room_info.reservedtime\n    const member = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n    this.members = member.data.getRoom.users.items\n    // console.log(this.members)\n    // console.log(this.video_url)\n    console.log(\"created: \" + this.createdTime)\n    console.log(\"now: \" + this.nowTime)\n    this.fetch()\n    //this.createdTime = get_created_time(userid)\n  },\n  async destroyed(){\n    const updatedata = {\n        id: this.userId,\n        userRoomidId: null\n      }\n    const roominfo = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n    const roommember = roominfo.data.getRoom.numberofmember\n    const addroommenber = {\n      id: this.roomId,\n      numberofmember: roommember - 1\n    }\n    await API.graphql(graphqlOperation(updateRoom, { input: addroommenber }))\n      .catch(error => this.error = JSON.stringify(error))\n    await API.graphql(graphqlOperation(updateUser, { input: updatedata }))\n      .catch(error => this.error = JSON.stringify(error))\n  }\n}\n\n/*\nfunction get_created_time(userid){\n  if (userid.data.listUsers.items[0].roomid.time !== /\\d{10}/g) {\n    const room ={\n      id: userid.data.listUsers.items[0].roomid.id,\n      time: Math.floor(new Date().getTime()/1000)\n    }\n    console.log(\"time is NOT set in this room. The time is \" + room.time + \" now and was set.\")\n    console.log(\"room is \" + room.id)\n    API.graphql(graphqlOperation(updateRoom, { input: room}))\n    .then(console.log(\"set successfully!\"))\n    .catch(error => this.error = JSON.stringify(error))\n    return new room.time\n  }\n  else{\n    console.log(\"time is set in this room. the time is \" + userid.data.listUsers.items[0].roomid.time)\n    return userid.data.listUsers.items[0].roomid.time\n  }\n}\n*/\n//function sendSeek(seconds) {\n  // this.player.seekTo(this.seconds)\n//}\n\n</script>\n\n<style src=\"./chat.css\" />\n\n\n"],"sourceRoot":"src/components"}]}