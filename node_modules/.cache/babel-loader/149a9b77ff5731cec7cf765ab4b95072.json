{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js!/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/foryoutube.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/foryoutube.vue","mtime":1589708072000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["foryoutube.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n  </div>\n</template>\n\n<script>\n\n  const player = require('youtube-player')\n\n  const UNSTARTED = -1\n  const ENDED = 0\n  const PLAYING = 1\n  const PAUSED = 2\n  const BUFFERING = 3\n  const CUED = 5\n\n  export default {\n    name: 'foryoutube',\n    props: {\n      videoId: {\n        type: String,\n        default: \"8CR32KdFD-c\"\n      },\n      playerVars: {\n        type: Object,\n        default: () => ({})\n      },\n      height: {\n        type: [Number, String],\n        default: 360\n      },\n      width: {\n        type: [Number, String],\n        default: 640\n      },\n      resize: {\n        type: Boolean,\n        default: false\n      },\n      resizeDelay: {\n        type: Number,\n        default: 100\n      },\n      nocookie: {\n        type: Boolean,\n        default: false\n      },\n      fitParent: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data () {\n      return {\n        player: {},\n        events: {\n          [UNSTARTED]: 'unstarted',\n          [PLAYING]: 'playing',\n          [PAUSED]: 'paused',\n          [ENDED]: 'ended',\n          [BUFFERING]: 'buffering',\n          [CUED]: 'cued'\n        },\n        resizeTimeout: null\n      }\n    },\n    computed: {\n      aspectRatio () {\n        return this.width / this.height\n      }\n    },\n    methods: {\n      playerReady (e) {\n        this.$emit('ready', e.target)\n      },\n      playerStateChange (e) {\n        if (e.data !== null && e.data !== UNSTARTED) {\n          this.$emit(this.events[e.data], e.target)\n        }\n        console.log(\"state changed! \" + this.events[e.data])\n      },\n      playerError (e) {\n        this.$emit('error', e.target)\n      },\n      async updatePlayer (videoId) {\n        if (!videoId) {\n          this.player.stopVideo()\n          return\n        }\n\n        if (this.playerVars.autoplay === 1) {\n          await this.player.loadVideoById( videoId, 5 )\n          //.then(this.player.seek(10))\n          return\n        }\n\n        this.player.cueVideoById({ 'videoId': videoId})\n      },\n      resizeProportionally () {\n        this.player.getIframe().then(iframe => {\n          const width = this.fitParent\n            ? iframe.parentElement.offsetWidth\n            : iframe.offsetWidth\n          const height = width / this.aspectRatio\n          this.player.setSize(width, height)\n        })\n      },\n      onResize () {\n        clearTimeout(this.resizeTimeout)\n        this.resizeTimeout = setTimeout(\n          this.resizeProportionally,\n          this.resizeDelay\n        )\n      }\n    },\n    watch: {\n      videoId: 'updatePlayer',\n      resize (val) {\n        if (val) {\n          window.addEventListener('resize', this.onResize)\n          this.resizeProportionally()\n        } else {\n          window.removeEventListener('resize', this.onResize)\n          this.player.setSize(this.width, this.height)\n        }\n      },\n      width (val) {\n        this.player.setSize(val, this.height)\n      },\n      height (val) {\n        this.player.setSize(this.width, val)\n      }\n    },\n    beforeDestroy () {\n      if (this.player !== null && this.player.destroy) {\n        this.player.destroy()\n        delete this.player\n      }\n\n      if (this.resize) {\n        window.removeEventListener('resize', this.onResize)\n      }\n    },\n    mounted () {\n      window.YTConfig = {\n        host: 'https://www.youtube.com/iframe_api'\n      }\n      \n      const host = this.nocookie ? 'https://www.youtube-nocookie.com' : 'https://www.youtube.com'\n\n      this.player = player(this.$el, {\n        host,\n        width: this.width,\n        height: this.height,\n        videoId: this.videoId,\n        playerVars: this.playerVars\n      })\n\n      this.player.on('ready', this.playerReady)\n      this.player.on('stateChange', this.playerStateChange)\n      this.player.on('error', this.playerError)\n\n      if (this.resize) {\n        window.addEventListener('resize', this.onResize)\n      }\n\n      if (this.fitParent) {\n        this.resizeProportionally()\n      }\n    },\n    render (h) {\n      return h('div')\n    }\n  }\n\n  // // 2. This code loads the IFrame Player API code asynchronously.\n  // var tag = document.createElement('script');\n\n  // tag.src = \"https://www.youtube.com/iframe_api\";\n  // var firstScriptTag = document.getElementsByTagName('script')[0];\n  // firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n  // // 3. This function creates an <iframe> (and YouTube player)\n  // //    after the API code downloads.\n  // var player;\n  // function onYouTubeIframeAPIReady() {\n  //   player = new YT.Player('player', {\n  //     height: '360',\n  //     width: '640',\n  //     videoId: 'M7lc1UVf-VE',\n  //     events: {\n  //       'onReady': onPlayerReady,\n  //       'onStateChange': onPlayerStateChange\n  //     }\n  //   });\n  // }\n\n  // // 4. The API will call this function when the video player is ready.\n  // function onPlayerReady(event) {\n  //   event.target.playVideo();\n  // }\n\n  // // 5. The API calls this function when the player's state changes.\n  // //    The function indicates that when playing a video (state=1),\n  // //    the player should play for six seconds and then stop.\n  // var done = false;\n  // function onPlayerStateChange(event) {\n  //   if (event.data == YT.PlayerState.PLAYING && !done) {\n  //     setTimeout(stopVideo, 6000);\n  //     done = true;\n  //   }\n  // }\n  // function stopVideo() {\n  //   player.stopVideo();\n  // }\n</script>"],"sourceRoot":"src/components"}]}