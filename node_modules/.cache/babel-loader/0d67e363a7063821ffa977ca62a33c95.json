{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js!/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/eslint-loader/index.js??ref--13-0!/home/vagrant/workspace/minraji/utsprint/minraji/src/mobx/UserStore.js","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/mobx/UserStore.js","mtime":1590147194000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/eslint-loader/index.js","mtime":1588818781000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvdmFncmFudC93b3Jrc3BhY2UvbWlucmFqaS91dHNwcmludC9taW5yYWppL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS92YWdyYW50L3dvcmtzcGFjZS9taW5yYWppL3V0c3ByaW50L21pbnJhamkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS92YWdyYW50L3dvcmtzcGFjZS9taW5yYWppL3V0c3ByaW50L21pbnJhamkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IEFQSSwgeyBncmFwaHFsT3BlcmF0aW9uIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2FwaSc7CmltcG9ydCB7IEF1dGggfSBmcm9tICdhd3MtYW1wbGlmeSc7CmltcG9ydCB7IGxpc3RVc2VycyB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7CmltcG9ydCB7IGNyZWF0ZVVzZXIgYXMgX2NyZWF0ZVVzZXIgfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7IC8vIGltcG9ydCB7IG9ic2VydmFibGUsIGRlY29yYXRlIH0gZnJvbSAnbW9ieCcKCnZhciBVc2VyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBVc2VyKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVzZXIpOwoKICAgIHRoaXMudXNlcm5hbWUgPSAnJzsKICAgIHRoaXMudXNlcmlkID0gJyc7CiAgICB0aGlzLmluaXQoKTsKICB9CgogIF9jcmVhdGVDbGFzcyhVc2VyLCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2luaXQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHVzZXI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBBdXRoLmN1cnJlbnRBdXRoZW50aWNhdGVkVXNlcigpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICB1c2VyID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHRoaXMudXNlcm5hbWUgPSB1c2VyLnVzZXJuYW1lOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBnZXR0aW5nIHVzZXIgZGF0YS4uLiAnLCBfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygndXNlcm5hbWU6JywgdGhpcy51c2VybmFtZSk7CgogICAgICAgICAgICAgICAgaWYgKHRoaXMudXNlcm5hbWUgIT09ICcnKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tJZlVzZXJFeGlzdHModGhpcy51c2VybmFtZSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzLCBbWzAsIDddXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgICAgcmV0dXJuIF9pbml0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpbml0OwogICAgfSgpCiAgfSwgewogICAga2V5OiAiY2hlY2tJZlVzZXJFeGlzdHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9jaGVja0lmVXNlckV4aXN0cyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIodXNlcm5hbWUpIHsKICAgICAgICB2YXIgdXNlcmRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGxpc3RVc2VycywgewogICAgICAgICAgICAgICAgICBmaWx0ZXI6IHsKICAgICAgICAgICAgICAgICAgICAndXNlcm5hbWUnOiB7CiAgICAgICAgICAgICAgICAgICAgICBlcTogdXNlcm5hbWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgdXNlcmRhdGEgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJkYXRhLmRhdGEubGlzdFVzZXJzLml0ZW1zLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZVVzZXIoKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHRoaXMudXNlcmlkID0gdXNlcmRhdGEuZGF0YS5saXN0VXNlcnMuaXRlbXNbMF0uaWQ7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGNoZWNrSWZVc2VyRXhpc3RzKF94KSB7CiAgICAgICAgcmV0dXJuIF9jaGVja0lmVXNlckV4aXN0cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gY2hlY2tJZlVzZXJFeGlzdHM7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJjcmVhdGVVc2VyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfY3JlYXRlVXNlcjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHZhciBuZXd1c2VyOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICBuZXd1c2VyID0gewogICAgICAgICAgICAgICAgICAgIGlkOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSArIHRoaXMudXNlck5hbWUsCiAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHRoaXMudXNlck5hbWUKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihfY3JlYXRlVXNlciwgewogICAgICAgICAgICAgICAgICAgIGlucHV0OiBuZXd1c2VyCiAgICAgICAgICAgICAgICAgIH0pKS50aGVuKHRoaXMudXNlci5pZCA9IG5ld3VzZXIuaWQpLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCduZXd1c2VyOicsIG5ld3VzZXIpOwogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBjcmVhdGluZyB1c2VyIGRhdGEuLi4gJywgZXJyKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gY3JlYXRlVXNlcigpIHsKICAgICAgICByZXR1cm4gX2NyZWF0ZVVzZXIyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjcmVhdGVVc2VyOwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gVXNlcjsKfSgpOyAvLyBkZWNvcmF0ZShVc2VyLCB7Ci8vICAgdXNlcm5hbWU6IG9ic2VydmFibGUsCi8vICAgdXNlcmlkOiBvYnNlcnZhYmxlCi8vIH0pOwoKCmV4cG9ydCBkZWZhdWx0IG5ldyBVc2VyKCk7"},{"version":3,"sources":["/home/vagrant/workspace/minraji/utsprint/minraji/src/mobx/UserStore.js"],"names":["API","graphqlOperation","Auth","listUsers","createUser","User","username","userid","init","currentAuthenticatedUser","user","console","log","checkIfUserExists","graphql","filter","eq","userdata","data","items","length","id","newuser","Date","getTime","userName","input","then","catch","error","JSON","stringify","err"],"mappings":";;;;AAAA,OAAOA,GAAP,IAAeC,gBAAf,QAAuC,kBAAvC;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,sBAA3B,C,CACA;;IAEMC,I;AACJ,kBAAa;AAAA;;AACX,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,IAAL;AACD;;;;;;;;;;;;;uBAIsBN,IAAI,CAACO,wBAAL,E;;;AAAbC,gBAAAA,I;AACN,qBAAKJ,QAAL,GAAgBI,IAAI,CAACJ,QAArB;;;;;;;AAEAK,gBAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;;AAEFD,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,KAAKN,QAA7B;;AACA,oBAAG,KAAKA,QAAL,KAAkB,EAArB,EAAwB;AACtB,uBAAKO,iBAAL,CAAuB,KAAKP,QAA5B;AACD;;;;;;;;;;;;;;;;;;;yGAGqBA,Q;;;;;;;uBACEN,GAAG,CAACc,OAAJ,CAAYb,gBAAgB,CAACE,SAAD,EAAY;AAAEY,kBAAAA,MAAM,EAAE;AAAC,gCAAW;AAACC,sBAAAA,EAAE,EAAEV;AAAL;AAAZ;AAAV,iBAAZ,CAA5B,C;;;AAAlBW,gBAAAA,Q;;AACN,oBAAI,CAACA,QAAQ,CAACC,IAAT,CAAcf,SAAd,CAAwBgB,KAAxB,CAA8BC,MAAnC,EAA0C;AACxC,uBAAKhB,UAAL;AACD,iBAFD,MAGI;AACF,uBAAKG,MAAL,GAAcU,QAAQ,CAACC,IAAT,CAAcf,SAAd,CAAwBgB,KAAxB,CAA8B,CAA9B,EAAiCE,EAA/C;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAID,oBAAG;AACKC,kBAAAA,OADL,GACe;AACdD,oBAAAA,EAAE,EAAE,IAAIE,IAAJ,GAAWC,OAAX,KAAuB,KAAKC,QADlB;AAEdnB,oBAAAA,QAAQ,EAAE,KAAKmB;AAFD,mBADf;AAKDzB,kBAAAA,GAAG,CAACc,OAAJ,CAAYb,gBAAgB,CAACG,WAAD,EAAa;AAAEsB,oBAAAA,KAAK,EAAEJ;AAAT,mBAAb,CAA5B,EACGK,IADH,CACQ,KAAKjB,IAAL,CAAUW,EAAV,GAAeC,OAAO,CAACD,EAD/B,EAEGO,KAFH,CAES,UAAAC,KAAK;AAAA,2BAAI,KAAI,CAACA,KAAL,GAAaC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAjB;AAAA,mBAFd;AAGAlB,kBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBU,OAAvB;AACD,iBATD,CAUA,OAAMU,GAAN,EAAU;AACRrB,kBAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CoB,GAA5C;AACD;;;;;;;;;;;;;;;;;;;KAIL;AACA;AACA;AACA;;;AAEA,eAAe,IAAI3B,IAAJ,EAAf","sourcesContent":["import API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { listUsers } from '../graphql/queries';\nimport { createUser } from \"../graphql/mutations\";\n// import { observable, decorate } from 'mobx'\n\nclass User {\n  constructor(){\n    this.username = ''\n    this.userid = ''\n    this.init()\n  }\n\n  async init() {\n    try{\n      const user = await Auth.currentAuthenticatedUser()\n      this.username = user.username\n    } catch (err) {\n      console.log('error getting user data... ', err)\n    }\n    console.log('username:',this.username)\n    if(this.username !== ''){\n      this.checkIfUserExists(this.username)\n    }\n  }\n\n  async checkIfUserExists(username) {\n    const userdata =  await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: username}}}))\n    if (!userdata.data.listUsers.items.length){\n      this.createUser()\n    }\n    else{\n      this.userid = userdata.data.listUsers.items[0].id\n    }\n  }\n\n  async createUser() {\n    try{\n      const newuser = {\n        id: new Date().getTime() + this.userName,\n        username: this.userName\n      }\n      API.graphql(graphqlOperation(createUser, { input: newuser }))\n        .then(this.user.id = newuser.id)\n        .catch(error => this.error = JSON.stringify(error))\n      console.log('newuser:',newuser)\n    }\n    catch(err){\n      console.log('error creating user data... ', err)\n    }\n  }\n}\n\n// decorate(User, {\n//   username: observable,\n//   userid: observable\n// });\n\nexport default new User()\n"]}]}