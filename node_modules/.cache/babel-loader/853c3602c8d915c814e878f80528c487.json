{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js!/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue","mtime":1590070063000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["room.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<!-- 待機部屋の画面、部屋が作られると一覧が表示される -->\n<div>\n<header>\n<h1 class=\"headline\">\n  <a>みんラジ!</a>\n</h1>\n <ul class=\"nav-list\">\n      <li class=\"nav-list-item\"><router-link to=\"/\" id=\"back-home-button\"> ホーム</router-link></li>\n      <li class=\"nav-list-item\"><!-- 部屋を作成する画面に移動 --><router-link to=\"/room_create\" id=\"create-room-button\">ルームを作成する</router-link></li>\n      <li class=\"nav-list-item\"> <amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n  <!--<router-link\n    :to=\"{\n      name: '/', \n      hash: '#hashtag'\n      }\"\n  >ルームを作成する</router-link>-->\n</header>\n<main>\n  <section>\n    <section>\n      <h2>ルーム広場</h2>\n      <p>ここはルームに入る待機場所です。「ルームを作成する」ボタンを押したら、ルームを作成するページに移動するので\n      そこでルームを作成してください。\n      </p>\n      <router-link to=\"/room_create\" id=\"create-room-button\">ルームを作成する</router-link>\n    </section>\n   \n      <!-- 部屋情報を一つずつ取ってきて表示する、押すとそれぞれの画面に移動する -->\n    <section>\n      <!-- <calendar></calendar> -->\n      <FullCalendar \n        default-view=\"dayGridMonth\"\n        :locale=\"locale\"\n        :header=\"calendarHeader\"\n        :weekends=\"calendarWeekends\"\n        :plugins=\"calendarPlugins\"\n        :events=\"calendarEvents\"\n      /> \n      <div class=\"main-contents\">\n      <h2>作成したルーム一覧</h2>\n      <p>作成されたルーム一覧です。自分が作ったルームに入りましょう。</p>\n      <!--<router-link to=\"/signout\" id=\"back-home-button\"> ホームに戻る</router-link>-->\n      <div id='room' v-for=\"room in rooms\" :key=\"room.id\">\n        <button id = \"go-room-button\" v-on:click=\"gotoroom(room.id)\">{{room.id}}</button>\n        参加者 : {{members[0]}} 名\n      </div>\n      <div class=\"error\">{{ this.error }}</div>\n      </div>\n    </section>\n    \n  </section>\n</main>\n\n</div>\n</template>\n\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { createUser } from \"../graphql/mutations\";\nimport { updateUser } from \"../graphql/mutations\";\nimport { listRooms } from '../graphql/queries';\nimport { getRoom } from '../graphql/queries';\nimport { listUsers } from '../graphql/queries';\nimport router from '../router/router'\n\nimport FullCalendar from '@fullcalendar/vue'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport jaLocale from \"@fullcalendar/core/locales/ja\"; // 日本語化用\n\n// import calendar from './calendar'\n\nwindow.LOG_LEVEL = 'VERBOSE';\nexport default {\n  name: 'chat',\n  components: {\n    FullCalendar // make the <FullCalendar> tag available\n    // calendar\n  },\n  data(){\n    return {\n      userName: \"\",\n      members: [],\n      // subscription: {},\n      error: \"\",\n      rooms: [],\n      room_id: \"\",\n\n      // ここからカレンダー\n      locale: jaLocale, // 日本語化\n      // カレンダーヘッダーのデザイン\n      calendarHeader: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,Week,Day,listWeek\"\n      },\n      calendarWeekends: true, // 土日を表示するか\n      // カレンダーで使用するプラグイン\n      calendarPlugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      // カレンダーに表示するスケジュール一覧\n      calendarEvents: [\n        // TODO: データベースから取ってきたやつを反映できるようにする。\n        {\n          title: \"報告会\",\n          start: \"2020-03-10T10:00:00\",\n          end: \"2020-03-10T12:30:00\"\n        },\n        {\n          title: \"ミーティング\",\n          start: \"2020-03-12T10:30:00\",\n          end: \"2020-03-12T12:30:00\"\n        },\n        {\n          title: \"打ち合わせ\",\n          start: \"2020-03-18T13:30:00\",\n          end: \"2020-03-18T14:30:00\"\n        }\n      ]\n    }\n  },\n  methods :{\n    async fetch(){\n      const room_temp = await API.graphql(graphqlOperation(listRooms,{limit:10}))\n      this.rooms = room_temp.data.listRooms.items\n      console.log(room_temp.data.listRooms.items)\n      for(let i = 0; i < this.rooms.length; i++){\n        let member = await API.graphql(graphqlOperation(getRoom,{id: this.rooms[i].id}))\n        this.members.push(member.getRoom.users.items.length)\n      }\n      console.log(this.rooms)\n    },\n    async gotoroom(temp){\n      //ユーザーの認証とかをやる\n      const roomid = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n      const userroom = roomid.data.listUsers.items[0]\n      console.log(\"this user's room is \" + userroom)\n      // if (!userroom.roomid){\n      console.log(document.getElementById(\"room\").textContent)\n      var room_a = await API.graphql(graphqlOperation(getRoom,{id: temp}))\n      console.log(\"??? \" + room_a.data.getRoom.users.items)\n      this.members = room_a.data.getRoom.users.items\n      var room = room_a.data.getRoom.users\n      console.log(\"this room id is \" + room.id)\n      const userroomid = {\n        id: userroom.id,\n        username: this.userName,\n        userRoomidId: room.id\n      }\n      console.log(userroomid)\n      await API.graphql(graphqlOperation(updateUser, { input: userroomid }))\n        .catch(error => this.error = JSON.stringify(error))\n      // }\n      // else{\n      //   console.log('already room in')\n      // }\n      router.push('/room/in')\n    },\n    eventsCreate() {\n    //  if (confirm(\"新しいスケジュールを\" + arg.dateStr + \"に追加しますか ?\")) {\n        this.calendarEvents.push({\n          title: this.rooms.title,\n          start: new Date()\n        });\n        console.log(this.rooms.title)\n    //  }\n    }\n  },\n  async created(){\n    this.userName = (await Auth.currentAuthenticatedUser()).username;\n    var user = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n    console.log(user.data.listUsers.items.length)\n    console.log(!user.data.listUsers.items.length)\n    if (!user.data.listUsers.items.length){\n      const newuser = {\n        id: new Date().getTime() + this.userName,\n        username: this.userName\n      }\n      API.graphql(graphqlOperation(createUser, { input: newuser }))\n        .catch(error => this.error = JSON.stringify(error))\n      console.log(newuser)\n    }\n    console.log(\"fetch started!!\")\n    this.fetch()\n    console.log(\"fetch finished!!\")\n    console.log(this.rooms)\n    this.eventsCreate()\n    console.log(\"Events created!!\")\n  }\n}\n</script>\n\n<style>\n  @import './chat.css';\n  @import '~@fullcalendar/core/main.css';\n  @import '~@fullcalendar/daygrid/main.css';\n</style>"],"sourceRoot":"src/components"}]}