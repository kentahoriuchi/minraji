{"remainingRequest":"/home/mech-user/Documents/minraji/node_modules/babel-loader/lib/index.js!/home/mech-user/Documents/minraji/node_modules/eslint-loader/index.js??ref--13-0!/home/mech-user/Documents/minraji/src/mobx/UserStore.js","dependencies":[{"path":"/home/mech-user/Documents/minraji/src/mobx/UserStore.js","mtime":1590498156655},{"path":"/home/mech-user/Documents/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1590498027979},{"path":"/home/mech-user/Documents/minraji/node_modules/babel-loader/lib/index.js","mtime":1590498027871},{"path":"/home/mech-user/Documents/minraji/node_modules/eslint-loader/index.js","mtime":1590498028235}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gaW1wb3J0IEFQSSwgeyAgZ3JhcGhxbE9wZXJhdGlvbiB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9hcGknOwovLyBpbXBvcnQgeyBBdXRoIH0gZnJvbSAnYXdzLWFtcGxpZnknCi8vIGltcG9ydCB7IGxpc3RVc2VycyB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7Ci8vIGltcG9ydCB7IGNyZWF0ZVVzZXIgfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7Ci8vIC8vIGltcG9ydCB7IG9ic2VydmFibGUsIGRlY29yYXRlIH0gZnJvbSAnbW9ieCcKLy8gY2xhc3MgVXNlciB7Ci8vICAgY29uc3RydWN0b3IoKXsKLy8gICAgIHRoaXMudXNlck5hbWUgPSAnJwovLyAgICAgdGhpcy51c2VyaWQgPSAnJwovLyAgICAgdGhpcy5pbml0KCkKLy8gICB9Ci8vICAgYXN5bmMgaW5pdCgpIHsKLy8gICAgIHRyeXsKLy8gICAgICAgY29uc3QgdXNlciA9IGF3YWl0IEF1dGguY3VycmVudEF1dGhlbnRpY2F0ZWRVc2VyKCkKLy8gICAgICAgdGhpcy51c2VyTmFtZSA9IHVzZXIudXNlcm5hbWUKLy8gICAgIH0gY2F0Y2ggKGVycikgewovLyAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgZ2V0dGluZyB1c2VyIGRhdGEuLi4gJywgZXJyKQovLyAgICAgfQovLyAgICAgY29uc29sZS5sb2coJ3VzZXJuYW1lOicsdGhpcy51c2VyTmFtZSkKLy8gICAgIGlmKHRoaXMudXNlck5hbWUgIT09ICcnKXsKLy8gICAgICAgdGhpcy5jaGVja0lmVXNlckV4aXN0cyh0aGlzLnVzZXJOYW1lKQovLyAgICAgfQovLyAgIH0KLy8gICBhc3luYyBjaGVja0lmVXNlckV4aXN0cyh1c2VybmFtZSkgewovLyAgICAgY29uc3QgdXNlcmRhdGEgPSAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihsaXN0VXNlcnMsIHsgZmlsdGVyOiB7J3VzZXJuYW1lJzp7ZXE6IHVzZXJuYW1lfX19KSkKLy8gICAgIGNvbnNvbGUubG9nKHVzZXJkYXRhLmRhdGEubGlzdFVzZXJzLml0ZW1zKQovLyAgICAgaWYgKCF1c2VyZGF0YS5kYXRhLmxpc3RVc2Vycy5pdGVtcy5sZW5ndGgpewovLyAgICAgICB0aGlzLmNyZWF0ZVVzZXIoKQovLyAgICAgfQovLyAgICAgZWxzZXsKLy8gICAgICAgY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLScpCi8vICAgICAgIHRoaXMudXNlcmlkID0gdXNlcmRhdGEuZGF0YS5saXN0VXNlcnMuaXRlbXNbMF0uaWQKLy8gICAgIH0KLy8gICB9Ci8vICAgYXN5bmMgY3JlYXRlVXNlcigpIHsKLy8gICAgIHRyeXsKLy8gICAgICAgY29uc3QgbmV3dXNlciA9IHsKLy8gICAgICAgICBpZDogbmV3IERhdGUoKS5nZXRUaW1lKCkgKyB0aGlzLnVzZXJOYW1lLAovLyAgICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJOYW1lCi8vICAgICAgIH0KLy8gICAgICAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihjcmVhdGVVc2VyLCB7IGlucHV0OiBuZXd1c2VyIH0pKQovLyAgICAgICB0aGlzLnVzZXIuaWQgPSBuZXd1c2VyLmlkCi8vICAgICAgIGNvbnNvbGUubG9nKCduZXd1c2VyOicsbmV3dXNlcikKLy8gICAgIH0KLy8gICAgIGNhdGNoKGVycil7Ci8vICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBjcmVhdGluZyB1c2VyIGRhdGEuLi4gJywgZXJyKQovLyAgICAgfQovLyAgIH0KLy8gfQovLyAvLyBkZWNvcmF0ZShVc2VyLCB7Ci8vIC8vICAgdXNlcm5hbWU6IG9ic2VydmFibGUsCi8vIC8vICAgdXNlcmlkOiBvYnNlcnZhYmxlCi8vIC8vIH0pOwovLyBleHBvcnQgZGVmYXVsdCBuZXcgVXNlcigp"},{"version":3,"sources":["/home/mech-user/Documents/minraji/src/mobx/UserStore.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import API, {  graphqlOperation } from '@aws-amplify/api';\n// import { Auth } from 'aws-amplify'\n// import { listUsers } from '../graphql/queries';\n// import { createUser } from \"../graphql/mutations\";\n// // import { observable, decorate } from 'mobx'\n\n// class User {\n//   constructor(){\n//     this.userName = ''\n//     this.userid = ''\n//     this.init()\n//   }\n\n//   async init() {\n//     try{\n//       const user = await Auth.currentAuthenticatedUser()\n//       this.userName = user.username\n//     } catch (err) {\n//       console.log('error getting user data... ', err)\n//     }\n//     console.log('username:',this.userName)\n//     if(this.userName !== ''){\n//       this.checkIfUserExists(this.userName)\n//     }\n//   }\n\n//   async checkIfUserExists(username) {\n//     const userdata =  await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: username}}}))\n//     console.log(userdata.data.listUsers.items)\n//     if (!userdata.data.listUsers.items.length){\n//       this.createUser()\n//     }\n//     else{\n//       console.log('------------')\n//       this.userid = userdata.data.listUsers.items[0].id\n//     }\n//   }\n\n//   async createUser() {\n//     try{\n//       const newuser = {\n//         id: new Date().getTime() + this.userName,\n//         username: this.userName\n//       }\n//       await API.graphql(graphqlOperation(createUser, { input: newuser }))\n//       this.user.id = newuser.id\n        \n//       console.log('newuser:',newuser)\n//     }\n//     catch(err){\n//       console.log('error creating user data... ', err)\n//     }\n//   }\n// }\n\n// // decorate(User, {\n// //   username: observable,\n// //   userid: observable\n// // });\n\n// export default new User()\n"]}]}