{"remainingRequest":"/home/mech-user/Documents/minraji/node_modules/thread-loader/dist/cjs.js!/home/mech-user/Documents/minraji/node_modules/babel-loader/lib/index.js!/home/mech-user/Documents/minraji/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mech-user/Documents/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mech-user/Documents/minraji/src/components/chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mech-user/Documents/minraji/src/components/chat.vue","mtime":1590498028927},{"path":"/home/mech-user/Documents/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1590498027979},{"path":"/home/mech-user/Documents/minraji/node_modules/thread-loader/dist/cjs.js","mtime":1590498028787},{"path":"/home/mech-user/Documents/minraji/node_modules/babel-loader/lib/index.js","mtime":1590498027871},{"path":"/home/mech-user/Documents/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1590498027979},{"path":"/home/mech-user/Documents/minraji/node_modules/vue-loader/lib/index.js","mtime":1590498028819}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbWVjaC11c2VyL0RvY3VtZW50cy9taW5yYWppL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEFQSSwgeyBncmFwaHFsT3BlcmF0aW9uIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2FwaSc7CmltcG9ydCB7IEF1dGggfSBmcm9tICdhd3MtYW1wbGlmeSc7CmltcG9ydCB7IGNyZWF0ZU1lc3NhZ2UgfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7CmltcG9ydCB7IGxpc3RNZXNzYWdlcyB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7CmltcG9ydCB7IG9uQ3JlYXRlTWVzc2FnZSB9IGZyb20gJy4uL2dyYXBocWwvc3Vic2NyaXB0aW9ucyc7CndpbmRvdy5MT0dfTEVWRUwgPSAnVkVSQk9TRSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY2hhdCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lc3NhZ2VzOiBbXSwKICAgICAgY29udGVudDogIiIsCiAgICAgIHVzZXJOYW1lOiAiIiwKICAgICAgc3Vic2NyaXB0aW9uOiB7fSwKICAgICAgZXJyb3I6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc2VuZE1lc3NhZ2U6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8gVE9ETygxKSBHcmFwaFFM44Ko44Oz44OJ44Od44Kk44Oz44OI44GrbXV0YXRpb27jgpLnmbrooYzjgZfjgIHjg6Hjg4Pjgrvjg7zjgrjjgpLnmbvpjLLjgZnjgosKICAgICAgaWYgKGV2ZW50LmtleUNvZGUgIT09IDEzKSByZXR1cm47IC8vIEVudGVy44Kt44O844Gu5aC05ZCI44Gu44G/6YCB5L+h5Yem55CG44KS6KGM44GGCgogICAgICB2YXIgbWVzc2FnZSA9IHsKICAgICAgICBpZDogbmV3IERhdGUoKS5nZXRUaW1lKCkgKyB0aGlzLnVzZXJOYW1lLAogICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJOYW1lLAogICAgICAgIGNvbnRlbnQ6IHRoaXMuY29udGVudAogICAgICB9OyAvLyBNdXRhdGlvbuOBruWun+ihjAoKICAgICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihjcmVhdGVNZXNzYWdlLCB7CiAgICAgICAgaW5wdXQ6IG1lc3NhZ2UKICAgICAgfSkpLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHJldHVybiBfdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKTsKICAgICAgfSk7CiAgICAgIHRoaXMuY29udGVudCA9ICIiOwogICAgfSwKICAgIGZldGNoOiBmdW5jdGlvbiBmZXRjaCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICAvLyBUT0RPKDIpIEdyYXBoUUzjgqjjg7Pjg4njg53jgqTjg7Pjg4jjgatxdWVyeeOCkueZuuihjOOBl+OAgeODoeODg+OCu+ODvOOCuOS4gOimp+OCkuWPluW+l+OBmeOCiwogICAgICBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGxpc3RNZXNzYWdlcywgewogICAgICAgIGxpbWl0OiAxMDAKICAgICAgfSkpLnRoZW4oZnVuY3Rpb24gKG1lc3NhZ2VzKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5tZXNzYWdlcyA9IG1lc3NhZ2VzLmRhdGEubGlzdE1lc3NhZ2VzLml0ZW1zLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgIHJldHVybiBhLmlkID4gYi5pZCA/IDEgOiAtMTsKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgc3Vic2NyaWJlOiBmdW5jdGlvbiBzdWJzY3JpYmUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgLy8gVE9ETygzLTEpIEdyYXBoUUzjgqjjg7Pjg4njg53jgqTjg7Pjg4jjgatzdWJzY3JpcHRpb27jgpLnmbrooYzjgZfjgIFtdXRhdGlvbuOCkuebo+imluOBmeOCiwogICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24ob25DcmVhdGVNZXNzYWdlKSkuc3Vic2NyaWJlKHsKICAgICAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KGV2ZW50RGF0YSkgewogICAgICAgICAgdmFyIG1lc3NhZ2UgPSBldmVudERhdGEudmFsdWUuZGF0YS5vbkNyZWF0ZU1lc3NhZ2U7CgogICAgICAgICAgX3RoaXMzLm1lc3NhZ2VzLnB1c2gobWVzc2FnZSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgICAvLyBUT0RPKDMtMikg44OB44Oj44OD44OI55S76Z2i44GL44KJ6Zui44KM44KL6Zqb44Gr44CBVW5TdWJzY3JpYmXjgZnjgosKICAgICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTsKICAgIH0sCiAgICBzY3JvbGxCb3R0b206IGZ1bmN0aW9uIHNjcm9sbEJvdHRvbSgpIHsKICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoIi5tZXNzYWdlX2Jhc2UiKTsKICAgICAgY29udGFpbmVyLnNjcm9sbFRvcCA9IGNvbnRhaW5lci5zY3JvbGxIZWlnaHQ7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBBdXRoLmN1cnJlbnRBdXRoZW50aWNhdGVkVXNlcigpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIF90aGlzNC51c2VyTmFtZSA9IF9jb250ZXh0LnNlbnQudXNlcm5hbWU7CgogICAgICAgICAgICAgIF90aGlzNC5mZXRjaCgpOwoKICAgICAgICAgICAgICBfdGhpczQuc3Vic2NyaWJlKCk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgey8vIFRPRE8oMy0yKSDjg4Hjg6Pjg4Pjg4jnlLvpnaLjgYvjgonpm6LjgozjgovpmpvjgavjgIFVblN1YnNjcmliZeOBmeOCiwogIH0sCiAgdXBkYXRlZDogZnVuY3Rpb24gdXBkYXRlZCgpIHsKICAgIHRoaXMuc2Nyb2xsQm90dG9tKCk7CiAgfQp9Ow=="},{"version":3,"sources":["chat.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n<header>\n<h1 class=\"headline\">\n      <a>みんラジ!</a>\n</h1>\n</header>\n\n<main>\n  <div class=\"title\">\n    <h2>Amplifyで作るチャットアプリ</h2>\n  </div>\n  <div class=\"main-contents\">\n    <div class=\"message_base\">\n        <div v-for=\"message in messages\" :key=\"message.id\">\n          <div v-bind:class=\"[message.username === userName ? 'message' : 'message_opponent']\">{{message.content}}</div>\n          <div v-bind:class=\"[message.username === userName ? 'username' : 'username_opponent']\">{{message.username}}</div>\n        </div>\n    </div>\n    <!-- <el-input placeholder=\"メッセージを入力(Enterで送信)\" v-model=\"content\" @keydown.enter.native=\"sendMessage\"></el-input> -->\n    <div class=\"error\">{{ this.error }}</div>\n  </div>\n  aaaaa\n\n  </main>\n\n  \n</div>  \n</template>\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { createMessage } from \"../graphql/mutations\";\nimport { listMessages } from '../graphql/queries';\nimport { onCreateMessage } from '../graphql/subscriptions';\nwindow.LOG_LEVEL = 'VERBOSE';\nexport default {\n\n  name: 'chat',\n  data(){\n    return {\n      messages: [],\n      content: \"\",\n      userName: \"\",\n      subscription: {},\n      error: \"\"\n    }\n  },\n  methods :{\n    sendMessage(){\n      // TODO(1) GraphQLエンドポイントにmutationを発行し、メッセージを登録する\n      if (event.keyCode !== 13) return // Enterキーの場合のみ送信処理を行う\n      const message = {\n          id: new Date().getTime() + this.userName,\n          username: this.userName,\n          content: this.content\n      }\n      // Mutationの実行\n      API.graphql(graphqlOperation(createMessage, { input: message }))\n        .catch(error => this.error = JSON.stringify(error))\n      this.content = \"\"\n  },\n    fetch(){\n    // TODO(2) GraphQLエンドポイントにqueryを発行し、メッセージ一覧を取得する\n    API.graphql(graphqlOperation(listMessages, { limit: 100 }))\n      .then(messages => this.messages = messages.data.listMessages.items.sort((a,b) => a.id > b.id ? 1 : -1))\n      .catch(error => this.error = JSON.stringify(error))\n  },\n    subscribe(){\n      // TODO(3-1) GraphQLエンドポイントにsubscriptionを発行し、mutationを監視する\n      this.subscription = API.graphql(graphqlOperation(onCreateMessage)).subscribe({\n        next: (eventData) => {\n          const message = eventData.value.data.onCreateMessage;\n          this.messages.push(message);\n        }\n      })\n    },\n    beforeDestroy() {\n      // TODO(3-2) チャット画面から離れる際に、UnSubscribeする\n      this.subscription.unsubscribe();\n    },\n    scrollBottom() {\n      const container = this.$el.querySelector(\".message_base\");\n      container.scrollTop = container.scrollHeight;\n    }\n  },\n  async created(){\n    this.userName = (await Auth.currentAuthenticatedUser()).username;\n    this.fetch()\n    this.subscribe()\n  },\n  beforeDestroy() {\n    // TODO(3-2) チャット画面から離れる際に、UnSubscribeする\n  },\n  updated: function () {\n    this.scrollBottom()\n  }\n}\n</script>\n\n<style src=\"./chat.css\" />\n\n"],"sourceRoot":"src/components"}]}