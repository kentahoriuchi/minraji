{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js!/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue","mtime":1589977555000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvdmFncmFudC93b3Jrc3BhY2UvbWlucmFqaS91dHNwcmludC9taW5yYWppL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEFQSSwgeyBncmFwaHFsT3BlcmF0aW9uIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2FwaSc7CmltcG9ydCB7IEF1dGggfSBmcm9tICdhd3MtYW1wbGlmeSc7CmltcG9ydCB7IGNyZWF0ZVVzZXIgfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7CmltcG9ydCB7IHVwZGF0ZVVzZXIgfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7CmltcG9ydCB7IGxpc3RSb29tcyB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7CmltcG9ydCB7IGxpc3RVc2VycyB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyL3JvdXRlcic7CmltcG9ydCBjYWxlbmRhciBmcm9tICIuL2NhbGVuZGFyIjsKd2luZG93LkxPR19MRVZFTCA9ICdWRVJCT1NFJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdjaGF0JywKICBjb21wb25lbnRzOiB7CiAgICBjYWxlbmRhcjogY2FsZW5kYXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyTmFtZTogIiIsCiAgICAgIC8vIHN1YnNjcmlwdGlvbjoge30sCiAgICAgIGVycm9yOiAiIiwKICAgICAgcm9vbXM6IFtdLAogICAgICByb29tX2lkOiAiIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoOiBmdW5jdGlvbiBmZXRjaCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obGlzdFJvb21zLCB7CiAgICAgICAgbGltaXQ6IDEwCiAgICAgIH0pKS50aGVuKGZ1bmN0aW9uIChyb29tcykgewogICAgICAgIHJldHVybiBfdGhpcy5yb29tcyA9IHJvb21zLmRhdGEubGlzdFJvb21zLml0ZW1zOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gX3RoaXMuZXJyb3IgPSBKU09OLnN0cmluZ2lmeShlcnJvcik7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyh0aGlzLnJvb21zKTsKICAgIH0sCiAgICBnb3Rvcm9vbTogZnVuY3Rpb24gZ290b3Jvb20odGVtcCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJvb21pZCwgdXNlcnJvb20sIHJvb21fYSwgcm9vbSwgdXNlcnJvb21pZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGxpc3RVc2VycywgewogICAgICAgICAgICAgICAgICBmaWx0ZXI6IHsKICAgICAgICAgICAgICAgICAgICAndXNlcm5hbWUnOiB7CiAgICAgICAgICAgICAgICAgICAgICBlcTogX3RoaXMyLnVzZXJOYW1lCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJvb21pZCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICB1c2Vycm9vbSA9IHJvb21pZC5kYXRhLmxpc3RVc2Vycy5pdGVtc1swXTsgLy8gY29uc29sZS5sb2codXNlcnJvb20ucm9vbWlkKQogICAgICAgICAgICAgICAgLy8gaWYgKCF1c2Vycm9vbS5yb29taWQpewoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyb29tIikudGV4dENvbnRlbnQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihsaXN0Um9vbXMsIHsKICAgICAgICAgICAgICAgICAgZmlsdGVyOiB7CiAgICAgICAgICAgICAgICAgICAgJ2lkJzogewogICAgICAgICAgICAgICAgICAgICAgZXE6IHRlbXAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgcm9vbV9hID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJvb20gPSByb29tX2EuZGF0YS5saXN0Um9vbXMuaXRlbXNbMF07CiAgICAgICAgICAgICAgICB1c2Vycm9vbWlkID0gewogICAgICAgICAgICAgICAgICBpZDogdXNlcnJvb20uaWQsCiAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBfdGhpczIudXNlck5hbWUsCiAgICAgICAgICAgICAgICAgIHVzZXJSb29taWRJZDogcm9vbS5pZAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJyb29taWQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgcmV0dXJuIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24odXBkYXRlVXNlciwgewogICAgICAgICAgICAgICAgICBpbnB1dDogdXNlcnJvb21pZAogICAgICAgICAgICAgICAgfSkpLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLmVycm9yID0gSlNPTi5zdHJpbmdpZnkoZXJyb3IpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgICAgICAvLyBlbHNlewogICAgICAgICAgICAgICAgLy8gICBjb25zb2xlLmxvZygnYWxyZWFkeSByb29tIGluJykKICAgICAgICAgICAgICAgIC8vIH0KICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKCcvcm9vbS9pbicpOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgdXNlciwgbmV3dXNlcjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIEF1dGguY3VycmVudEF1dGhlbnRpY2F0ZWRVc2VyKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgX3RoaXMzLnVzZXJOYW1lID0gX2NvbnRleHQyLnNlbnQudXNlcm5hbWU7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGxpc3RVc2VycywgewogICAgICAgICAgICAgICAgZmlsdGVyOiB7CiAgICAgICAgICAgICAgICAgICd1c2VybmFtZSc6IHsKICAgICAgICAgICAgICAgICAgICBlcTogX3RoaXMzLnVzZXJOYW1lCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgdXNlciA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXIuZGF0YS5saXN0VXNlcnMuaXRlbXMubGVuZ3RoKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyghdXNlci5kYXRhLmxpc3RVc2Vycy5pdGVtcy5sZW5ndGgpOwoKICAgICAgICAgICAgICBpZiAoIXVzZXIuZGF0YS5saXN0VXNlcnMuaXRlbXMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBuZXd1c2VyID0gewogICAgICAgICAgICAgICAgICBpZDogbmV3IERhdGUoKS5nZXRUaW1lKCkgKyBfdGhpczMudXNlck5hbWUsCiAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBfdGhpczMudXNlck5hbWUKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGNyZWF0ZVVzZXIsIHsKICAgICAgICAgICAgICAgICAgaW5wdXQ6IG5ld3VzZXIKICAgICAgICAgICAgICAgIH0pKS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cobmV3dXNlcik7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfdGhpczMuZmV0Y2goKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["room.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<!-- 待機部屋の画面、部屋が作られると一覧が表示される -->\n<div>\n<header>\n<h1 class=\"headline\">\n  <a>みんラジ!</a>\n</h1>\n <ul class=\"nav-list\">\n      <li class=\"nav-list-item\"><router-link to=\"/signout\" id=\"back-home-button\"> ホーム</router-link></li>\n      <li class=\"nav-list-item\"> <amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n  <!--<router-link\n    :to=\"{\n      name: '/', \n      hash: '#hashtag'\n      }\"\n  >ルームを作成する</router-link>-->\n</header>\n<main>\n  <section>\n    <section>\n      <h2>ルーム広場</h2>\n      <p>ここはルームに入る待機場所です。「ルームを作成する」ボタンを押したらルームを作成できます。</p>\n    </section>\n   \n    \n      <!-- 部屋を作成する画面に移動 -->\n      <router-link to=\"/room_create\" id=\"create-room-button\">ルームを作成する</router-link>\n\n\n    <!-- 部屋情報を一つずつ取ってきて表示する、押すとそれぞれの画面に移動する -->\n    \n    <section>\n      <calendar></calendar>\n      <div class=\"main-contents\">\n      <h2>作成したルーム一覧</h2>\n      <p>作成されたルーム一覧です。自分が作ったルームに入りましょう。</p>\n      <!--<router-link to=\"/signout\" id=\"back-home-button\"> ホームに戻る</router-link>-->\n      <div id='room' v-for=\"room in rooms\" :key=\"room.id\">\n        <button id = \"go-room-button\" v-on:click=\"gotoroom(room.id)\">{{room.id}}</button>\n      </div>\n      <div class=\"error\">{{ this.error }}</div>\n      </div>\n    </section>\n      \n    \n  </section>\n</main>\n\n</div>\n</template>\n\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { createUser } from \"../graphql/mutations\";\nimport { updateUser } from \"../graphql/mutations\";\nimport { listRooms } from '../graphql/queries';\nimport { listUsers } from '../graphql/queries';\nimport router from '../router/router'\nimport calendar from \"./calendar\"\n\nwindow.LOG_LEVEL = 'VERBOSE';\nexport default {\n  name: 'chat',\n  components: {\n    calendar\n  },\n  data(){\n    return {\n      userName: \"\",\n      // subscription: {},\n      error: \"\",\n      rooms: [],\n      room_id: \"\"\n    }\n  },\n  methods :{\n    fetch(){\n      API.graphql(graphqlOperation(listRooms,{limit:10}))\n        .then(rooms => this.rooms = rooms.data.listRooms.items)\n        .catch(error => this.error = JSON.stringify(error))\n      console.log(this.rooms)\n    },\n    async gotoroom(temp){\n      //ユーザーの認証とかをやる\n      const roomid = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n      const userroom = roomid.data.listUsers.items[0]\n      // console.log(userroom.roomid)\n      // if (!userroom.roomid){\n      console.log(document.getElementById(\"room\").textContent)\n      var room_a = await API.graphql(graphqlOperation(listRooms, { filter: {'id':{eq: temp}}}))\n      var room = room_a.data.listRooms.items[0]\n      const userroomid = {\n        id: userroom.id,\n        username: this.userName,\n        userRoomidId: room.id\n      }\n      console.log(userroomid)\n      await API.graphql(graphqlOperation(updateUser, { input: userroomid }))\n        .catch(error => this.error = JSON.stringify(error))\n      // }\n      // else{\n      //   console.log('already room in')\n      // }\n      router.push('/room/in')\n    }\n  },\n  async created(){\n    this.userName = (await Auth.currentAuthenticatedUser()).username;\n    var user = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n    console.log(user.data.listUsers.items.length)\n    console.log(!user.data.listUsers.items.length)\n    if (!user.data.listUsers.items.length){\n      const newuser = {\n        id: new Date().getTime() + this.userName,\n        username: this.userName\n      }\n      API.graphql(graphqlOperation(createUser, { input: newuser }))\n        .catch(error => this.error = JSON.stringify(error))\n      console.log(newuser)\n    }\n    this.fetch()\n  }\n}\n</script>\n\n<style src=\"./chat.css\" />\n"],"sourceRoot":"src/components"}]}