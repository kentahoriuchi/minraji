{"remainingRequest":"/home/mech-user/Documents/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mech-user/Documents/minraji/src/components/room_create.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mech-user/Documents/minraji/src/components/room_create.vue","mtime":1590498028931},{"path":"/home/mech-user/Documents/minraji/node_modules/babel-loader/lib/index.js","mtime":1590498027871},{"path":"/home/mech-user/Documents/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1590498027979},{"path":"/home/mech-user/Documents/minraji/node_modules/vue-loader/lib/index.js","mtime":1590498028819}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEksIHsgIGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXIvcm91dGVyJwppbXBvcnQgeyBjcmVhdGVSb29tIH0gZnJvbSAiLi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwovLyBpbXBvcnQgVXNlclN0b3JlIGZyb20gJy4uL21vYngvVXNlclN0b3JlJwppbXBvcnQgeyBBdXRoIH0gZnJvbSAnYXdzLWFtcGxpZnknCmltcG9ydCB7IGxpc3RVc2VycyB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3Jvb20nLAogIGRhdGEoKXsKICAgIHJldHVybiB7CiAgICAgIHJvb21OdW1iZXI6IFtdLAogICAgICB1c2VyRGF0YTogW10sCiAgICAgIHVzZXJOYW1lOiAiIiwKICAgICAgZXJyb3I6ICIiLAogICAgICAvLyBzdWJzY3JpcHRpb246IHt9LAogICAgfQogIH0sCiAgbWV0aG9kcyA6ewogICAgYXN5bmMgcm9vbUNyZWF0ZSgpewogICAgICBjb25zdCBpZCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgdGhpcy51c2VyTmFtZQoKICAgICAgY29uc3QgaW5wdXRtb3ZpZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtb3ZpZSIpLnZhbHVlCiAgICAgIGNvbnN0IG1vdmlldGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGl0bGUiKS52YWx1ZQogICAgICBjb25zdCByZXNlcnZlZGRhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmVzZXJ2ZWRkYXRlIikudmFsdWUKICAgICAgY29uc3QgcmVzZXJ2ZWR0aW1lID0gcmVzZXJ2ZWRkYXRlICsgIiAiICsgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJlc2VydmVkdGltZSIpLnZhbHVlICsgIjowMCIKICAgICAgdmFyIHBhc3N3b3JkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInBhc3N3b3JkIikudmFsdWUKICAgICAgY29uc3QgcHJpdmF0ZW1vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY2hlY2siKS5jaGVja2VkCgogICAgICBjb25zb2xlLmxvZyhyZXNlcnZlZHRpbWUpCiAgICAgIC8v44OX44Op44Kk44OZ44O844OI44Oi44O844OJ44Gu5pmC44CB44OR44K544Ov44O844OJ5omA5oyBCiAgICAgIGlmKCFwcml2YXRlbW9kZSl7CiAgICAgICAgcGFzc3dvcmQgPSBudWxsCiAgICAgIH0KICAgICAgaWYoIWlucHV0bW92aWUgfHwgIW1vdmlldGl0bGUgfHwgIXJlc2VydmVkdGltZSl7CiAgICAgICAgdmFyIGVycm9tZXNzYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVycm9ybWVzc2FnZSIpCiAgICAgICAgZXJyb21lc3NhZ2UuaW5uZXJIVE1MID0gIuODq+ODvOODoOaDheWgseOBjOeEoeWKueOBp+OBmSIKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBpZihwcml2YXRlbW9kZSAmJiAhcGFzc3dvcmQpewogICAgICAgIHZhciBlcnJvbWVzc2FnZXBhc3N3b3JkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVycm9ybWVzc2FnZSIpCiAgICAgICAgZXJyb21lc3NhZ2VwYXNzd29yZC5pbm5lckhUTUwgPSAi44OR44K544Ov44O844OJ44KS5YWl5Yqb44GX44Gm44GP44Gg44GV44GEIgogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKHBhc3N3b3JkKQogICAgICBjb25zdCBjcmVhdGVyb29tID0gewogICAgICAgIGlkIDogaWQsCiAgICAgICAgbW92aWUgOiBpbnB1dG1vdmllLAogICAgICAgIHRpbHRlIDogbW92aWV0aXRsZSwKICAgICAgICBudW1iZXJvZm1lbWJlciA6IDAsCiAgICAgICAgcHJpdmF0ZXBhc3N3b3JkOiBwYXNzd29yZCwKICAgICAgICByZXNlcnZlZHRpbWU6IHJlc2VydmVkdGltZQogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKGNyZWF0ZXJvb20pCiAgICAgIGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24oY3JlYXRlUm9vbSwgeyBpbnB1dDogY3JlYXRlcm9vbSB9KSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKICAgICAgcm91dGVyLnB1c2goe25hbWU6J3Jvb20nfSkKICAgIH0sCiAgICBpbml0aWFsaXplZGF0ZSgpewogICAgICB2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpOwogICAgICB0b2RheS5zZXREYXRlKHRvZGF5LmdldERhdGUoKSk7CiAgICAgIHZhciB5eXl5ID0gdG9kYXkuZ2V0RnVsbFllYXIoKTsKICAgICAgdmFyIG1tID0gKCIwIisodG9kYXkuZ2V0TW9udGgoKSsxKSkuc2xpY2UoLTIpOwogICAgICB2YXIgZGQgPSAoIjAiK3RvZGF5LmdldERhdGUoKSkuc2xpY2UoLTIpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmVzZXJ2ZWRkYXRlIikudmFsdWU9eXl5eSsnLScrbW0rJy0nK2RkOwogICAgICB2YXIgaGggPSAoIjAiKyh0b2RheS5nZXRIb3VycygpKSkuc2xpY2UoLTIpOwogICAgICB2YXIgbWluID0gKCIwIisodG9kYXkuZ2V0TWludXRlcygpKzEpKS5zbGljZSgtMik7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyZXNlcnZlZHRpbWUiKS52YWx1ZT0gaGgrJzonK21pbjsKICAgIH0sCiAgICBhc3luYyBpbml0dXNlcmRhdGEoKSB7CiAgICAgIHRyeXsKICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgQXV0aC5jdXJyZW50QXV0aGVudGljYXRlZFVzZXIoKQogICAgICAgIHRoaXMudXNlck5hbWUgPSB1c2VyLnVzZXJuYW1lCiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBnZXR0aW5nIHVzZXIgZGF0YS4uLiAnLCBlcnIpCiAgICAgIH0KICAgICAgY29uc29sZS5sb2coJ3VzZXJuYW1lOicsdGhpcy51c2VyTmFtZSkKICAgICAgaWYodGhpcy51c2VyTmFtZSAhPT0gJycpewogICAgICAgIGNvbnN0IHVzZXJkYXRhID0gIGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obGlzdFVzZXJzLCB7IGZpbHRlcjogeyd1c2VybmFtZSc6e2VxOiB0aGlzLnVzZXJOYW1lfX19KSkKICAgICAgICBjb25zb2xlLmxvZyh1c2VyZGF0YS5kYXRhLmxpc3RVc2Vycy5pdGVtc1swXS5pZCkKICAgICAgICB0aGlzLnVzZXJJZCA9IHVzZXJkYXRhLmRhdGEubGlzdFVzZXJzLml0ZW1zWzBdLmlkCiAgICAgIH0KICAgIH0sCiAgfSwKICBhc3luYyBjcmVhdGVkKCl7CiAgICBhd2FpdCB0aGlzLmluaXR1c2VyZGF0YSgpCiAgICB0aGlzLmluaXRpYWxpemVkYXRlKCkKICB9LAp9Cg=="},{"version":3,"sources":["room_create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"room_create.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- 部屋作成の画面 -->\n<div>\n<header>\n<h1 class=\"headline\">\n      <a>みんラジ!</a>\n</h1>\n  <ul class=\"nav-list\">\n      <li class=\"nav-list-item\"><router-link to=\"/\"><button id=\"back-home-button\">ホーム</button></router-link></li>\n      <li class=\"nav-list-item\"><router-link to=\"/room\"><button id=\"go-room-button\">ルーム広場に戻る</button></router-link></li>\n      <li class=\"nav-list-item\"> <amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n</header>\n<main>\n  <section>\n    <h2>ルーム作成</h2>\n    <p>ここはルーム作成ページです。ルームタイトルにルーム名を記入して、youtubeにあるラジオ体操の動画のURLを下のボックスにいれて「ルームを作る」ボタンを押してください。\n      プレイベートルームを希望の方は、「プライベートルームにする」にチェックをつけてパスワードを入力してください。\n      「ルームを作る」ボタンを押したら自動的にルーム広場に戻ります。ルーム広場では作成したルームに入ってください。\n    </p>\n    <p>\n    例えば、https://www.youtube.com/watch?v=5sYm_3z6NsQ の動画を使ってルームを作るとします。\n    URLを全部下のボックスに貼ります。\n    </p>\n  </section>\n\n  <div class=\"main-contents\">\n    <!-- 動画のidを入力させる、入力欄と送信ボタン -->\n    <form id=\"movie1\">\n      <div id=\"input1\">\n      <input id=\"title\" placeholder=\"ルームタイトルを入力してください\" size=\"30\" type='text' value=\"\"/>\n      </div>\n      <div id=\"input2\">\n        ルームの開始日時を入力してください\n        <input type=\"date\" id=\"reserveddate\"  size=\"30\" value=\"\" name=\"today\"/>\n        <input type=\"time\" id=\"reservedtime\"  size=\"30\" value=\"\" step=\"300\"/>\n      </div>\n      <div id=\"input3\">\n      <input id=\"movie\" placeholder=\"Youtubeのリンク入力をしてください\" size=\"30\" type='text' value=\"\"/>\n      </div>\n      <div id=\"input4\">\n      <input type='checkbox' id=\"check\" />プライベートルームにする\n      </div>\n      <p id=\"errormessage\"></p>\n      <div id=\"input5\">\n        <input id=\"password\" placeholder=\"パスワードを入力してください\" size=\"30\" type='text' value=\"\"/>\n      </div>\n      <div id=\"input6\">\n      <input type=\"button\" v-on:click=\"roomCreate\" value=\"ルームを作る\" id=\"room-create-button\">\n      </div>\n    </form>\n    \n    <div class=\"error\">{{ this.error }}</div>\n  </div>\n  <!--<router-link to=\"/room\" id=\"back-room-button\">ルーム広場に戻る</router-link>-->\n </main>\n</div>\n</template>\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport router from '../router/router'\nimport { createRoom } from \"../graphql/mutations\";\n// import UserStore from '../mobx/UserStore'\nimport { Auth } from 'aws-amplify'\nimport { listUsers } from '../graphql/queries';\n\nexport default {\n  name: 'room',\n  data(){\n    return {\n      roomNumber: [],\n      userData: [],\n      userName: \"\",\n      error: \"\",\n      // subscription: {},\n    }\n  },\n  methods :{\n    async roomCreate(){\n      const id = new Date().getTime() + this.userName\n\n      const inputmovie = document.getElementById(\"movie\").value\n      const movietitle = document.getElementById(\"title\").value\n      const reserveddate = document.getElementById(\"reserveddate\").value\n      const reservedtime = reserveddate + \" \" + document.getElementById(\"reservedtime\").value + \":00\"\n      var password = document.getElementById(\"password\").value\n      const privatemode = document.getElementById(\"check\").checked\n\n      console.log(reservedtime)\n      //プライベートモードの時、パスワード所持\n      if(!privatemode){\n        password = null\n      }\n      if(!inputmovie || !movietitle || !reservedtime){\n        var erromessage = document.getElementById(\"errormessage\")\n        erromessage.innerHTML = \"ルーム情報が無効です\"\n        return\n      }\n      if(privatemode && !password){\n        var erromessagepassword = document.getElementById(\"errormessage\")\n        erromessagepassword.innerHTML = \"パスワードを入力してください\"\n        return\n      }\n      console.log(password)\n      const createroom = {\n        id : id,\n        movie : inputmovie,\n        tilte : movietitle,\n        numberofmember : 0,\n        privatepassword: password,\n        reservedtime: reservedtime\n      }\n      console.log(createroom)\n      await API.graphql(graphqlOperation(createRoom, { input: createroom }))\n        .catch(error => this.error = JSON.stringify(error))\n      router.push({name:'room'})\n    },\n    initializedate(){\n      var today = new Date();\n      today.setDate(today.getDate());\n      var yyyy = today.getFullYear();\n      var mm = (\"0\"+(today.getMonth()+1)).slice(-2);\n      var dd = (\"0\"+today.getDate()).slice(-2);\n      document.getElementById(\"reserveddate\").value=yyyy+'-'+mm+'-'+dd;\n      var hh = (\"0\"+(today.getHours())).slice(-2);\n      var min = (\"0\"+(today.getMinutes()+1)).slice(-2);\n      document.getElementById(\"reservedtime\").value= hh+':'+min;\n    },\n    async inituserdata() {\n      try{\n        const user = await Auth.currentAuthenticatedUser()\n        this.userName = user.username\n      } catch (err) {\n        console.log('error getting user data... ', err)\n      }\n      console.log('username:',this.userName)\n      if(this.userName !== ''){\n        const userdata =  await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n        console.log(userdata.data.listUsers.items[0].id)\n        this.userId = userdata.data.listUsers.items[0].id\n      }\n    },\n  },\n  async created(){\n    await this.inituserdata()\n    this.initializedate()\n  },\n}\n</script>\n<style src=\"./chat.css\" />\n\n\n\n"]}]}