{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue","mtime":1590070063000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEksIHsgIGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJzsKaW1wb3J0IHsgQXV0aCB9IGZyb20gJ2F3cy1hbXBsaWZ5JwppbXBvcnQgeyBjcmVhdGVVc2VyIH0gZnJvbSAiLi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwppbXBvcnQgeyB1cGRhdGVVc2VyIH0gZnJvbSAiLi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwppbXBvcnQgeyBsaXN0Um9vbXMgfSBmcm9tICcuLi9ncmFwaHFsL3F1ZXJpZXMnOwppbXBvcnQgeyBnZXRSb29tIH0gZnJvbSAnLi4vZ3JhcGhxbC9xdWVyaWVzJzsKaW1wb3J0IHsgbGlzdFVzZXJzIH0gZnJvbSAnLi4vZ3JhcGhxbC9xdWVyaWVzJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXIvcm91dGVyJwoKaW1wb3J0IEZ1bGxDYWxlbmRhciBmcm9tICdAZnVsbGNhbGVuZGFyL3Z1ZScKaW1wb3J0IGRheUdyaWRQbHVnaW4gZnJvbSAnQGZ1bGxjYWxlbmRhci9kYXlncmlkJwppbXBvcnQgdGltZUdyaWRQbHVnaW4gZnJvbSAiQGZ1bGxjYWxlbmRhci90aW1lZ3JpZCI7CmltcG9ydCBpbnRlcmFjdGlvblBsdWdpbiBmcm9tICJAZnVsbGNhbGVuZGFyL2ludGVyYWN0aW9uIjsKaW1wb3J0IGphTG9jYWxlIGZyb20gIkBmdWxsY2FsZW5kYXIvY29yZS9sb2NhbGVzL2phIjsgLy8g5pel5pys6Kqe5YyW55SoCgovLyBpbXBvcnQgY2FsZW5kYXIgZnJvbSAnLi9jYWxlbmRhcicKCndpbmRvdy5MT0dfTEVWRUwgPSAnVkVSQk9TRSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY2hhdCcsCiAgY29tcG9uZW50czogewogICAgRnVsbENhbGVuZGFyIC8vIG1ha2UgdGhlIDxGdWxsQ2FsZW5kYXI+IHRhZyBhdmFpbGFibGUKICAgIC8vIGNhbGVuZGFyCiAgfSwKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICB1c2VyTmFtZTogIiIsCiAgICAgIG1lbWJlcnM6IFtdLAogICAgICAvLyBzdWJzY3JpcHRpb246IHt9LAogICAgICBlcnJvcjogIiIsCiAgICAgIHJvb21zOiBbXSwKICAgICAgcm9vbV9pZDogIiIsCgogICAgICAvLyDjgZPjgZPjgYvjgonjgqvjg6zjg7Pjg4Djg7wKICAgICAgbG9jYWxlOiBqYUxvY2FsZSwgLy8g5pel5pys6Kqe5YyWCiAgICAgIC8vIOOCq+ODrOODs+ODgOODvOODmOODg+ODgOODvOOBruODh+OCtuOCpOODswogICAgICBjYWxlbmRhckhlYWRlcjogewogICAgICAgIGxlZnQ6ICJwcmV2LG5leHQgdG9kYXkiLAogICAgICAgIGNlbnRlcjogInRpdGxlIiwKICAgICAgICByaWdodDogImRheUdyaWRNb250aCxXZWVrLERheSxsaXN0V2VlayIKICAgICAgfSwKICAgICAgY2FsZW5kYXJXZWVrZW5kczogdHJ1ZSwgLy8g5Zyf5pel44KS6KGo56S644GZ44KL44GLCiAgICAgIC8vIOOCq+ODrOODs+ODgOODvOOBp+S9v+eUqOOBmeOCi+ODl+ODqeOCsOOCpOODswogICAgICBjYWxlbmRhclBsdWdpbnM6IFtkYXlHcmlkUGx1Z2luLCB0aW1lR3JpZFBsdWdpbiwgaW50ZXJhY3Rpb25QbHVnaW5dLAogICAgICAvLyDjgqvjg6zjg7Pjg4Djg7zjgavooajnpLrjgZnjgovjgrnjgrHjgrjjg6Xjg7zjg6vkuIDopqcKICAgICAgY2FsZW5kYXJFdmVudHM6IFsKICAgICAgICAvLyBUT0RPOiDjg4fjg7zjgr/jg5njg7zjgrnjgYvjgonlj5bjgaPjgabjgY3jgZ/jgoTjgaTjgpLlj43mmKDjgafjgY3jgovjgojjgYbjgavjgZnjgovjgIIKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogIuWgseWRiuS8miIsCiAgICAgICAgICBzdGFydDogIjIwMjAtMDMtMTBUMTA6MDA6MDAiLAogICAgICAgICAgZW5kOiAiMjAyMC0wMy0xMFQxMjozMDowMCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAi44Of44O844OG44Kj44Oz44KwIiwKICAgICAgICAgIHN0YXJ0OiAiMjAyMC0wMy0xMlQxMDozMDowMCIsCiAgICAgICAgICBlbmQ6ICIyMDIwLTAzLTEyVDEyOjMwOjAwIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICLmiZPjgaHlkIjjgo/jgZsiLAogICAgICAgICAgc3RhcnQ6ICIyMDIwLTAzLTE4VDEzOjMwOjAwIiwKICAgICAgICAgIGVuZDogIjIwMjAtMDMtMThUMTQ6MzA6MDAiCiAgICAgICAgfQogICAgICBdCiAgICB9CiAgfSwKICBtZXRob2RzIDp7CiAgICBhc3luYyBmZXRjaCgpewogICAgICBjb25zdCByb29tX3RlbXAgPSBhd2FpdCBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGxpc3RSb29tcyx7bGltaXQ6MTB9KSkKICAgICAgdGhpcy5yb29tcyA9IHJvb21fdGVtcC5kYXRhLmxpc3RSb29tcy5pdGVtcwogICAgICBjb25zb2xlLmxvZyhyb29tX3RlbXAuZGF0YS5saXN0Um9vbXMuaXRlbXMpCiAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCB0aGlzLnJvb21zLmxlbmd0aDsgaSsrKXsKICAgICAgICBsZXQgbWVtYmVyID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihnZXRSb29tLHtpZDogdGhpcy5yb29tc1tpXS5pZH0pKQogICAgICAgIHRoaXMubWVtYmVycy5wdXNoKG1lbWJlci5nZXRSb29tLnVzZXJzLml0ZW1zLmxlbmd0aCkKICAgICAgfQogICAgICBjb25zb2xlLmxvZyh0aGlzLnJvb21zKQogICAgfSwKICAgIGFzeW5jIGdvdG9yb29tKHRlbXApewogICAgICAvL+ODpuODvOOCtuODvOOBruiqjeiovOOBqOOBi+OCkuOChOOCiwogICAgICBjb25zdCByb29taWQgPSBhd2FpdCBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGxpc3RVc2VycywgeyBmaWx0ZXI6IHsndXNlcm5hbWUnOntlcTogdGhpcy51c2VyTmFtZX19fSkpCiAgICAgIGNvbnN0IHVzZXJyb29tID0gcm9vbWlkLmRhdGEubGlzdFVzZXJzLml0ZW1zWzBdCiAgICAgIGNvbnNvbGUubG9nKCJ0aGlzIHVzZXIncyByb29tIGlzICIgKyB1c2Vycm9vbSkKICAgICAgLy8gaWYgKCF1c2Vycm9vbS5yb29taWQpewogICAgICBjb25zb2xlLmxvZyhkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicm9vbSIpLnRleHRDb250ZW50KQogICAgICB2YXIgcm9vbV9hID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihnZXRSb29tLHtpZDogdGVtcH0pKQogICAgICBjb25zb2xlLmxvZygiPz8/ICIgKyByb29tX2EuZGF0YS5nZXRSb29tLnVzZXJzLml0ZW1zKQogICAgICB0aGlzLm1lbWJlcnMgPSByb29tX2EuZGF0YS5nZXRSb29tLnVzZXJzLml0ZW1zCiAgICAgIHZhciByb29tID0gcm9vbV9hLmRhdGEuZ2V0Um9vbS51c2VycwogICAgICBjb25zb2xlLmxvZygidGhpcyByb29tIGlkIGlzICIgKyByb29tLmlkKQogICAgICBjb25zdCB1c2Vycm9vbWlkID0gewogICAgICAgIGlkOiB1c2Vycm9vbS5pZCwKICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyTmFtZSwKICAgICAgICB1c2VyUm9vbWlkSWQ6IHJvb20uaWQKICAgICAgfQogICAgICBjb25zb2xlLmxvZyh1c2Vycm9vbWlkKQogICAgICBhd2FpdCBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKHVwZGF0ZVVzZXIsIHsgaW5wdXQ6IHVzZXJyb29taWQgfSkpCiAgICAgICAgLmNhdGNoKGVycm9yID0+IHRoaXMuZXJyb3IgPSBKU09OLnN0cmluZ2lmeShlcnJvcikpCiAgICAgIC8vIH0KICAgICAgLy8gZWxzZXsKICAgICAgLy8gICBjb25zb2xlLmxvZygnYWxyZWFkeSByb29tIGluJykKICAgICAgLy8gfQogICAgICByb3V0ZXIucHVzaCgnL3Jvb20vaW4nKQogICAgfSwKICAgIGV2ZW50c0NyZWF0ZSgpIHsKICAgIC8vICBpZiAoY29uZmlybSgi5paw44GX44GE44K544Kx44K444Ol44O844Or44KSIiArIGFyZy5kYXRlU3RyICsgIuOBq+i/veWKoOOBl+OBvuOBmeOBiyA/IikpIHsKICAgICAgICB0aGlzLmNhbGVuZGFyRXZlbnRzLnB1c2goewogICAgICAgICAgdGl0bGU6IHRoaXMucm9vbXMudGl0bGUsCiAgICAgICAgICBzdGFydDogbmV3IERhdGUoKQogICAgICAgIH0pOwogICAgICAgIGNvbnNvbGUubG9nKHRoaXMucm9vbXMudGl0bGUpCiAgICAvLyAgfQogICAgfQogIH0sCiAgYXN5bmMgY3JlYXRlZCgpewogICAgdGhpcy51c2VyTmFtZSA9IChhd2FpdCBBdXRoLmN1cnJlbnRBdXRoZW50aWNhdGVkVXNlcigpKS51c2VybmFtZTsKICAgIHZhciB1c2VyID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihsaXN0VXNlcnMsIHsgZmlsdGVyOiB7J3VzZXJuYW1lJzp7ZXE6IHRoaXMudXNlck5hbWV9fX0pKQogICAgY29uc29sZS5sb2codXNlci5kYXRhLmxpc3RVc2Vycy5pdGVtcy5sZW5ndGgpCiAgICBjb25zb2xlLmxvZyghdXNlci5kYXRhLmxpc3RVc2Vycy5pdGVtcy5sZW5ndGgpCiAgICBpZiAoIXVzZXIuZGF0YS5saXN0VXNlcnMuaXRlbXMubGVuZ3RoKXsKICAgICAgY29uc3QgbmV3dXNlciA9IHsKICAgICAgICBpZDogbmV3IERhdGUoKS5nZXRUaW1lKCkgKyB0aGlzLnVzZXJOYW1lLAogICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJOYW1lCiAgICAgIH0KICAgICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihjcmVhdGVVc2VyLCB7IGlucHV0OiBuZXd1c2VyIH0pKQogICAgICAgIC5jYXRjaChlcnJvciA9PiB0aGlzLmVycm9yID0gSlNPTi5zdHJpbmdpZnkoZXJyb3IpKQogICAgICBjb25zb2xlLmxvZyhuZXd1c2VyKQogICAgfQogICAgY29uc29sZS5sb2coImZldGNoIHN0YXJ0ZWQhISIpCiAgICB0aGlzLmZldGNoKCkKICAgIGNvbnNvbGUubG9nKCJmZXRjaCBmaW5pc2hlZCEhIikKICAgIGNvbnNvbGUubG9nKHRoaXMucm9vbXMpCiAgICB0aGlzLmV2ZW50c0NyZWF0ZSgpCiAgICBjb25zb2xlLmxvZygiRXZlbnRzIGNyZWF0ZWQhISIpCiAgfQp9Cg=="},{"version":3,"sources":["room.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"room.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- 待機部屋の画面、部屋が作られると一覧が表示される -->\n<div>\n<header>\n<h1 class=\"headline\">\n  <a>みんラジ!</a>\n</h1>\n <ul class=\"nav-list\">\n      <li class=\"nav-list-item\"><router-link to=\"/\" id=\"back-home-button\"> ホーム</router-link></li>\n      <li class=\"nav-list-item\"><!-- 部屋を作成する画面に移動 --><router-link to=\"/room_create\" id=\"create-room-button\">ルームを作成する</router-link></li>\n      <li class=\"nav-list-item\"> <amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n  <!--<router-link\n    :to=\"{\n      name: '/', \n      hash: '#hashtag'\n      }\"\n  >ルームを作成する</router-link>-->\n</header>\n<main>\n  <section>\n    <section>\n      <h2>ルーム広場</h2>\n      <p>ここはルームに入る待機場所です。「ルームを作成する」ボタンを押したら、ルームを作成するページに移動するので\n      そこでルームを作成してください。\n      </p>\n      <router-link to=\"/room_create\" id=\"create-room-button\">ルームを作成する</router-link>\n    </section>\n   \n      <!-- 部屋情報を一つずつ取ってきて表示する、押すとそれぞれの画面に移動する -->\n    <section>\n      <!-- <calendar></calendar> -->\n      <FullCalendar \n        default-view=\"dayGridMonth\"\n        :locale=\"locale\"\n        :header=\"calendarHeader\"\n        :weekends=\"calendarWeekends\"\n        :plugins=\"calendarPlugins\"\n        :events=\"calendarEvents\"\n      /> \n      <div class=\"main-contents\">\n      <h2>作成したルーム一覧</h2>\n      <p>作成されたルーム一覧です。自分が作ったルームに入りましょう。</p>\n      <!--<router-link to=\"/signout\" id=\"back-home-button\"> ホームに戻る</router-link>-->\n      <div id='room' v-for=\"room in rooms\" :key=\"room.id\">\n        <button id = \"go-room-button\" v-on:click=\"gotoroom(room.id)\">{{room.id}}</button>\n        参加者 : {{members[0]}} 名\n      </div>\n      <div class=\"error\">{{ this.error }}</div>\n      </div>\n    </section>\n    \n  </section>\n</main>\n\n</div>\n</template>\n\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { createUser } from \"../graphql/mutations\";\nimport { updateUser } from \"../graphql/mutations\";\nimport { listRooms } from '../graphql/queries';\nimport { getRoom } from '../graphql/queries';\nimport { listUsers } from '../graphql/queries';\nimport router from '../router/router'\n\nimport FullCalendar from '@fullcalendar/vue'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport jaLocale from \"@fullcalendar/core/locales/ja\"; // 日本語化用\n\n// import calendar from './calendar'\n\nwindow.LOG_LEVEL = 'VERBOSE';\nexport default {\n  name: 'chat',\n  components: {\n    FullCalendar // make the <FullCalendar> tag available\n    // calendar\n  },\n  data(){\n    return {\n      userName: \"\",\n      members: [],\n      // subscription: {},\n      error: \"\",\n      rooms: [],\n      room_id: \"\",\n\n      // ここからカレンダー\n      locale: jaLocale, // 日本語化\n      // カレンダーヘッダーのデザイン\n      calendarHeader: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,Week,Day,listWeek\"\n      },\n      calendarWeekends: true, // 土日を表示するか\n      // カレンダーで使用するプラグイン\n      calendarPlugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      // カレンダーに表示するスケジュール一覧\n      calendarEvents: [\n        // TODO: データベースから取ってきたやつを反映できるようにする。\n        {\n          title: \"報告会\",\n          start: \"2020-03-10T10:00:00\",\n          end: \"2020-03-10T12:30:00\"\n        },\n        {\n          title: \"ミーティング\",\n          start: \"2020-03-12T10:30:00\",\n          end: \"2020-03-12T12:30:00\"\n        },\n        {\n          title: \"打ち合わせ\",\n          start: \"2020-03-18T13:30:00\",\n          end: \"2020-03-18T14:30:00\"\n        }\n      ]\n    }\n  },\n  methods :{\n    async fetch(){\n      const room_temp = await API.graphql(graphqlOperation(listRooms,{limit:10}))\n      this.rooms = room_temp.data.listRooms.items\n      console.log(room_temp.data.listRooms.items)\n      for(let i = 0; i < this.rooms.length; i++){\n        let member = await API.graphql(graphqlOperation(getRoom,{id: this.rooms[i].id}))\n        this.members.push(member.getRoom.users.items.length)\n      }\n      console.log(this.rooms)\n    },\n    async gotoroom(temp){\n      //ユーザーの認証とかをやる\n      const roomid = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n      const userroom = roomid.data.listUsers.items[0]\n      console.log(\"this user's room is \" + userroom)\n      // if (!userroom.roomid){\n      console.log(document.getElementById(\"room\").textContent)\n      var room_a = await API.graphql(graphqlOperation(getRoom,{id: temp}))\n      console.log(\"??? \" + room_a.data.getRoom.users.items)\n      this.members = room_a.data.getRoom.users.items\n      var room = room_a.data.getRoom.users\n      console.log(\"this room id is \" + room.id)\n      const userroomid = {\n        id: userroom.id,\n        username: this.userName,\n        userRoomidId: room.id\n      }\n      console.log(userroomid)\n      await API.graphql(graphqlOperation(updateUser, { input: userroomid }))\n        .catch(error => this.error = JSON.stringify(error))\n      // }\n      // else{\n      //   console.log('already room in')\n      // }\n      router.push('/room/in')\n    },\n    eventsCreate() {\n    //  if (confirm(\"新しいスケジュールを\" + arg.dateStr + \"に追加しますか ?\")) {\n        this.calendarEvents.push({\n          title: this.rooms.title,\n          start: new Date()\n        });\n        console.log(this.rooms.title)\n    //  }\n    }\n  },\n  async created(){\n    this.userName = (await Auth.currentAuthenticatedUser()).username;\n    var user = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n    console.log(user.data.listUsers.items.length)\n    console.log(!user.data.listUsers.items.length)\n    if (!user.data.listUsers.items.length){\n      const newuser = {\n        id: new Date().getTime() + this.userName,\n        username: this.userName\n      }\n      API.graphql(graphqlOperation(createUser, { input: newuser }))\n        .catch(error => this.error = JSON.stringify(error))\n      console.log(newuser)\n    }\n    console.log(\"fetch started!!\")\n    this.fetch()\n    console.log(\"fetch finished!!\")\n    console.log(this.rooms)\n    this.eventsCreate()\n    console.log(\"Events created!!\")\n  }\n}\n</script>\n\n<style>\n  @import './chat.css';\n  @import '~@fullcalendar/core/main.css';\n  @import '~@fullcalendar/daygrid/main.css';\n</style>"]}]}