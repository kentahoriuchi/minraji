{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/in_the_room.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/in_the_room.vue","mtime":1590302287000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["in_the_room.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"in_the_room.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- 部屋の中の画面、へやのidによって画面が異なる -->\n<div>\n<header>\n<h1 class=\"headline\">\n      <a>みんラジ!</a>\n</h1>\n  <ul class=\"nav-list\">\n\n      <li class=\"nav-list-item\"><router-link to=\"/\"><button id=\"back-home-button\">ホーム</button></router-link></li>\n      <li class=\"nav-list-item\"><!-- 待機部屋に移動 --><router-link to=\"/room\"><button id=\"go-room-button\">ルーム広場に戻る</button></router-link></li>\n\n      <li class=\"nav-list-item\"><amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n</header>\n<main>\n<section>\n    <h2>ルーム</h2>\n\n    <p>ここはルームの中です。動画をみてラジオ体操をしましょう。\n      ラジオ体操が終わったら「ルームを消す」ボタンを押して、ルーム広場に戻りましょう。</p>\n    <div id=\"all-members\">  \n    <h2>参加者一覧</h2>\n    参加者 : {{members.length}} 名\n    <div  v-for=\"member in members\" :key=\"member.id\">\n      {{member.username}}\n    </div>\n    </div>\n   \n    \n    <!-- video-id youtubeの動画のid -->\n    <!--<youtube :video-id=\"video_url\" ref=\"youtube\" @playing=\"playing\"></youtube> -->\n</section>\n    \n<section>   \n    <!-- video-id youtubeの動画のid -->\n    <div align=\"center\"><youtube :video-id=\"video_url\" ref=\"youtube\" \n      @playing=\"playing\" \n      @cued=\"cued\" \n      @ready=\"ready\" \n      @ended=\"ended\" \n      @paused=\"paused\"\n      @buffering=\"buffering\">\n    </youtube>\n    </div>\n    <br>\n    \n    \n  <div id=\"two-buttons-up\">\n      <button v-on:click=\"playVideo\" id=\"play-button\">play</button>\n  <button v-on:click=\"chat\" id=\"chat-button\">チャットする</button>\n  </div>\n\n  <div id=\"two-buttons-down\">\n  <!-- ルームを消す--><button id=\"delete-room-button\" v-on:click=\"delete_room\">ルームを消す</button>\n    <router-link to=\"/room\"><button id=\"go-room-button\">ルーム広場に戻る</button></router-link>\n  </div>\n\n\n  <div id='overlay' v-show='showContent'>\n  <div v-for=\"message in messages\" :key=\"message.id\">\n    <p v-bind:class=\"[message.username === userName ? 'message' : 'message_opponent']\">{{message.content}}</p>\n    <p v-bind:class=\"[message.username === userName ? 'username' : 'username_opponent']\">{{message.username}}</p>\n  </div>\n  <table>\n  <tr>\n  <div>\n  <input id=\"messageinput\" placeholder=\"メッセージを入力してください\" size=\"25\" type='text' value=\"\"/>\n  </div>\n  </tr>\n  <tr>\n  <div>\n  <button id = \"sendMessage\" v-on:click=\"sendMessage\">送る</button>\n  <button id=\"chat-close\" v-on:click='closeModel'>閉じる</button>\n  </div>\n  </tr>\n  </table>\n</div>\n    \n    \n\n\n</section>\n</main>\n</div>\n</template>\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport Vue from 'vue'\nimport VueYoutube, {getIdFromUrl} from 'vue-youtube'\nimport { getRoom } from '../graphql/queries';\nimport { getUser } from '../graphql/queries';\nimport { deleteRoom } from '../graphql/mutations'\nimport router from '../router/router'\nimport UserStore from '../mobx/UserStore'\nimport { updateUser } from \"../graphql/mutations\";\nimport { updateRoom } from \"../graphql/mutations\";\nimport { createMessage } from \"../graphql/mutations\";\n// import foryoutube from './foryoutube'\n\nVue.use(VueYoutube)\n\nexport default {\n  name: 'room',\n  // components: {\n  //   foryoutube\n  // },\n  data(){\n    return {\n      video_url: \"\",\n      subscription: {},\n      error: \"\",\n      roomId: \"\",\n      members: [],\n      userName: \"\",\n      userId: \"\",\n      showContent: false,\n      messages: [],\n      createdTime: \"\",\n      nowTime: \"\"\n      // playerVars: {\n      //   autoplay: 0\n      // }\n      // videoId: '7bIBZ6M0-tU'\n    }\n  },\n  methods :{\n    async fetch(){\n      const getroom = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n      this.messages = getroom.data.getRoom.messages.items\n      console.log(this.messages)\n    },\n    async playVideo() {\n      // await this.player.seekTo(10,true)\n      await this.sendSeek(30)\n      this.player.playVideo()\n      console.log(await this.player.getPlayerState())\n      // Do something after the playVideo command\n      // this.player.seekTo(10)\n    },\n    async ready() {\n      console.log(\"Now we are ready for stream!!!\")\n      //this.player.addEventListener(this.player.onStateChange, )\n      console.log(await this.player.getPlayerState())\n      this.sendSeek(30)\n      // this.player.seekTo(Math.floor(new Date().getTime()/1000) - this.createdTime)\n      // this.playVideo()\n    },\n    async playing() {\n      // await this.sendSeek(30)\n      console.log('we are watching!!!')\n      console.log(this.player.getPlayerState())\n      // this.player.seekTo(10)\n    },\n    async cued() {\n      console.log('cued')\n      console.log(await this.player.getPlayerState())\n\n    },\n    ended() {\n      console.log('ended')\n      console.log(this.player.getPlayerState())\n    },\n    paused() {\n      console.log('paused')\n      console.log(this.player.getPlayerState())\n    },\n    async buffering() {\n      console.log('buffering')\n      console.log(this.player.getPlayerState())\n      setTimeout(console.log('7777777'),5000)\n      await this.checkTime()\n    },\n    sendSeek(seconds) {\n      this.player.seekTo(seconds)\n\n    },\n    chat(){\n      this.showContent = true\n    },\n    async sendMessage(){\n      const message = document.getElementById(\"messageinput\").value\n      const createmessage = {\n        id: new Date().getTime() + this.userName,\n        username: this.userName,\n        content: message,\n        messageRoomidId: this.roomId\n      }\n      console.log(createmessage)\n      await API.graphql(graphqlOperation(createMessage, { input: createmessage }))\n        .catch(error => this.error = JSON.stringify(error))\n    },\n    async delete_room(){\n      const roomi = {\n        id: this.roomId\n      }\n      console.log(roomi)\n      await API.graphql(graphqlOperation(deleteRoom, { input: roomi}))\n        .catch(error => this.error = JSON.stringify(error))\n      router.push({name:'room'})\n    },\n    closeModel: function(){\n      this.showContent = false\n    },\n    initializedate(){\n      var today = new Date();\n      today.setDate(today.getDate());\n      var yyyy = today.getFullYear();\n      var mm = (\"0\"+(today.getMonth()+1)).slice(-2);\n      var dd = (\"0\"+today.getDate()).slice(-2);\n      var hh = (\"0\"+(today.getHours())).slice(-2);\n      var min = (\"0\"+(today.getMinutes())).slice(-2);\n      var sec = (\"0\"+(today.getSeconds())).slice(-2);\n      this.nowTime = yyyy+'-'+mm+'-'+dd +\" \"+ hh+':'+min+':'+sec;\n    },\n    checkTime(){\n      this.initializedate()\n      const wordsCreated = this.createdTime.split(' ');\n      const wordsNow = this.nowTime.split(' ');\n      console.log( wordsCreated[0])\n      console.log( wordsNow[0])\n      if(wordsCreated[0].match(wordsNow[0]) != /(\\d{4})-(\\d{2})-(\\d{2})/){\n        console.log(\"day matched!\")\n        const timeCreated = wordsCreated[1].split(':')\n        const timeNow = wordsNow[1].split(':')\n        const timeFromStart = (timeNow[0] - timeCreated[0])*3600 + (timeNow[1] - timeCreated[1])*60 + (timeNow[2] - timeCreated[2])\n        console.log(timeFromStart)\n        // console.log(\"time is far! moving now\")\n        if(timeFromStart < 0){\n          this.player.pauseVideo()\n          console.log('waiting')\n          setTimeout(this.player.playVideo(),Math.abs(timeFromStart*1000))\n        }else{\n          this.sendSeek(timeFromStart)  \n        }\n        \n      }\n    }\n  },\n  computed: {\n    player() {\n      return this.$refs.youtube.player\n    },\n\n  },\n  async created(){\n    const { username,userid } = await UserStore\n    console.log(UserStore)\n    this.userName = username\n    this.userId = userid \n    const user_id = await API.graphql(graphqlOperation(getUser,{id: this.userId}))\n    console.log(user_id.data.getUser.roomid)\n    const room_info = user_id.data.getUser.roomid\n    this.video_url = getIdFromUrl(room_info.movie)\n    this.roomId = room_info.id\n    this.createdTime = room_info.reservedtime\n    const member = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n    this.members = member.data.getRoom.users.items\n    // console.log(this.members)\n    // console.log(this.video_url)\n    console.log(\"created: \" + this.createdTime)\n    console.log(\"now: \" + this.nowTime)\n    this.fetch()\n    //this.createdTime = get_created_time(userid)\n  },\n  async destroyed(){\n    const updatedata = {\n        id: this.userId,\n        userRoomidId: null\n      }\n    const roominfo = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n    const roommember = roominfo.data.getRoom.numberofmember\n    const addroommenber = {\n      id: this.roomId,\n      numberofmember: roommember - 1\n    }\n    await API.graphql(graphqlOperation(updateRoom, { input: addroommenber }))\n      .catch(error => this.error = JSON.stringify(error))\n    await API.graphql(graphqlOperation(updateUser, { input: updatedata }))\n      .catch(error => this.error = JSON.stringify(error))\n  }\n}\n\n/*\nfunction get_created_time(userid){\n  if (userid.data.listUsers.items[0].roomid.time !== /\\d{10}/g) {\n    const room ={\n      id: userid.data.listUsers.items[0].roomid.id,\n      time: Math.floor(new Date().getTime()/1000)\n    }\n    console.log(\"time is NOT set in this room. The time is \" + room.time + \" now and was set.\")\n    console.log(\"room is \" + room.id)\n    API.graphql(graphqlOperation(updateRoom, { input: room}))\n    .then(console.log(\"set successfully!\"))\n    .catch(error => this.error = JSON.stringify(error))\n    return new room.time\n  }\n  else{\n    console.log(\"time is set in this room. the time is \" + userid.data.listUsers.items[0].roomid.time)\n    return userid.data.listUsers.items[0].roomid.time\n  }\n}\n*/\n//function sendSeek(seconds) {\n  // this.player.seekTo(this.seconds)\n//}\n\n</script>\n\n<style src=\"./chat.css\" />\n\n\n"]}]}