{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/calendar.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/calendar.vue","mtime":1590294776000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/css-loader/dist/cjs.js","mtime":1588818774000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1588818841000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/postcss-loader/src/index.js","mtime":1588818811000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKICBAaW1wb3J0ICd+QGZ1bGxjYWxlbmRhci9jb3JlL21haW4uY3NzJzsKICBAaW1wb3J0ICd+QGZ1bGxjYWxlbmRhci9kYXlncmlkL21haW4uY3NzJzsKICAucC1tb2RhbCB7CiAgcG9zaXRpb246IGZpeGVkOwogIHRvcDogMDsKICByaWdodDogMDsKICBib3R0b206IDA7CiAgbGVmdDogMDsKICBvdmVyZmxvdy15OiBhdXRvOwogIHZpc2liaWxpdHk6IGhpZGRlbjsKICBvcGFjaXR5OiAwOwogIHotaW5kZXg6IC0xOwogICYuaXMtb3BlbiB7CiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlOwogICAgb3BhY2l0eTogMTsKICAgIHotaW5kZXg6IDEwMDsKICAgIHBvc2l0aW9uOmZpeGVkOwogICAgdG9wOjA7CiAgICBsZWZ0OjA7CiAgICB3aWR0aDoxMDAlOwogICAgaGVpZ2h0OjEwMCU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC41KTsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgfQp9Cg=="},{"version":3,"sources":["calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"calendar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <div class=\"p-modal\" :class=\"{'is-open': isModalActive}\">\n    <p>ポップアップテスト</p>\n    <p>{{roomtitle}}</p>\n    <p><button v-on:click='openItem'>close</button></p>\n  </div>\n    <FullCalendar \n      default-view=\"dayGridMonth\"\n      @eventClick=\"eventClick\"\n      :locale=\"locale\"\n      :header=\"calendarHeader\"\n      :weekends=\"calendarWeekends\"\n      :plugins=\"calendarPlugins\"\n      :events=\"calendarEvents\"\n      :selectable=\"calendarSelectable\"\n    /> \n  </div>\n</template>\n\n<script>\n  import API, {  graphqlOperation } from '@aws-amplify/api';\n  // import calendar from \"./calendar\"\n  import { listRooms } from '../graphql/queries';\n\n  import UserStore from '../mobx/UserStore'\n\n  import FullCalendar from '@fullcalendar/vue'\n  import dayGridPlugin from '@fullcalendar/daygrid'\n  import timeGridPlugin from \"@fullcalendar/timegrid\";\n  import interactionPlugin from \"@fullcalendar/interaction\";\n  import jaLocale from \"@fullcalendar/core/locales/ja\"; // 日本語化用\n\n  export default {\n    name: 'calendar',\n    components: {\n      FullCalendar // make the <FullCalendar> tag available\n    },\n    data() {\n      return {\n        userName: \"\",\n        userId: \"\",\n        members: [],\n        error: \"\",\n        rooms: [],\n        locale: jaLocale, // 日本語化\n        // カレンダーヘッダーのデザイン\n        calendarHeader: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,Week,Day,listWeek\"\n        },\n        calendarWeekends: true, // 土日を表示するか\n        // カレンダーで使用するプラグイン\n        calendarPlugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        // カレンダーに表示するスケジュール一覧\n        calendarEvents: [\n          // TODO: データベースから取ってきたやつを反映できるようにする。\n        ],\n        calendarSelectable:true,\n        isModalActive: false,\n        roomtitle: \"\"\n      }\n    },\n    methods: {\n      async fetch(){\n        //部屋データを取得\n        const roomlimit = 100  // 表示する部屋の数のmax\n        const rooms = await API.graphql(graphqlOperation(listRooms,{limit:roomlimit}))\n        this.rooms = rooms.data.listRooms.items\n        // console.log(\"in fetch\")\n        // console.log(this.rooms)\n        this.addCalendarEvents(this.rooms)\n      },\n      addCalendarEvents(rooms){\n        console.log(\"add eventの中\")\n        for (const room in rooms){\n          console.log(rooms[0].id)\n          console.log(rooms[0].tilte)\n          console.log(rooms[0].createdAt)\n          this.calendarEvents.push({\n            title: rooms[room].tilte,\n            start: new Date().getTime() //rooms[room].createdAt\n            // start: rooms[room].createdAt\n          });\n        }\n      },\n      eventClick: function(event) {\n        //クリックしたイベントのタイトルが取れるよ\n        // alert('Clicked on: ' + item.title);\n        this.roomtitle = event.text\n        this.openItem()\n        console.log(event)\n        console.log(event.event.title)\n      },\n      openItem() {\n        this.toggleModal();\n      },\n      /**\n      * active状態を切り替える。\n      */\n      toggleModal() {\n        this.isModalActive = ! this.isModalActive;\n      },\n    },\n    async created(){\n      const { username,userid } = await UserStore\n      console.log(UserStore)\n      this.userName = username\n      this.userId = userid \n      this.fetch()\n      // console.log(\"fetch finished!\")\n      // console.log(\"add eventの前\")\n      this.addCalendarEvents(this.rooms)\n      // console.log(\"add eventの後\")\n    }\n  }\n</script>\n\n<style lang='scss'>\n  @import '~@fullcalendar/core/main.css';\n  @import '~@fullcalendar/daygrid/main.css';\n  .p-modal {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  overflow-y: auto;\n  visibility: hidden;\n  opacity: 0;\n  z-index: -1;\n  &.is-open {\n    visibility: visible;\n    opacity: 1;\n    z-index: 100;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background-color:rgba(0,0,0,0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n</style>"]}]}