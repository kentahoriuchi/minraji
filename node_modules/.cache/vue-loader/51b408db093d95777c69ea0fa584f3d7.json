{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/chat.vue","mtime":1589975910000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEksIHsgIGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJzsKaW1wb3J0IHsgQXV0aCB9IGZyb20gJ2F3cy1hbXBsaWZ5JwppbXBvcnQgeyBjcmVhdGVNZXNzYWdlIH0gZnJvbSAiLi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwppbXBvcnQgeyBsaXN0TWVzc2FnZXMgfSBmcm9tICcuLi9ncmFwaHFsL3F1ZXJpZXMnOwppbXBvcnQgeyBvbkNyZWF0ZU1lc3NhZ2UgfSBmcm9tICcuLi9ncmFwaHFsL3N1YnNjcmlwdGlvbnMnOwp3aW5kb3cuTE9HX0xFVkVMID0gJ1ZFUkJPU0UnOwpleHBvcnQgZGVmYXVsdCB7CgogIG5hbWU6ICdjaGF0JywKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlczogW10sCiAgICAgIGNvbnRlbnQ6ICIiLAogICAgICB1c2VyTmFtZTogIiIsCiAgICAgIHN1YnNjcmlwdGlvbjoge30sCiAgICAgIGVycm9yOiAiIgogICAgfQogIH0sCiAgbWV0aG9kcyA6ewogICAgc2VuZE1lc3NhZ2UoKXsKICAgICAgLy8gVE9ETygxKSBHcmFwaFFM44Ko44Oz44OJ44Od44Kk44Oz44OI44GrbXV0YXRpb27jgpLnmbrooYzjgZfjgIHjg6Hjg4Pjgrvjg7zjgrjjgpLnmbvpjLLjgZnjgosKICAgICAgaWYgKGV2ZW50LmtleUNvZGUgIT09IDEzKSByZXR1cm4gLy8gRW50ZXLjgq3jg7zjga7loLTlkIjjga7jgb/pgIHkv6Hlh6bnkIbjgpLooYzjgYYKICAgICAgY29uc3QgbWVzc2FnZSA9IHsKICAgICAgICAgIGlkOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSArIHRoaXMudXNlck5hbWUsCiAgICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyTmFtZSwKICAgICAgICAgIGNvbnRlbnQ6IHRoaXMuY29udGVudAogICAgICB9CiAgICAgIC8vIE11dGF0aW9u44Gu5a6f6KGMCiAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24oY3JlYXRlTWVzc2FnZSwgeyBpbnB1dDogbWVzc2FnZSB9KSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKICAgICAgdGhpcy5jb250ZW50ID0gIiIKICB9LAogICAgZmV0Y2goKXsKICAgIC8vIFRPRE8oMikgR3JhcGhRTOOCqOODs+ODieODneOCpOODs+ODiOOBq3F1ZXJ544KS55m66KGM44GX44CB44Oh44OD44K744O844K45LiA6Kan44KS5Y+W5b6X44GZ44KLCiAgICBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGxpc3RNZXNzYWdlcywgeyBsaW1pdDogMTAwIH0pKQogICAgICAudGhlbihtZXNzYWdlcyA9PiB0aGlzLm1lc3NhZ2VzID0gbWVzc2FnZXMuZGF0YS5saXN0TWVzc2FnZXMuaXRlbXMuc29ydCgoYSxiKSA9PiBhLmlkID4gYi5pZCA/IDEgOiAtMSkpCiAgICAgIC5jYXRjaChlcnJvciA9PiB0aGlzLmVycm9yID0gSlNPTi5zdHJpbmdpZnkoZXJyb3IpKQogIH0sCiAgICBzdWJzY3JpYmUoKXsKICAgICAgLy8gVE9ETygzLTEpIEdyYXBoUUzjgqjjg7Pjg4njg53jgqTjg7Pjg4jjgatzdWJzY3JpcHRpb27jgpLnmbrooYzjgZfjgIFtdXRhdGlvbuOCkuebo+imluOBmeOCiwogICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24ob25DcmVhdGVNZXNzYWdlKSkuc3Vic2NyaWJlKHsKICAgICAgICBuZXh0OiAoZXZlbnREYXRhKSA9PiB7CiAgICAgICAgICBjb25zdCBtZXNzYWdlID0gZXZlbnREYXRhLnZhbHVlLmRhdGEub25DcmVhdGVNZXNzYWdlOwogICAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKG1lc3NhZ2UpOwogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICBiZWZvcmVEZXN0cm95KCkgewogICAgICAvLyBUT0RPKDMtMikg44OB44Oj44OD44OI55S76Z2i44GL44KJ6Zui44KM44KL6Zqb44Gr44CBVW5TdWJzY3JpYmXjgZnjgosKICAgICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTsKICAgIH0sCiAgICBzY3JvbGxCb3R0b20oKSB7CiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoIi5tZXNzYWdlX2Jhc2UiKTsKICAgICAgY29udGFpbmVyLnNjcm9sbFRvcCA9IGNvbnRhaW5lci5zY3JvbGxIZWlnaHQ7CiAgICB9CiAgfSwKICBhc3luYyBjcmVhdGVkKCl7CiAgICB0aGlzLnVzZXJOYW1lID0gKGF3YWl0IEF1dGguY3VycmVudEF1dGhlbnRpY2F0ZWRVc2VyKCkpLnVzZXJuYW1lOwogICAgdGhpcy5mZXRjaCgpCiAgICB0aGlzLnN1YnNjcmliZSgpCiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgLy8gVE9ETygzLTIpIOODgeODo+ODg+ODiOeUu+mdouOBi+OCiembouOCjOOCi+mam+OBq+OAgVVuU3Vic2NyaWJl44GZ44KLCiAgfSwKICB1cGRhdGVkOiBmdW5jdGlvbiAoKSB7CiAgICB0aGlzLnNjcm9sbEJvdHRvbSgpCiAgfQp9Cg=="},{"version":3,"sources":["chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n<header>\n<h1 class=\"headline\">\n      <a>みんラジ!</a>\n</h1>\n</header>\n\n<main>\n  <div class=\"title\">\n    <h2>Amplifyで作るチャットアプリ</h2>\n  </div>\n  <div class=\"main-contents\">\n    <div class=\"message_base\">\n        <div v-for=\"message in messages\" :key=\"message.id\">\n          <div v-bind:class=\"[message.username === userName ? 'message' : 'message_opponent']\">{{message.content}}</div>\n          <div v-bind:class=\"[message.username === userName ? 'username' : 'username_opponent']\">{{message.username}}</div>\n        </div>\n    </div>\n    <!-- <el-input placeholder=\"メッセージを入力(Enterで送信)\" v-model=\"content\" @keydown.enter.native=\"sendMessage\"></el-input> -->\n    <div class=\"error\">{{ this.error }}</div>\n  </div>\n  aaaaa\n\n  </main>\n\n  \n</div>  \n</template>\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { createMessage } from \"../graphql/mutations\";\nimport { listMessages } from '../graphql/queries';\nimport { onCreateMessage } from '../graphql/subscriptions';\nwindow.LOG_LEVEL = 'VERBOSE';\nexport default {\n\n  name: 'chat',\n  data(){\n    return {\n      messages: [],\n      content: \"\",\n      userName: \"\",\n      subscription: {},\n      error: \"\"\n    }\n  },\n  methods :{\n    sendMessage(){\n      // TODO(1) GraphQLエンドポイントにmutationを発行し、メッセージを登録する\n      if (event.keyCode !== 13) return // Enterキーの場合のみ送信処理を行う\n      const message = {\n          id: new Date().getTime() + this.userName,\n          username: this.userName,\n          content: this.content\n      }\n      // Mutationの実行\n      API.graphql(graphqlOperation(createMessage, { input: message }))\n        .catch(error => this.error = JSON.stringify(error))\n      this.content = \"\"\n  },\n    fetch(){\n    // TODO(2) GraphQLエンドポイントにqueryを発行し、メッセージ一覧を取得する\n    API.graphql(graphqlOperation(listMessages, { limit: 100 }))\n      .then(messages => this.messages = messages.data.listMessages.items.sort((a,b) => a.id > b.id ? 1 : -1))\n      .catch(error => this.error = JSON.stringify(error))\n  },\n    subscribe(){\n      // TODO(3-1) GraphQLエンドポイントにsubscriptionを発行し、mutationを監視する\n      this.subscription = API.graphql(graphqlOperation(onCreateMessage)).subscribe({\n        next: (eventData) => {\n          const message = eventData.value.data.onCreateMessage;\n          this.messages.push(message);\n        }\n      })\n    },\n    beforeDestroy() {\n      // TODO(3-2) チャット画面から離れる際に、UnSubscribeする\n      this.subscription.unsubscribe();\n    },\n    scrollBottom() {\n      const container = this.$el.querySelector(\".message_base\");\n      container.scrollTop = container.scrollHeight;\n    }\n  },\n  async created(){\n    this.userName = (await Auth.currentAuthenticatedUser()).username;\n    this.fetch()\n    this.subscribe()\n  },\n  beforeDestroy() {\n    // TODO(3-2) チャット画面から離れる際に、UnSubscribeする\n  },\n  updated: function () {\n    this.scrollBottom()\n  }\n}\n</script>\n\n<style src=\"./chat.css\" />\n\n"]}]}