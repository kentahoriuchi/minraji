{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue","mtime":1589977555000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEksIHsgIGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJzsKaW1wb3J0IHsgQXV0aCB9IGZyb20gJ2F3cy1hbXBsaWZ5JwppbXBvcnQgeyBjcmVhdGVVc2VyIH0gZnJvbSAiLi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwppbXBvcnQgeyB1cGRhdGVVc2VyIH0gZnJvbSAiLi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwppbXBvcnQgeyBsaXN0Um9vbXMgfSBmcm9tICcuLi9ncmFwaHFsL3F1ZXJpZXMnOwppbXBvcnQgeyBsaXN0VXNlcnMgfSBmcm9tICcuLi9ncmFwaHFsL3F1ZXJpZXMnOwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlci9yb3V0ZXInCmltcG9ydCBjYWxlbmRhciBmcm9tICIuL2NhbGVuZGFyIgoKd2luZG93LkxPR19MRVZFTCA9ICdWRVJCT1NFJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdjaGF0JywKICBjb21wb25lbnRzOiB7CiAgICBjYWxlbmRhcgogIH0sCiAgZGF0YSgpewogICAgcmV0dXJuIHsKICAgICAgdXNlck5hbWU6ICIiLAogICAgICAvLyBzdWJzY3JpcHRpb246IHt9LAogICAgICBlcnJvcjogIiIsCiAgICAgIHJvb21zOiBbXSwKICAgICAgcm9vbV9pZDogIiIKICAgIH0KICB9LAogIG1ldGhvZHMgOnsKICAgIGZldGNoKCl7CiAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obGlzdFJvb21zLHtsaW1pdDoxMH0pKQogICAgICAgIC50aGVuKHJvb21zID0+IHRoaXMucm9vbXMgPSByb29tcy5kYXRhLmxpc3RSb29tcy5pdGVtcykKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKICAgICAgY29uc29sZS5sb2codGhpcy5yb29tcykKICAgIH0sCiAgICBhc3luYyBnb3Rvcm9vbSh0ZW1wKXsKICAgICAgLy/jg6bjg7zjgrbjg7zjga7oqo3oqLzjgajjgYvjgpLjgoTjgosKICAgICAgY29uc3Qgcm9vbWlkID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihsaXN0VXNlcnMsIHsgZmlsdGVyOiB7J3VzZXJuYW1lJzp7ZXE6IHRoaXMudXNlck5hbWV9fX0pKQogICAgICBjb25zdCB1c2Vycm9vbSA9IHJvb21pZC5kYXRhLmxpc3RVc2Vycy5pdGVtc1swXQogICAgICAvLyBjb25zb2xlLmxvZyh1c2Vycm9vbS5yb29taWQpCiAgICAgIC8vIGlmICghdXNlcnJvb20ucm9vbWlkKXsKICAgICAgY29uc29sZS5sb2coZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJvb20iKS50ZXh0Q29udGVudCkKICAgICAgdmFyIHJvb21fYSA9IGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obGlzdFJvb21zLCB7IGZpbHRlcjogeydpZCc6e2VxOiB0ZW1wfX19KSkKICAgICAgdmFyIHJvb20gPSByb29tX2EuZGF0YS5saXN0Um9vbXMuaXRlbXNbMF0KICAgICAgY29uc3QgdXNlcnJvb21pZCA9IHsKICAgICAgICBpZDogdXNlcnJvb20uaWQsCiAgICAgICAgdXNlcm5hbWU6IHRoaXMudXNlck5hbWUsCiAgICAgICAgdXNlclJvb21pZElkOiByb29tLmlkCiAgICAgIH0KICAgICAgY29uc29sZS5sb2codXNlcnJvb21pZCkKICAgICAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbih1cGRhdGVVc2VyLCB7IGlucHV0OiB1c2Vycm9vbWlkIH0pKQogICAgICAgIC5jYXRjaChlcnJvciA9PiB0aGlzLmVycm9yID0gSlNPTi5zdHJpbmdpZnkoZXJyb3IpKQogICAgICAvLyB9CiAgICAgIC8vIGVsc2V7CiAgICAgIC8vICAgY29uc29sZS5sb2coJ2FscmVhZHkgcm9vbSBpbicpCiAgICAgIC8vIH0KICAgICAgcm91dGVyLnB1c2goJy9yb29tL2luJykKICAgIH0KICB9LAogIGFzeW5jIGNyZWF0ZWQoKXsKICAgIHRoaXMudXNlck5hbWUgPSAoYXdhaXQgQXV0aC5jdXJyZW50QXV0aGVudGljYXRlZFVzZXIoKSkudXNlcm5hbWU7CiAgICB2YXIgdXNlciA9IGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obGlzdFVzZXJzLCB7IGZpbHRlcjogeyd1c2VybmFtZSc6e2VxOiB0aGlzLnVzZXJOYW1lfX19KSkKICAgIGNvbnNvbGUubG9nKHVzZXIuZGF0YS5saXN0VXNlcnMuaXRlbXMubGVuZ3RoKQogICAgY29uc29sZS5sb2coIXVzZXIuZGF0YS5saXN0VXNlcnMuaXRlbXMubGVuZ3RoKQogICAgaWYgKCF1c2VyLmRhdGEubGlzdFVzZXJzLml0ZW1zLmxlbmd0aCl7CiAgICAgIGNvbnN0IG5ld3VzZXIgPSB7CiAgICAgICAgaWQ6IG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgdGhpcy51c2VyTmFtZSwKICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyTmFtZQogICAgICB9CiAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24oY3JlYXRlVXNlciwgeyBpbnB1dDogbmV3dXNlciB9KSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKICAgICAgY29uc29sZS5sb2cobmV3dXNlcikKICAgIH0KICAgIHRoaXMuZmV0Y2goKQogIH0KfQo="},{"version":3,"sources":["room.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"room.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- 待機部屋の画面、部屋が作られると一覧が表示される -->\n<div>\n<header>\n<h1 class=\"headline\">\n  <a>みんラジ!</a>\n</h1>\n <ul class=\"nav-list\">\n      <li class=\"nav-list-item\"><router-link to=\"/signout\" id=\"back-home-button\"> ホーム</router-link></li>\n      <li class=\"nav-list-item\"> <amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n  <!--<router-link\n    :to=\"{\n      name: '/', \n      hash: '#hashtag'\n      }\"\n  >ルームを作成する</router-link>-->\n</header>\n<main>\n  <section>\n    <section>\n      <h2>ルーム広場</h2>\n      <p>ここはルームに入る待機場所です。「ルームを作成する」ボタンを押したらルームを作成できます。</p>\n    </section>\n   \n    \n      <!-- 部屋を作成する画面に移動 -->\n      <router-link to=\"/room_create\" id=\"create-room-button\">ルームを作成する</router-link>\n\n\n    <!-- 部屋情報を一つずつ取ってきて表示する、押すとそれぞれの画面に移動する -->\n    \n    <section>\n      <calendar></calendar>\n      <div class=\"main-contents\">\n      <h2>作成したルーム一覧</h2>\n      <p>作成されたルーム一覧です。自分が作ったルームに入りましょう。</p>\n      <!--<router-link to=\"/signout\" id=\"back-home-button\"> ホームに戻る</router-link>-->\n      <div id='room' v-for=\"room in rooms\" :key=\"room.id\">\n        <button id = \"go-room-button\" v-on:click=\"gotoroom(room.id)\">{{room.id}}</button>\n      </div>\n      <div class=\"error\">{{ this.error }}</div>\n      </div>\n    </section>\n      \n    \n  </section>\n</main>\n\n</div>\n</template>\n\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { createUser } from \"../graphql/mutations\";\nimport { updateUser } from \"../graphql/mutations\";\nimport { listRooms } from '../graphql/queries';\nimport { listUsers } from '../graphql/queries';\nimport router from '../router/router'\nimport calendar from \"./calendar\"\n\nwindow.LOG_LEVEL = 'VERBOSE';\nexport default {\n  name: 'chat',\n  components: {\n    calendar\n  },\n  data(){\n    return {\n      userName: \"\",\n      // subscription: {},\n      error: \"\",\n      rooms: [],\n      room_id: \"\"\n    }\n  },\n  methods :{\n    fetch(){\n      API.graphql(graphqlOperation(listRooms,{limit:10}))\n        .then(rooms => this.rooms = rooms.data.listRooms.items)\n        .catch(error => this.error = JSON.stringify(error))\n      console.log(this.rooms)\n    },\n    async gotoroom(temp){\n      //ユーザーの認証とかをやる\n      const roomid = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n      const userroom = roomid.data.listUsers.items[0]\n      // console.log(userroom.roomid)\n      // if (!userroom.roomid){\n      console.log(document.getElementById(\"room\").textContent)\n      var room_a = await API.graphql(graphqlOperation(listRooms, { filter: {'id':{eq: temp}}}))\n      var room = room_a.data.listRooms.items[0]\n      const userroomid = {\n        id: userroom.id,\n        username: this.userName,\n        userRoomidId: room.id\n      }\n      console.log(userroomid)\n      await API.graphql(graphqlOperation(updateUser, { input: userroomid }))\n        .catch(error => this.error = JSON.stringify(error))\n      // }\n      // else{\n      //   console.log('already room in')\n      // }\n      router.push('/room/in')\n    }\n  },\n  async created(){\n    this.userName = (await Auth.currentAuthenticatedUser()).username;\n    var user = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n    console.log(user.data.listUsers.items.length)\n    console.log(!user.data.listUsers.items.length)\n    if (!user.data.listUsers.items.length){\n      const newuser = {\n        id: new Date().getTime() + this.userName,\n        username: this.userName\n      }\n      API.graphql(graphqlOperation(createUser, { input: newuser }))\n        .catch(error => this.error = JSON.stringify(error))\n      console.log(newuser)\n    }\n    this.fetch()\n  }\n}\n</script>\n\n<style src=\"./chat.css\" />\n"]}]}