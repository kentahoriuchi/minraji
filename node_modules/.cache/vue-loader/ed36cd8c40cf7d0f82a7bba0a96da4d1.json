{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue","mtime":1590294776000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEksIHsgIGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXIvcm91dGVyJwovLyBpbXBvcnQgY2FsZW5kYXIgZnJvbSAiLi9jYWxlbmRhciIKaW1wb3J0IHsgbGlzdFJvb21zIH0gZnJvbSAnLi4vZ3JhcGhxbC9xdWVyaWVzJzsKaW1wb3J0IHsgZ2V0Um9vbSB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7CmltcG9ydCB7IHVwZGF0ZVJvb20gfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7CmltcG9ydCB7IHVwZGF0ZVVzZXIgfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7CmltcG9ydCBVc2VyU3RvcmUgZnJvbSAnLi4vbW9ieC9Vc2VyU3RvcmUnCgp3aW5kb3cuTE9HX0xFVkVMID0gJ1ZFUkJPU0UnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdjaGF0JywKICAvLyBjb21wb25lbnRzOiB7CiAgICAvLyBjYWxlbmRhcgogIC8vIH0sCiAgZGF0YSgpewogICAgcmV0dXJuIHsKICAgICAgdXNlck5hbWU6ICIiLAogICAgICB1c2VySWQ6ICIiLAogICAgICBtZW1iZXJzOiBbXSwKICAgICAgZXJyb3I6ICIiLAogICAgICByb29tczogW10sCiAgICAgIHNob3dDb250ZW50OiBmYWxzZSwKICAgICAgcGFzc3dvcmQ6ICIiLAogICAgICBwYXNzY2hlY2s6IGZhbHNlLAogICAgICByb29tSWQ6ICIiCiAgICAgIC8vIHN1YnNjcmlwdGlvbjoge30sCiAgICB9CiAgfSwKICBtZXRob2RzIDp7CiAgICBhc3luYyBmZXRjaCgpewogICAgICAvL+mDqOWxi+ODh+ODvOOCv+OCkuWPluW+lwogICAgICBjb25zdCByb29tbGltaXQgPSAxMDAgIC8vIOihqOekuuOBmeOCi+mDqOWxi+OBruaVsOOBrm1heAogICAgICBjb25zdCByb29tcyA9IGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obGlzdFJvb21zLHtsaW1pdDpyb29tbGltaXR9KSkKICAgICAgdGhpcy5yb29tcyA9IHJvb21zLmRhdGEubGlzdFJvb21zLml0ZW1zCiAgICB9LAogICAgYXN5bmMgZ290b3Jvb20oKXsKICAgICAgLy/jg6bjg7zjgrbjg7zpg6jlsYvlhaXlrqTmg4XloLHov73liqAKICAgICAgY29uc3QgdXBkYXRldXNlcmlucHV0ID0gewogICAgICAgIGlkOiB0aGlzLnVzZXJJZCwKICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyTmFtZSwKICAgICAgICB1c2VyUm9vbWlkSWQ6IHRoaXMucm9vbUlkCiAgICAgIH0KICAgICAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbih1cGRhdGVVc2VyLCB7IGlucHV0OiB1cGRhdGV1c2VyaW5wdXQgfSkpCiAgICAgICAgLmNhdGNoKGVycm9yID0+IHRoaXMuZXJyb3IgPSBKU09OLnN0cmluZ2lmeShlcnJvcikpCiAgICAgIC8vIOmDqOWxi+OBruS6uuaVsOabtOaWsAogICAgICBjb25zdCBnZXRyb29tID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihnZXRSb29tLHtpZDogdGhpcy5yb29tSWR9KSkKICAgICAgY29uc3Qgcm9vbW1lbWJlciA9IGdldHJvb20uZGF0YS5nZXRSb29tLm51bWJlcm9mbWVtYmVyCiAgICAgIGNvbnN0IGFkZHJvb21tZW5iZXIgPSB7CiAgICAgICAgaWQ6IHRoaXMucm9vbUlkLAogICAgICAgIG51bWJlcm9mbWVtYmVyOiByb29tbWVtYmVyICsgMQogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKHJvb21tZW1iZXIpCiAgICAgIGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24odXBkYXRlUm9vbSwgeyBpbnB1dDogYWRkcm9vbW1lbmJlciB9KSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKCiAgICAgIHJvdXRlci5wdXNoKCcvcm9vbS9pbicpCiAgICB9LAogICAgLy/jg5Hjgrnjg6/jg7zjg4nplqLpgKMKICAgIHBhc3N3b3JkSW5wdXQoKXsKICAgICAgLy8gaWYgKGV2ZW50LmtleUNvZGUgIT09IDEzKSByZXR1cm4gCiAgICAgIGNvbnNvbGUubG9nKHRoaXMucGFzc2NoZWNrKQogICAgICBsZXQgcGFzc3dvcmRpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwYXNzd29yZGlucHV0IikudmFsdWUKICAgICAgaWYocGFzc3dvcmRpbnB1dCA9PT0gdGhpcy5wYXNzd29yZCl7CiAgICAgICAgdGhpcy5zaG93Q29udGVudCA9IGZhbHNlCiAgICAgICAgdGhpcy5nb3Rvcm9vbSgpCiAgICAgIH0KICAgICAgZWxzZXsKICAgICAgICB2YXIgZXJyb21lc3NhZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZXJyb3JtZXNzYWdlIikKICAgICAgICBlcnJvbWVzc2FnZS5pbm5lckhUTUwgPSAi44OR44K544Ov44O844OJ44GM6YGV44GE44G+44GZIgogICAgICB9CiAgICB9LAogICAgYXN5bmMgcGFzc0NoZWNrKGlkKXsKICAgICAgdGhpcy5yb29tSWQgPSBpZAogICAgICBjb25zdCBnZXRyb29tID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihnZXRSb29tLHtpZDogdGhpcy5yb29tSWR9KSkKICAgICAgY29uc29sZS5sb2coZ2V0cm9vbS5kYXRhLmdldFJvb20ucHJpdmF0ZXBhc3N3b3JkKQogICAgICBpZihnZXRyb29tLmRhdGEuZ2V0Um9vbS5wcml2YXRlcGFzc3dvcmQpewogICAgICAgIGNvbnNvbGUubG9nKCdwYXNzY2hlY2snKQogICAgICAgIHRoaXMucGFzc3dvcmQgPSBnZXRyb29tLmRhdGEuZ2V0Um9vbS5wcml2YXRlcGFzc3dvcmQKICAgICAgICB0aGlzLnNob3dDb250ZW50ID0gdHJ1ZQogICAgICB9CiAgICAgIGVsc2V7CiAgICAgICAgdGhpcy5nb3Rvcm9vbSgpCiAgICAgIH0KICAgIH0sCiAgICAKICAgIGNsb3NlTW9kZWw6IGZ1bmN0aW9uKCl7CiAgICAgIHRoaXMuc2hvd0NvbnRlbnQgPSBmYWxzZQogICAgfQogIH0sCiAgYXN5bmMgY3JlYXRlZCgpewogICAgY29uc3QgeyB1c2VybmFtZSx1c2VyaWQgfSA9IGF3YWl0IFVzZXJTdG9yZQogICAgY29uc29sZS5sb2coVXNlclN0b3JlKQogICAgdGhpcy51c2VyTmFtZSA9IHVzZXJuYW1lCiAgICB0aGlzLnVzZXJJZCA9IHVzZXJpZCAKICAgIHRoaXMuZmV0Y2goKQogIH0KfQo="},{"version":3,"sources":["room.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"room.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- 待機部屋の画面、部屋が作られると一覧が表示される -->\n<div>\n<header>\n<h1 class=\"headline\">\n  <a>みんラジ!</a>\n</h1>\n <ul class=\"nav-list\">\n      <li class=\"nav-list-item\"><router-link to=\"/\"><button id=\"back-home-button\">ホーム</button></router-link></li>\n      <li class=\"nav-list-item\"><!-- 部屋を作成する画面に移動 --><router-link to=\"/room_create\"><button id=\"create-room-button\">ルームを作成する</button></router-link></li>\n      <li class=\"nav-list-item\"> <amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n\n</header>\n<main>\n  <section>\n    <section>\n      <h2>ルーム広場</h2>\n      <p>ここはルームに入る待機場所です。「ルームを作成する」ボタンを押したら、ルームを作成するページに移動するので\n      そこでルームを作成してください。\n      </p>\n      <router-link to=\"/room_create\" id=\"create-room-button\">ルームを作成する</router-link>\n      <br>\n      <router-link to=\"/calendar\">カレンダーページ</router-link>\n    </section>\n   \n      <!-- 部屋情報を一つずつ取ってきて表示する、押すとそれぞれの画面に移動する -->\n    <section>\n      <!-- <calendar></calendar> -->\n      <div class=\"main-contents\">\n      <h2>作成したルーム一覧</h2>\n      <p>作成されたルーム一覧です。自分が作ったルームに入りましょう。</p>\n      <div id='room' v-for=\"room in rooms\" :key=\"room.id\">\n        <button id = \"go-my-room-button\" v-on:click=\"passCheck(room.id)\">{{room.tilte}}</button>\n        参加者 : {{room.numberofmember}} 名\n        開始時刻 : {{room.reservedtime}}\n      </div>\n      <div id='overlay' v-show='showContent'>\n        <input id=\"passwordinput\" placeholder=\"ルームのパスワードを入力してください\" size=\"30\" type='text' value=\"\"/>\n        <button id = \"passbottun\" v-on:click=\"passwordInput\">send</button>\n        <br>\n        <p id=\"errormessage\"></p>\n        <br>\n        <p><button v-on:click='closeModel'>close</button></p>\n      </div>\n      <div class=\"error\">{{ this.error }}</div>\n      </div>\n    </section>\n      \n    \n  </section>\n</main>\n\n</div>\n</template>\n\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport router from '../router/router'\n// import calendar from \"./calendar\"\nimport { listRooms } from '../graphql/queries';\nimport { getRoom } from '../graphql/queries';\nimport { updateRoom } from \"../graphql/mutations\";\nimport { updateUser } from \"../graphql/mutations\";\nimport UserStore from '../mobx/UserStore'\n\nwindow.LOG_LEVEL = 'VERBOSE';\n\nexport default {\n  name: 'chat',\n  // components: {\n    // calendar\n  // },\n  data(){\n    return {\n      userName: \"\",\n      userId: \"\",\n      members: [],\n      error: \"\",\n      rooms: [],\n      showContent: false,\n      password: \"\",\n      passcheck: false,\n      roomId: \"\"\n      // subscription: {},\n    }\n  },\n  methods :{\n    async fetch(){\n      //部屋データを取得\n      const roomlimit = 100  // 表示する部屋の数のmax\n      const rooms = await API.graphql(graphqlOperation(listRooms,{limit:roomlimit}))\n      this.rooms = rooms.data.listRooms.items\n    },\n    async gotoroom(){\n      //ユーザー部屋入室情報追加\n      const updateuserinput = {\n        id: this.userId,\n        username: this.userName,\n        userRoomidId: this.roomId\n      }\n      await API.graphql(graphqlOperation(updateUser, { input: updateuserinput }))\n        .catch(error => this.error = JSON.stringify(error))\n      // 部屋の人数更新\n      const getroom = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n      const roommember = getroom.data.getRoom.numberofmember\n      const addroommenber = {\n        id: this.roomId,\n        numberofmember: roommember + 1\n      }\n      console.log(roommember)\n      await API.graphql(graphqlOperation(updateRoom, { input: addroommenber }))\n        .catch(error => this.error = JSON.stringify(error))\n\n      router.push('/room/in')\n    },\n    //パスワード関連\n    passwordInput(){\n      // if (event.keyCode !== 13) return \n      console.log(this.passcheck)\n      let passwordinput = document.getElementById(\"passwordinput\").value\n      if(passwordinput === this.password){\n        this.showContent = false\n        this.gotoroom()\n      }\n      else{\n        var erromessage = document.getElementById(\"errormessage\")\n        erromessage.innerHTML = \"パスワードが違います\"\n      }\n    },\n    async passCheck(id){\n      this.roomId = id\n      const getroom = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n      console.log(getroom.data.getRoom.privatepassword)\n      if(getroom.data.getRoom.privatepassword){\n        console.log('passcheck')\n        this.password = getroom.data.getRoom.privatepassword\n        this.showContent = true\n      }\n      else{\n        this.gotoroom()\n      }\n    },\n    \n    closeModel: function(){\n      this.showContent = false\n    }\n  },\n  async created(){\n    const { username,userid } = await UserStore\n    console.log(UserStore)\n    this.userName = username\n    this.userId = userid \n    this.fetch()\n  }\n}\n</script>\n\n<style src=\"./chat.css\" />\n"]}]}