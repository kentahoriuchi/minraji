{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/room.vue","mtime":1590151157000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEksIHsgIGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXIvcm91dGVyJwovLyBpbXBvcnQgY2FsZW5kYXIgZnJvbSAiLi9jYWxlbmRhciIKaW1wb3J0IHsgbGlzdFJvb21zIH0gZnJvbSAnLi4vZ3JhcGhxbC9xdWVyaWVzJzsKaW1wb3J0IHsgZ2V0Um9vbSB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7CgppbXBvcnQgeyB1cGRhdGVSb29tIH0gZnJvbSAiLi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwppbXBvcnQgeyB1cGRhdGVVc2VyIH0gZnJvbSAiLi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwppbXBvcnQgVXNlclN0b3JlIGZyb20gJy4uL21vYngvVXNlclN0b3JlJwoKd2luZG93LkxPR19MRVZFTCA9ICdWRVJCT1NFJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY2hhdCcsCgogIC8vIGNvbXBvbmVudHM6IHsKICAgIC8vIGNhbGVuZGFyCiAgLy8gfSwKCiAgZGF0YSgpewogICAgcmV0dXJuIHsKICAgICAgdXNlck5hbWU6ICIiLAogICAgICB1c2VySWQ6ICIiLAogICAgICBtZW1iZXJzOiBbXSwKICAgICAgZXJyb3I6ICIiLAogICAgICByb29tczogW10sCiAgICAgIHNob3dDb250ZW50OiBmYWxzZSwKICAgICAgLy8gc3Vic2NyaXB0aW9uOiB7fSwKICAgIH0KICB9LAogIG1ldGhvZHMgOnsKICAgIGFzeW5jIGZldGNoKCl7CiAgICAgIC8v6YOo5bGL44OH44O844K/44KS5Y+W5b6XCiAgICAgIGNvbnN0IHJvb21saW1pdCA9IDEwMCAgLy8g6KGo56S644GZ44KL6YOo5bGL44Gu5pWw44GubWF4CiAgICAgIGNvbnN0IHJvb21zID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihsaXN0Um9vbXMse2xpbWl0OnJvb21saW1pdH0pKQogICAgICB0aGlzLnJvb21zID0gcm9vbXMuZGF0YS5saXN0Um9vbXMuaXRlbXMKICAgIH0sCiAgICBhc3luYyBnb3Rvcm9vbShpZCl7CiAgICAgIC8v44Om44O844K244O86YOo5bGL5YWl5a6k5oOF5aCx6L+95YqgCiAgICAgIGNvbnN0IHVwZGF0ZXVzZXJpbnB1dCA9IHsKICAgICAgICBpZDogdGhpcy51c2VySWQsCiAgICAgICAgdXNlcm5hbWU6IHRoaXMudXNlck5hbWUsCiAgICAgICAgdXNlclJvb21pZElkOiBpZAogICAgICB9CiAgICAgIGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24odXBkYXRlVXNlciwgeyBpbnB1dDogdXBkYXRldXNlcmlucHV0IH0pKQogICAgICAgIC5jYXRjaChlcnJvciA9PiB0aGlzLmVycm9yID0gSlNPTi5zdHJpbmdpZnkoZXJyb3IpKQogICAgICAvLyDpg6jlsYvjga7kurrmlbDmm7TmlrAKICAgICAgY29uc3QgZ2V0cm9vbSA9IGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24oZ2V0Um9vbSx7aWQ6IGlkfSkpCiAgICAgIC8vIGlmKHJvb21pbmZvLmRhdGEuZ2V0Um9vbS5wcml2YXRlcGFzc3dvcmQpewogICAgICAvLyAgIHRoaXMuc2hvd0NvbnRlbnQgPSB0cnVlCiAgICAgIC8vIH0KICAgICAgY29uc3Qgcm9vbW1lbWJlciA9IGdldHJvb20uZGF0YS5nZXRSb29tLm51bWJlcm9mbWVtYmVyCiAgICAgIGNvbnN0IGFkZHJvb21tZW5iZXIgPSB7CiAgICAgICAgaWQ6IGlkLAogICAgICAgIG51bWJlcm9mbWVtYmVyOiByb29tbWVtYmVyICsgMQogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKHJvb21tZW1iZXIpCiAgICAgIGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24odXBkYXRlUm9vbSwgeyBpbnB1dDogYWRkcm9vbW1lbmJlciB9KSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKCiAgICAgIHJvdXRlci5wdXNoKCcvcm9vbS9pbicpCiAgICB9LAogICAgCiAgICAvLyBjbG9zZU1vZGVsOiBmdW5jdGlvbigpewogICAgLy8gICB0aGlzLnNob3dDb250ZW50ID0gZmFsc2UKICAgIC8vIH0KICB9LAogIGFzeW5jIGNyZWF0ZWQoKXsKICAgIGNvbnN0IHsgdXNlcm5hbWUsdXNlcmlkIH0gPSBhd2FpdCBVc2VyU3RvcmUKICAgIGNvbnNvbGUubG9nKFVzZXJTdG9yZSkKICAgIHRoaXMudXNlck5hbWUgPSB1c2VybmFtZQogICAgdGhpcy51c2VySWQgPSB1c2VyaWQgCiAgICB0aGlzLmZldGNoKCkKICB9Cn0K"},{"version":3,"sources":["room.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"room.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- 待機部屋の画面、部屋が作られると一覧が表示される -->\n<div>\n<header>\n<h1 class=\"headline\">\n  <a>みんラジ!</a>\n</h1>\n <ul class=\"nav-list\">\n      <li class=\"nav-list-item\"><router-link to=\"/\" id=\"back-home-button\"> ホーム</router-link></li>\n      <li class=\"nav-list-item\"><!-- 部屋を作成する画面に移動 --><router-link to=\"/room_create\" id=\"create-room-button\">ルームを作成する</router-link></li>\n      <li class=\"nav-list-item\"> <amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n\n</header>\n<main>\n  <section>\n    <section>\n      <h2>ルーム広場</h2>\n      <p>ここはルームに入る待機場所です。「ルームを作成する」ボタンを押したら、ルームを作成するページに移動するので\n      そこでルームを作成してください。\n      </p>\n      <router-link to=\"/room_create\" id=\"create-room-button\">ルームを作成する</router-link>\n    </section>\n   \n      <!-- 部屋情報を一つずつ取ってきて表示する、押すとそれぞれの画面に移動する -->\n    <section>\n\n      <!-- <calendar></calendar> -->\n      <div class=\"main-contents\">\n      <h2>作成したルーム一覧</h2>\n      <p>作成されたルーム一覧です。自分が作ったルームに入りましょう。</p>\n      <div id='room' v-for=\"room in rooms\" :key=\"room.id\">\n        <button id = \"go-room-button\" v-on:click=\"gotoroom(room.id)\">{{room.tilte}}</button>\n        参加者 : {{room.numberofmember}} 名\n\n      </div>\n      <!-- <div id='overlay' v-show='showContent'>\n        <p>これがモーダルウィンドウです。</p>\n        <p><button v-on:click='closeModel'>close</button></p>\n      </div> -->\n      <div class=\"error\">{{ this.error }}</div>\n      </div>\n    </section>\n      \n    \n  </section>\n</main>\n\n</div>\n</template>\n\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport router from '../router/router'\n// import calendar from \"./calendar\"\nimport { listRooms } from '../graphql/queries';\nimport { getRoom } from '../graphql/queries';\n\nimport { updateRoom } from \"../graphql/mutations\";\nimport { updateUser } from \"../graphql/mutations\";\nimport UserStore from '../mobx/UserStore'\n\nwindow.LOG_LEVEL = 'VERBOSE';\n\nexport default {\n  name: 'chat',\n\n  // components: {\n    // calendar\n  // },\n\n  data(){\n    return {\n      userName: \"\",\n      userId: \"\",\n      members: [],\n      error: \"\",\n      rooms: [],\n      showContent: false,\n      // subscription: {},\n    }\n  },\n  methods :{\n    async fetch(){\n      //部屋データを取得\n      const roomlimit = 100  // 表示する部屋の数のmax\n      const rooms = await API.graphql(graphqlOperation(listRooms,{limit:roomlimit}))\n      this.rooms = rooms.data.listRooms.items\n    },\n    async gotoroom(id){\n      //ユーザー部屋入室情報追加\n      const updateuserinput = {\n        id: this.userId,\n        username: this.userName,\n        userRoomidId: id\n      }\n      await API.graphql(graphqlOperation(updateUser, { input: updateuserinput }))\n        .catch(error => this.error = JSON.stringify(error))\n      // 部屋の人数更新\n      const getroom = await API.graphql(graphqlOperation(getRoom,{id: id}))\n      // if(roominfo.data.getRoom.privatepassword){\n      //   this.showContent = true\n      // }\n      const roommember = getroom.data.getRoom.numberofmember\n      const addroommenber = {\n        id: id,\n        numberofmember: roommember + 1\n      }\n      console.log(roommember)\n      await API.graphql(graphqlOperation(updateRoom, { input: addroommenber }))\n        .catch(error => this.error = JSON.stringify(error))\n\n      router.push('/room/in')\n    },\n    \n    // closeModel: function(){\n    //   this.showContent = false\n    // }\n  },\n  async created(){\n    const { username,userid } = await UserStore\n    console.log(UserStore)\n    this.userName = username\n    this.userId = userid \n    this.fetch()\n  }\n}\n</script>\n\n<style src=\"./chat.css\" />"]}]}