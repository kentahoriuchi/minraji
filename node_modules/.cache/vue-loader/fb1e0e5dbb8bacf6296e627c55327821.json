{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/cal_page.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/cal_page.vue","mtime":1590147193000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/css-loader/dist/cjs.js","mtime":1588818774000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1588818841000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/postcss-loader/src/index.js","mtime":1588818811000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2JhY2staG9tZS1idXR0b24gewogIGZvbnQtc2l6ZTogMS40ZW07CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwYWRkaW5nOiAwLjI1ZW0gMC41ZW07CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGNvbG9yOiAjRkZGOwogIGJhY2tncm91bmQ6ICM0MjM1ZmQ7Lyrog4zmma/oibIqLwogIGJvcmRlci1ib3R0b206IHNvbGlkIDJweCAjZDI3ZDAwOy8q5bCR44GX5r+D44GE55uu44Gu6Imy44GrKi8KICBib3JkZXItcmFkaXVzOiA0cHg7Lyrop5Ljga7kuLjjgb8qLwogIGJveC1zaGFkb3c6IGluc2V0IDAgMnB4IDAgcmdiYSgyNTUsMjU1LDI1NSwwLjIpLCAwIDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjE5KTsKICBmb250LXdlaWdodDogYm9sZDsKfQogIAojYmFjay1ob21lLWJ1dHRvbjphY3RpdmUgewogIGJvcmRlci1ib3R0b206IHNvbGlkIDJweCAjZmQ5NTM1OwogIGJveC1zaGFkb3c6IDAgMCAycHggcmdiYSgwLCAwLCAwLCAwLjMwKTsKfQoKI2JhY2stcm9vbS1idXR0b24gewogIGZvbnQtc2l6ZTogMS40ZW07CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGxlZnQ6IDYwMHB4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwYWRkaW5nOiAwLjI1ZW0gMC41ZW07CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGNvbG9yOiAjRkZGOwogIGJhY2tncm91bmQ6ICNmZDk1MzU7Lyrog4zmma/oibIqLwogIGJvcmRlci1ib3R0b206IHNvbGlkIDJweCAjZDI3ZDAwOy8q5bCR44GX5r+D44GE55uu44Gu6Imy44GrKi8KICBib3JkZXItcmFkaXVzOiA0cHg7Lyrop5Ljga7kuLjjgb8qLwogIGJveC1zaGFkb3c6IGluc2V0IDAgMnB4IDAgcmdiYSgyNTUsMjU1LDI1NSwwLjIpLCAwIDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjE5KTsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI2JhY2stcm9vbS1idXR0b246YWN0aXZlIHsKICBib3JkZXItYm90dG9tOiBzb2xpZCAycHggI2ZkOTUzNTsKICBib3gtc2hhZG93OiAwIDAgMnB4IHJnYmEoMCwgMCwgMCwgMC4zMCk7Cn0K"},{"version":3,"sources":["cal_page.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"cal_page.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- 待機部屋の画面、部屋が作られると一覧が表示される -->\n<div>\n<header>\n<h1 class=\"headline\">\n  <a>みんラジ!</a>\n</h1>\n <ul class=\"nav-list\">\n      <li class=\"nav-list-item\"><router-link to=\"/\" id=\"back-home-button\"> ホーム</router-link></li>\n      <li class=\"nav-list-item\"><router-link to=\"/room\" id=\"back-room-button-header\">ルーム広場に行く</router-link></li>\n      <li class=\"nav-list-item\"> <amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n  <!--<router-link\n    :to=\"{\n      name: '/', \n      hash: '#hashtag'\n      }\"\n  >ルームを作成する</router-link>-->\n</header>\n<main>\n  <section>\n    \n   \n    \n    <section>\n      <calendar></calendar>\n    </section>\n      \n    \n  </section>\n</main>\n\n</div>\n</template>\n\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { createUser } from \"../graphql/mutations\";\nimport { updateUser } from \"../graphql/mutations\";\nimport { listRooms } from '../graphql/queries';\nimport { getRoom } from '../graphql/queries';\nimport { listUsers } from '../graphql/queries';\nimport router from '../router/router'\nimport calendar from \"./calendar\"\n\nwindow.LOG_LEVEL = 'VERBOSE';\nexport default {\n  name: 'chat',\n  components: {\n    calendar\n  },\n  data(){\n    return {\n      userName: \"\",\n      members: [],\n      // subscription: {},\n      error: \"\",\n      rooms: [],\n      room_id: \"\"\n    }\n  },\n  methods :{\n    async fetch(){\n      const room_temp = await API.graphql(graphqlOperation(listRooms,{limit:10}))\n      this.rooms = room_temp.data.listRooms.items\n      for(let i = 0; i < this.rooms.length; i++){\n        let member = await API.graphql(graphqlOperation(getRoom,{id: this.rooms[i].id}))\n        this.members.push(member.getRoom.users.items.length)\n      }\n      console.log(this.rooms)\n    },\n    async gotoroom(temp){\n      //ユーザーの認証とかをやる\n      const roomid = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n      const userroom = roomid.data.listUsers.items[0]\n      console.log(userroom)\n      // if (!userroom.roomid){\n      console.log(document.getElementById(\"room\").textContent)\n      var room_a = await API.graphql(graphqlOperation(getRoom,{id: temp}))\n      console.log(room_a.data.getRoom.users.items)\n      this.members = room_a.data.getRoom.users.items\n      var room = room_a.data.getRoom.users\n      const userroomid = {\n        id: userroom.id,\n        username: this.userName,\n        userRoomidId: room.id\n      }\n      console.log(userroomid)\n      await API.graphql(graphqlOperation(updateUser, { input: userroomid }))\n        .catch(error => this.error = JSON.stringify(error))\n      // }\n      // else{\n      //   console.log('already room in')\n      // }\n      router.push('/room/in')\n    }\n  },\n  async created(){\n    this.userName = (await Auth.currentAuthenticatedUser()).username;\n    var user = await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n    console.log(user.data.listUsers.items.length)\n    console.log(!user.data.listUsers.items.length)\n    if (!user.data.listUsers.items.length){\n      const newuser = {\n        id: new Date().getTime() + this.userName,\n        username: this.userName\n      }\n      API.graphql(graphqlOperation(createUser, { input: newuser }))\n        .catch(error => this.error = JSON.stringify(error))\n      console.log(newuser)\n    }\n    this.fetch()\n  }\n}\n</script>\n\n<style>\n\n#back-home-button {\n  font-size: 1.4em;\n  position: relative;\n  display: inline-block;\n  padding: 0.25em 0.5em;\n  text-decoration: none;\n  color: #FFF;\n  background: #4235fd;/*背景色*/\n  border-bottom: solid 2px #d27d00;/*少し濃い目の色に*/\n  border-radius: 4px;/*角の丸み*/\n  box-shadow: inset 0 2px 0 rgba(255,255,255,0.2), 0 2px 2px rgba(0, 0, 0, 0.19);\n  font-weight: bold;\n}\n  \n#back-home-button:active {\n  border-bottom: solid 2px #fd9535;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.30);\n}\n\n#back-room-button {\n  font-size: 1.4em;\n  position: relative;\n  left: 600px;\n  display: inline-block;\n  padding: 0.25em 0.5em;\n  text-decoration: none;\n  color: #FFF;\n  background: #fd9535;/*背景色*/\n  border-bottom: solid 2px #d27d00;/*少し濃い目の色に*/\n  border-radius: 4px;/*角の丸み*/\n  box-shadow: inset 0 2px 0 rgba(255,255,255,0.2), 0 2px 2px rgba(0, 0, 0, 0.19);\n  font-weight: bold;\n}\n\n#back-room-button:active {\n  border-bottom: solid 2px #fd9535;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.30);\n}\n</style>\n"]}]}