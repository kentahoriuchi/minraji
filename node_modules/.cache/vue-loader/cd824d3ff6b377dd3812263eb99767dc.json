{"remainingRequest":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vagrant/workspace/minraji/utsprint/minraji/src/components/Movie.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/src/components/Movie.vue","mtime":1589708072000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1588818754000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1588818758000},{"path":"/home/vagrant/workspace/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1588818841000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgVnVlWW91dHViZSBmcm9tICd2dWUteW91dHViZScKaW1wb3J0IEFQSSwgeyAgZ3JhcGhxbE9wZXJhdGlvbiB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9hcGknOwppbXBvcnQgeyBBdXRoIH0gZnJvbSAnYXdzLWFtcGxpZnknCmltcG9ydCB7IGNyZWF0ZU1lc3NhZ2UgfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7CmltcG9ydCB7IGxpc3RNZXNzYWdlcyB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7CmltcG9ydCB7IG9uQ3JlYXRlTWVzc2FnZSB9IGZyb20gJy4uL2dyYXBocWwvc3Vic2NyaXB0aW9ucyc7Cgp3aW5kb3cuTE9HX0xFVkVMID0gJ1ZFUkJPU0UnOwoKVnVlLnVzZShWdWVZb3V0dWJlKQoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB2aWRlb1VybDogJ2h0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9SnlNUEJuMjV3UDQnLAogICAgICBzZWNvbmRzOiAiIiwKICAgICAgbWVzc2FnZXM6IFtdLAogICAgICBjb250ZW50OiAiIiwKICAgICAgdXNlck5hbWU6ICIiLAogICAgICBzdWJzY3JpcHRpb246IHt9LAogICAgICBlcnJvcjogIiIKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHBsYXlWaWRlbygpIHsKICAgICAgdGhpcy5wbGF5ZXIucGxheVZpZGVvKCkKICAgIH0sCiAgICBwbGF5aW5nKCkgewogICAgICBjb25zb2xlLmxvZygnd2UgYXJlIHdhdGNoaW5nISEhJykKICAgIH0sCiAgICBhc3luYyByZWFkeSgpIHsKICAgICAgY29uc29sZS5sb2coIk5vdyB3ZSBhcmUgcmVhZHkgZm9yIHN0cmVhbSEhISIpCiAgICAgIC8vdGhpcy5wbGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcih0aGlzLnBsYXllci5vblN0YXRlQ2hhbmdlLCApCiAgICAgIGNvbnNvbGUubG9nKGF3YWl0IHRoaXMucGxheWVyLmdldFBsYXllclN0YXRlKCkpCiAgICAgIC8vIHRoaXMucGxheWVyLnNlZWtUbyhNYXRoLmZsb29yKG5ldyBEYXRlKCkuZ2V0VGltZSgpLzEwMDApIC0gdGhpcy5jcmVhdGVkVGltZSkKICAgICAgLy8gdGhpcy5wbGF5VmlkZW8oKQogICAgfSwKICAgIGN1ZWQoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdjdWVkJykKICAgICAgY29uc29sZS5sb2codGhpcy5wbGF5ZXIuZ2V0UGxheWVyU3RhdGUoKSkKICAgIH0sCiAgICBlbmRlZCgpIHsKICAgICAgY29uc29sZS5sb2coJ2VuZGVkJykKICAgICAgY29uc29sZS5sb2codGhpcy5wbGF5ZXIuZ2V0UGxheWVyU3RhdGUoKSkKICAgIH0sCiAgICBwYXVzZWQoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdwYXVzZWQnKQogICAgICBjb25zb2xlLmxvZyh0aGlzLnBsYXllci5nZXRQbGF5ZXJTdGF0ZSgpKQogICAgfSwKICAgIGJ1ZmZlcmluZygpIHsKICAgICAgY29uc29sZS5sb2coJ2J1ZmZlcmluZycpCiAgICAgIGNvbnNvbGUubG9nKHRoaXMucGxheWVyLmdldFBsYXllclN0YXRlKCkpCiAgICB9LAogICAgYXN5bmMgc2VuZFNlZWsoKSB7CiAgICAgIGNvbnN0IHNlY29uZHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2Vla3RpbWUiKS52YWx1ZQogICAgICBjb25zb2xlLmxvZyhhd2FpdCB0aGlzLnBsYXllci5nZXRQbGF5ZXJTdGF0ZSgpKQogICAgICB0aGlzLnBsYXllci5zZWVrVG8oc2Vjb25kcykKICAgICAgY29uc29sZS5sb2coYXdhaXQgdGhpcy5wbGF5ZXIuZ2V0UGxheWVyU3RhdGUoKSkKICAgIH0sCiAgICBzZW5kTWVzc2FnZSgpewogICAgICAvLyBUT0RPKDEpIEdyYXBoUUzjgqjjg7Pjg4njg53jgqTjg7Pjg4jjgatNdXRhdGlvbuOCkueZuuihjOOBl+OAgeODoeODg+OCu+ODvOOCuOOCkueZu+mMsuOBmeOCiwogICAgICBpZiAoZXZlbnQua2V5Q29kZSAhPT0gMTMpIHJldHVybiAvLyBFbnRlcuOCreODvOOBruWgtOWQiOOBruOBv+mAgeS/oeWHpueQhuOCkuihjOOBhgogICAgICBjb25zdCBtZXNzYWdlID0geyAKICAgICAgICAgIGlkOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSArIHRoaXMudXNlck5hbWUsCiAgICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyTmFtZSwKICAgICAgICAgIGNvbnRlbnQ6IHRoaXMuY29udGVudAogICAgICB9CiAgICAgIC8vIE11dGF0aW9u44Gu5a6f6KGMCiAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24oY3JlYXRlTWVzc2FnZSwgeyBpbnB1dDogbWVzc2FnZSB9KSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKICAgICAgdGhpcy5jb250ZW50ID0gIiIKICAgICAgY29uc29sZS5sb2coJ211dCcpCiAgICB9LAogICAgZmV0Y2goKXsKICAgICAgLy8gVE9ETygyKSBHcmFwaFFM44Ko44Oz44OJ44Od44Kk44Oz44OI44GrUXVlcnnjgpLnmbrooYzjgZfjgIHjg6Hjg4Pjgrvjg7zjgrjkuIDopqfjgpLlj5blvpfjgZnjgosKICAgICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihsaXN0TWVzc2FnZXMsIHsgbGltaXQ6IDIwMCB9KSkKICAgICAgLnRoZW4obWVzc2FnZXMgPT4gdGhpcy5tZXNzYWdlcyA9IG1lc3NhZ2VzLmRhdGEubGlzdE1lc3NhZ2VzLml0ZW1zLnNvcnQoKGEsYikgPT4gYS5pZCA+IGIuaWQgPyAxIDogLTEpKQogICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKICAgICAgY29uc29sZS5sb2coJ3F1ZXJ5JykKICAgIH0sCiAgICBzdWJzY3JpYmUoKXsKICAgICAgLy8gVE9ETygzLTEpIEdyYXBoUUzjgqjjg7Pjg4njg53jgqTjg7Pjg4jjgatTdWJzY3JpcHRpb27jgpLnmbrooYzjgZfjgIFtdXRhdGlvbuOCkuebo+imluOBmeOCiwogICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24ob25DcmVhdGVNZXNzYWdlKSkuc3Vic2NyaWJlKHsKICAgICAgICBuZXh0OiAoZXZlbnREYXRhKSA9PiB7CiAgICAgICAgICBjb25zdCBtZXNzYWdlID0gZXZlbnREYXRhLnZhbHVlLmRhdGEub25DcmVhdGVNZXNzYWdlOwogICAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKG1lc3NhZ2UpOwogICAgICAgICAgY29uc29sZS5sb2coJ3N1YnMnKQogICAgICAgICAgY29uc29sZS5sb2codGhpcy5tZXNzYWdlcykKICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMubWVzc2FnZXMuY29udGVudCkKICAgICAgICB9CiAgICAgIH0pCiAgICB9CiAgfSwKICBhc3luYyBjcmVhdGVkKCl7CiAgICB0aGlzLnVzZXJOYW1lID0gKGF3YWl0IEF1dGguY3VycmVudEF1dGhlbnRpY2F0ZWRVc2VyKCkpLnVzZXJuYW1lOwogICAgdGhpcy5mZXRjaCgpCiAgICB0aGlzLnN1YnNjcmliZSgpCiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgLy8gVE9ETygzLTIpIOODgeODo+ODg+ODiOeUu+mdouOBi+OCiembouOCjOOCi+mam+OBq+OAgVVuU3Vic2NyaWJl44GZ44KLCiAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHBsYXllcigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMueW91dHViZS5wbGF5ZXIKICAgIH0sCiAgICB2aWRlb0lkKCl7CiAgICAgIHZhciBhcnJheTEgPSB0aGlzLnZpZGVvVXJsLm1hdGNoKC9cP3Y9KFteJl0rKS8pCiAgICAgIHJldHVybiBhcnJheTFbMV0KICAgIH0sCiAgICBjdXJyZW50VGltZTogZnVuY3Rpb24oKXsKICAgICAgcmV0dXJuIHRoaXMuJHJlZnMueW91dHViZS5wbGF5ZXIuZ2V0Q3VycmVudFRpbWUoKQogICAgfSwKICAgIHBsYXllclN0YXRlKCl7CiAgICAgIHJldHVybiB0aGlzLiRyZWZzLnlvdXR1YmUucGxheWVyLmdldFBsYXllclN0YXRlKCkKICAgIH0gCiAgfQp9Cg=="},{"version":3,"sources":["Movie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Movie.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n  ここはフルコメントアウトです。\n    <p>\n      <input placeholder=\"URLを入力\" v-model=\"videoUrl\">\n    </p>\n    <youtube :video-id=\"videoId\" ref=\"youtube\"\n    :player-vars=\"playerVars\"\n      @playing=\"playing\" \n      @cued=\"cued\" \n      @ready=\"ready\" \n      @ended=\"ended\" \n      @paused=\"paused\"\n      @buffering=\"buffering\">></youtube> \n    <p>\n      Original URL  : \"{{videoUrl}}\"\n      generated ID  : \"{{videoId}}\"\n      <!--\n      player status : \"{{playerState}}\"\n      play time     : \" {{currentTime}}\"  \n      -->\n    </p>\n    <button @click=\"playVideo\">play</button>\n    <p>\n      <!--\n      <input placeholder=\"飛ばしたい時間を入力(Enterで送信)\" v-model=\"seconds\" @keydown.enter.native=\"sendSeek()\">\n      -->\n      <input id=\"seektime\" placeholder=\"飛ばしたい時間を入力(Enterで送信)\" type='text' value=\"\"/>\n      <input type=\"button\" v-on:click=\"sendSeek()\" value=\"時間とばし\">\n    </p>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport VueYoutube from 'vue-youtube'\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { createMessage } from \"../graphql/mutations\";\nimport { listMessages } from '../graphql/queries';\nimport { onCreateMessage } from '../graphql/subscriptions';\n\nwindow.LOG_LEVEL = 'VERBOSE';\n\nVue.use(VueYoutube)\n\nexport default {\n  data() {\n    return {\n      videoUrl: 'https://www.youtube.com/watch?v=JyMPBn25wP4',\n      seconds: \"\",\n      messages: [],\n      content: \"\",\n      userName: \"\",\n      subscription: {},\n      error: \"\"\n    }\n  },\n  methods: {\n    playVideo() {\n      this.player.playVideo()\n    },\n    playing() {\n      console.log('we are watching!!!')\n    },\n    async ready() {\n      console.log(\"Now we are ready for stream!!!\")\n      //this.player.addEventListener(this.player.onStateChange, )\n      console.log(await this.player.getPlayerState())\n      // this.player.seekTo(Math.floor(new Date().getTime()/1000) - this.createdTime)\n      // this.playVideo()\n    },\n    cued() {\n      console.log('cued')\n      console.log(this.player.getPlayerState())\n    },\n    ended() {\n      console.log('ended')\n      console.log(this.player.getPlayerState())\n    },\n    paused() {\n      console.log('paused')\n      console.log(this.player.getPlayerState())\n    },\n    buffering() {\n      console.log('buffering')\n      console.log(this.player.getPlayerState())\n    },\n    async sendSeek() {\n      const seconds = document.getElementById(\"seektime\").value\n      console.log(await this.player.getPlayerState())\n      this.player.seekTo(seconds)\n      console.log(await this.player.getPlayerState())\n    },\n    sendMessage(){\n      // TODO(1) GraphQLエンドポイントにMutationを発行し、メッセージを登録する\n      if (event.keyCode !== 13) return // Enterキーの場合のみ送信処理を行う\n      const message = { \n          id: new Date().getTime() + this.userName,\n          username: this.userName,\n          content: this.content\n      }\n      // Mutationの実行\n      API.graphql(graphqlOperation(createMessage, { input: message }))\n        .catch(error => this.error = JSON.stringify(error))\n      this.content = \"\"\n      console.log('mut')\n    },\n    fetch(){\n      // TODO(2) GraphQLエンドポイントにQueryを発行し、メッセージ一覧を取得する\n      API.graphql(graphqlOperation(listMessages, { limit: 200 }))\n      .then(messages => this.messages = messages.data.listMessages.items.sort((a,b) => a.id > b.id ? 1 : -1))\n      .catch(error => this.error = JSON.stringify(error))\n      console.log('query')\n    },\n    subscribe(){\n      // TODO(3-1) GraphQLエンドポイントにSubscriptionを発行し、mutationを監視する\n      this.subscription = API.graphql(graphqlOperation(onCreateMessage)).subscribe({\n        next: (eventData) => {\n          const message = eventData.value.data.onCreateMessage;\n          this.messages.push(message);\n          console.log('subs')\n          console.log(this.messages)\n          console.log(this.messages.content)\n        }\n      })\n    }\n  },\n  async created(){\n    this.userName = (await Auth.currentAuthenticatedUser()).username;\n    this.fetch()\n    this.subscribe()\n  },\n  beforeDestroy() {\n    // TODO(3-2) チャット画面から離れる際に、UnSubscribeする\n    this.subscription.unsubscribe();\n  },\n  computed: {\n    player() {\n      return this.$refs.youtube.player\n    },\n    videoId(){\n      var array1 = this.videoUrl.match(/\\?v=([^&]+)/)\n      return array1[1]\n    },\n    currentTime: function(){\n      return this.$refs.youtube.player.getCurrentTime()\n    },\n    playerState(){\n      return this.$refs.youtube.player.getPlayerState()\n    } \n  }\n}\n</script>\n\n<style src=\"./Movie.css\" />"]}]}