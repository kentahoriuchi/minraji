{"remainingRequest":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/thread-loader/dist/cjs.js!/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js!/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mech-user/Documents/minraji/utsprint/minraji/src/components/chatgroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/src/components/chatgroup.vue","mtime":1590497442430},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1590497441462},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/thread-loader/dist/cjs.js","mtime":1590497442294},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1590497441362},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1590497441462},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1590497442326}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbWVjaC11c2VyL0RvY3VtZW50cy9taW5yYWppL3V0c3ByaW50L21pbnJhamkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQVBJLCB7IGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJzsKaW1wb3J0IHsgY3JlYXRlTWVzc2FnZSB9IGZyb20gIi4uL2dyYXBocWwvbXV0YXRpb25zIjsKaW1wb3J0IHsgZ2V0Um9vbSB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7CmltcG9ydCB7IGdldFVzZXIgfSBmcm9tICcuLi9ncmFwaHFsL3F1ZXJpZXMnOwppbXBvcnQgVXNlclN0b3JlIGZyb20gJy4uL21vYngvVXNlclN0b3JlJzsgLy8gaW1wb3J0IHsgb25DcmVhdGVNZXNzYWdlIH0gZnJvbSAnLi4vZ3JhcGhxbC9zdWJzY3JpcHRpb25zJzsKCndpbmRvdy5MT0dfTEVWRUwgPSAnVkVSQk9TRSc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVzc2FnZXM6IFtdLAogICAgICByb29tSWQ6ICIiLAogICAgICB1c2VyTmFtZTogIiIsCiAgICAgIHVzZXJJZDogIiIsCiAgICAgIGVycm9yOiAiIiwKICAgICAgc3Vic2NyaXB0aW9uOiB7fQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoOiBmdW5jdGlvbiBmZXRjaCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGdldHJvb207CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihnZXRSb29tLCB7CiAgICAgICAgICAgICAgICAgIGlkOiBfdGhpcy5yb29tSWQKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZ2V0cm9vbSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy5tZXNzYWdlcyA9IGdldHJvb20uZGF0YS5nZXRSb29tLm1lc3NhZ2VzLml0ZW1zOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMubWVzc2FnZXMpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2VuZE1lc3NhZ2U6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBtZXNzYWdlLCBjcmVhdGVtZXNzYWdlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBtZXNzYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1lc3NhZ2VpbnB1dCIpLnZhbHVlOwogICAgICAgICAgICAgICAgY3JlYXRlbWVzc2FnZSA9IHsKICAgICAgICAgICAgICAgICAgaWQ6IG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgX3RoaXMyLnVzZXJOYW1lLAogICAgICAgICAgICAgICAgICB1c2VybmFtZTogX3RoaXMyLnVzZXJOYW1lLAogICAgICAgICAgICAgICAgICBjb250ZW50OiBtZXNzYWdlLAogICAgICAgICAgICAgICAgICBtZXNzYWdlUm9vbWlkSWQ6IF90aGlzMi5yb29tSWQKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjcmVhdGVtZXNzYWdlKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGNyZWF0ZU1lc3NhZ2UsIHsKICAgICAgICAgICAgICAgICAgaW5wdXQ6IGNyZWF0ZW1lc3NhZ2UKICAgICAgICAgICAgICAgIH0pKS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0gLy8gc3Vic2NyaWJlKCl7CiAgICAvLyAgIHRoaXMuc3Vic2NyaXB0aW9uID0gQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihvbkNyZWF0ZU1lc3NhZ2UpKS5zdWJzY3JpYmUoewogICAgLy8gICAgIG5leHQ6IChldmVudERhdGEpID0+IHsKICAgIC8vICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBldmVudERhdGEudmFsdWUuZGF0YS5vbkNyZWF0ZU1lc3NhZ2U7CiAgICAvLyAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2gobWVzc2FnZSk7CiAgICAvLyAgICAgfQogICAgLy8gICB9KQogICAgLy8gfSwKCiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciBfeWllbGQkVXNlclN0b3JlLCB1c2VybmFtZSwgdXNlcmlkLCB1c2VyX2lkOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIFVzZXJTdG9yZTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfeWllbGQkVXNlclN0b3JlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgdXNlcm5hbWUgPSBfeWllbGQkVXNlclN0b3JlLnVzZXJuYW1lOwogICAgICAgICAgICAgIHVzZXJpZCA9IF95aWVsZCRVc2VyU3RvcmUudXNlcmlkOwogICAgICAgICAgICAgIF90aGlzMy51c2VyTmFtZSA9IHVzZXJuYW1lOwogICAgICAgICAgICAgIF90aGlzMy51c2VySWQgPSB1c2VyaWQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgIHJldHVybiBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGdldFVzZXIsIHsKICAgICAgICAgICAgICAgIGlkOiBfdGhpczMudXNlcklkCiAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHVzZXJfaWQgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyh1c2VyX2lkLmRhdGEuZ2V0VXNlci5yb29taWQuaWQpOwogICAgICAgICAgICAgIF90aGlzMy5yb29tSWQgPSB1c2VyX2lkLmRhdGEuZ2V0VXNlci5yb29taWQuaWQ7CgogICAgICAgICAgICAgIF90aGlzMy5mZXRjaCgpOyAvLyB0aGlzLnN1YnNjcmliZSgpCgoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["chatgroup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n<header>\n<h1 class=\"headline\">\n      <a>みんラジ!</a>\n</h1>\n</header>\n\n<main>\n  <div class=\"main-contents\">\n    <div class=\"message_base\">\n        <div v-for=\"message in messages\" :key=\"message.id\">\n          <div v-bind:class=\"[message.username === userName ? 'message' : 'message_opponent']\">{{message.content}}</div>\n          <div v-bind:class=\"[message.username === userName ? 'username' : 'username_opponent']\">{{message.username}}</div>\n        </div>\n    </div>\n    <!-- <el-input placeholder=\"メッセージを入力(Enterで送信)\" v-model=\"content\" @keydown.enter.native=\"sendMessage\"></el-input> -->\n    <input id=\"messageinput\" placeholder=\"メッセージを入力してください\" size=\"30\" type='text' value=\"\"/>\n    <button id = \"sendMessage\" v-on:click=\"sendMessage\">send</button>\n    <router-link to='/room/in' id=\"chatgroup\">test</router-link>\n    <div class=\"error\">{{ this.error }}</div>\n  </div>\n\n\n  </main>\n\n  \n</div>  \n</template>\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { createMessage } from \"../graphql/mutations\";\nimport { getRoom } from '../graphql/queries';\nimport { getUser } from '../graphql/queries';\nimport UserStore from '../mobx/UserStore';\n// import { onCreateMessage } from '../graphql/subscriptions';\n\nwindow.LOG_LEVEL = 'VERBOSE';\nexport default {\n  data(){\n    return{\n      messages: [],\n      roomId: \"\",\n      userName: \"\",\n      userId: \"\",\n      error: \"\",\n      subscription: {},\n    }\n  },\n  methods :{\n    async fetch(){\n      const getroom = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n      this.messages = getroom.data.getRoom.messages.items\n      console.log(this.messages)\n    },\n    async sendMessage(){\n      const message = document.getElementById(\"messageinput\").value\n      const createmessage = {\n        id: new Date().getTime() + this.userName,\n        username: this.userName,\n        content: message,\n        messageRoomidId: this.roomId\n      }\n      console.log(createmessage)\n      await API.graphql(graphqlOperation(createMessage, { input: createmessage }))\n        .catch(error => this.error = JSON.stringify(error))\n    },\n    // subscribe(){\n    //   this.subscription = API.graphql(graphqlOperation(onCreateMessage)).subscribe({\n    //     next: (eventData) => {\n    //       const message = eventData.value.data.onCreateMessage;\n    //       this.messages.push(message);\n    //     }\n    //   })\n    // },\n  },\n  async created(){\n    const { username,userid } = await UserStore\n    this.userName = username\n    this.userId = userid \n    const user_id = await API.graphql(graphqlOperation(getUser,{id: this.userId}))\n    console.log(user_id.data.getUser.roomid.id)\n    this.roomId = user_id.data.getUser.roomid.id\n    this.fetch()\n    // this.subscribe()\n  },\n\n}\n</script>\n\n<style src=\"./chat.css\" />\n\n"],"sourceRoot":"src/components"}]}