{"remainingRequest":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mech-user/Documents/minraji/utsprint/minraji/src/components/room.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/src/components/room.vue","mtime":1590497582815},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":1590497441362},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":1590497441462},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":1590497442326}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEksIHsgIGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXIvcm91dGVyJwovLyBpbXBvcnQgY2FsZW5kYXIgZnJvbSAiLi9jYWxlbmRhciIKaW1wb3J0IHsgbGlzdFJvb21zIH0gZnJvbSAnLi4vZ3JhcGhxbC9xdWVyaWVzJzsKaW1wb3J0IHsgZ2V0Um9vbSB9IGZyb20gJy4uL2dyYXBocWwvcXVlcmllcyc7Ci8vIGltcG9ydCB7IHVwZGF0ZVJvb20gfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7CmltcG9ydCB7IHVwZGF0ZVVzZXIgfSBmcm9tICIuLi9ncmFwaHFsL211dGF0aW9ucyI7Ci8vIGltcG9ydCBVc2VyU3RvcmUgZnJvbSAnLi4vbW9ieC9Vc2VyU3RvcmUnCi8vIGltcG9ydCBSb29tTWVtYmVyIGZyb20gJy4uL21vYngvUm9vbU1lbWJlcicKaW1wb3J0IHsgQXV0aCB9IGZyb20gJ2F3cy1hbXBsaWZ5JwppbXBvcnQgeyBsaXN0VXNlcnMgfSBmcm9tICcuLi9ncmFwaHFsL3F1ZXJpZXMnOwppbXBvcnQgeyB1cGRhdGVSb29tIH0gZnJvbSAnLi4vZ3JhcGhxbC9tdXRhdGlvbnMnOwoKd2luZG93LkxPR19MRVZFTCA9ICdWRVJCT1NFJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY2hhdCcsCiAgLy8gY29tcG9uZW50czogewogICAgLy8gY2FsZW5kYXIKICAvLyB9LAogIGRhdGEoKXsKICAgIHJldHVybiB7CiAgICAgIHVzZXJOYW1lOiAiIiwKICAgICAgdXNlcklkOiAiIiwKICAgICAgbWVtYmVyczogW10sCiAgICAgIGVycm9yOiAiIiwKICAgICAgcm9vbXM6IFtdLAogICAgICBzaG93Q29udGVudDogZmFsc2UsCiAgICAgIHBhc3N3b3JkOiAiIiwKICAgICAgcGFzc2NoZWNrOiBmYWxzZSwKICAgICAgcm9vbUlkOiAiIgogICAgICAvLyBzdWJzY3JpcHRpb246IHt9LAogICAgfQogIH0sCiAgbWV0aG9kcyA6ewogICAgYXN5bmMgZmV0Y2goKXsKICAgICAgLy/pg6jlsYvjg4fjg7zjgr/jgpLlj5blvpcKICAgICAgUm9vbU1lbWJlcgogICAgICBjb25zdCByb29tbGltaXQgPSAxMDAgIC8vIOihqOekuuOBmeOCi+mDqOWxi+OBruaVsOOBrm1heAogICAgICBjb25zdCByb29tcyA9IGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obGlzdFJvb21zLHtsaW1pdDpyb29tbGltaXR9KSkKICAgICAgdGhpcy5yb29tcyA9IHJvb21zLmRhdGEubGlzdFJvb21zLml0ZW1zCiAgICB9LAogICAgYXN5bmMgZ290b3Jvb20oKXsKICAgICAgLy/jg6bjg7zjgrbjg7zpg6jlsYvlhaXlrqTmg4XloLHov73liqAKICAgICAgY29uc3QgdXBkYXRldXNlcmlucHV0ID0gewogICAgICAgIGlkOiB0aGlzLnVzZXJJZCwKICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyTmFtZSwKICAgICAgICB1c2VyUm9vbWlkSWQ6IHRoaXMucm9vbUlkCiAgICAgIH0KICAgICAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbih1cGRhdGVVc2VyLCB7IGlucHV0OiB1cGRhdGV1c2VyaW5wdXQgfSkpCiAgICAgICAgLmNhdGNoKGVycm9yID0+IHRoaXMuZXJyb3IgPSBKU09OLnN0cmluZ2lmeShlcnJvcikpCiAgICAgIC8vIOmDqOWxi+OBruS6uuaVsOabtOaWsAogICAgICAvLyBjb25zdCBnZXRyb29tID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihnZXRSb29tLHtpZDogdGhpcy5yb29tSWR9KSkKICAgICAgLy8gY29uc3Qgcm9vbW1lbWJlciA9IGdldHJvb20uZGF0YS5nZXRSb29tLm51bWJlcm9mbWVtYmVyCiAgICAgIC8vIGNvbnN0IGFkZHJvb21tZW5iZXIgPSB7CiAgICAgIC8vICAgaWQ6IHRoaXMucm9vbUlkLAogICAgICAvLyAgIG51bWJlcm9mbWVtYmVyOiByb29tbWVtYmVyICsgMQogICAgICAvLyB9CiAgICAgIC8vIGNvbnNvbGUubG9nKHJvb21tZW1iZXIpCiAgICAgIC8vIGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24odXBkYXRlUm9vbSwgeyBpbnB1dDogYWRkcm9vbW1lbmJlciB9KSkKICAgICAgLy8gICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKCiAgICAgIHJvdXRlci5wdXNoKCcvcm9vbS9pbicpCiAgICB9LAogICAgLy/jg5Hjgrnjg6/jg7zjg4nplqLpgKMKICAgIHBhc3N3b3JkSW5wdXQoKXsKICAgICAgY29uc29sZS5sb2codGhpcy5wYXNzY2hlY2spCiAgICAgIGxldCBwYXNzd29yZGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInBhc3N3b3JkLWlucHV0IikudmFsdWUKICAgICAgaWYocGFzc3dvcmRpbnB1dCA9PT0gdGhpcy5wYXNzd29yZCl7CiAgICAgICAgdGhpcy5zaG93Q29udGVudCA9IGZhbHNlCiAgICAgICAgdGhpcy5nb3Rvcm9vbSgpCiAgICAgIH0KICAgICAgZWxzZXsKICAgICAgICB2YXIgZXJyb21lc3NhZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZXJyb3JtZXNzYWdlIikKICAgICAgICBlcnJvbWVzc2FnZS5pbm5lckhUTUwgPSAi44OR44K544Ov44O844OJ44GM6YGV44GE44G+44GZIgogICAgICB9CiAgICB9LAoKICAgIGFzeW5jIHBhc3NDaGVjayhpZCl7CiAgICAgIHRoaXMucm9vbUlkID0gaWQKICAgICAgY29uc3QgZ2V0cm9vbSA9IGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24oZ2V0Um9vbSx7aWQ6IHRoaXMucm9vbUlkfSkpCiAgICAgIGNvbnNvbGUubG9nKGdldHJvb20uZGF0YS5nZXRSb29tLnByaXZhdGVwYXNzd29yZCkKICAgICAgaWYoZ2V0cm9vbS5kYXRhLmdldFJvb20ucHJpdmF0ZXBhc3N3b3JkKXsKICAgICAgICBjb25zb2xlLmxvZygncGFzc2NoZWNrJykKICAgICAgICB0aGlzLnBhc3N3b3JkID0gZ2V0cm9vbS5kYXRhLmdldFJvb20ucHJpdmF0ZXBhc3N3b3JkCiAgICAgICAgdGhpcy5zaG93Q29udGVudCA9IHRydWUKICAgICAgfQogICAgICBlbHNlewogICAgICAgIHRoaXMuZ290b3Jvb20oKQogICAgICB9CiAgICB9LAogICAgYXN5bmMgaW5pdHVzZXJkYXRhKCkgewogICAgICB0cnl7CiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IEF1dGguY3VycmVudEF1dGhlbnRpY2F0ZWRVc2VyKCkKICAgICAgICB0aGlzLnVzZXJOYW1lID0gdXNlci51c2VybmFtZQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgZ2V0dGluZyB1c2VyIGRhdGEuLi4gJywgZXJyKQogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKCd1c2VybmFtZTonLHRoaXMudXNlck5hbWUpCiAgICAgIGlmKHRoaXMudXNlck5hbWUgIT09ICcnKXsKICAgICAgICBjb25zdCB1c2VyZGF0YSA9ICBhd2FpdCBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGxpc3RVc2VycywgeyBmaWx0ZXI6IHsndXNlcm5hbWUnOntlcTogdGhpcy51c2VyTmFtZX19fSkpCiAgICAgICAgY29uc29sZS5sb2codXNlcmRhdGEuZGF0YS5saXN0VXNlcnMuaXRlbXNbMF0uaWQpCiAgICAgICAgdGhpcy51c2VySWQgPSB1c2VyZGF0YS5kYXRhLmxpc3RVc2Vycy5pdGVtc1swXS5pZAogICAgICB9CiAgICB9LAogICAgYXN5bmMgaW5pdCgpewogICAgdHJ5ewogICAgICBjb25zdCByb29tbGltaXQgPSAxMDAgIC8vIOihqOekuuOBmeOCi+mDqOWxi+OBruaVsOOBrm1heAogICAgICBjb25zdCBnZXRyb29tbGlzdCA9IGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obGlzdFJvb21zLHtsaW1pdDpyb29tbGltaXR9KSkKICAgICAgdGhpcy5yb29tcyA9IGdldHJvb21saXN0LmRhdGEubGlzdFJvb21zLml0ZW1zCiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgY29uc29sZS5sb2coJ2Vycm9yIGdldHRpbmcgcm9vbSBkYXRhLi4uICcsIGVycikKICAgIH0KICAgIGZvcih2YXIgaT0wO2kgPCB0aGlzLnJvb21zLmxlbmd0aDtpKyspewogICAgICBjb25zb2xlLmxvZyh0aGlzLnJvb21zW2ldKQogICAgICB2YXIgcm9vbWlkID0gdGhpcy5yb29tc1tpXS5pZAogICAgICB0aGlzLnVwRGF0ZVJvb20ocm9vbWlkKQogICAgfQogIH0sCiAgYXN5bmMgdXBEYXRlUm9vbShpZCl7CiAgICBjb25zdCBnZXRyb29tID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihnZXRSb29tLHtpZDogaWR9KSkKICAgIGNvbnN0IG1lbWJlcm51bSA9IGdldHJvb20uZGF0YS5nZXRSb29tLnVzZXJzLml0ZW1zLmxlbmd0aAogICAgY29uc3QgdXBkYXRlcm9vbW1lbmJlciA9IHsKICAgICAgaWQ6IGlkLAogICAgICBudW1iZXJvZm1lbWJlcjogbWVtYmVybnVtCiAgICB9CiAgICBjb25zb2xlLmxvZyh1cGRhdGVyb29tbWVuYmVyKQogICAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbih1cGRhdGVSb29tLCB7IGlucHV0OiB1cGRhdGVyb29tbWVuYmVyIH0pKQogICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKICB9LAogICAgY2xvc2VNb2RlbDogZnVuY3Rpb24oKXsKICAgICAgdGhpcy5zaG93Q29udGVudCA9IGZhbHNlCiAgICB9LAogIH0sCiAgYXN5bmMgY3JlYXRlZCgpewogICAgYXdhaXQgdGhpcy5pbml0dXNlcmRhdGEoKQogICAgYXdhaXQgdGhpcy5pbml0KCkKICAgIGNvbnNvbGUubG9nKHRoaXMudXNlck5hbWUsdGhpcy51c2VySWQpCiAgICB0aGlzLmZldGNoKCkKICB9Cn0K"},{"version":3,"sources":["room.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"room.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- 待機部屋の画面、部屋が作られると一覧が表示される -->\n<div>\n<header>\n<h1 class=\"headline\">\n  <a>みんラジ!</a>\n</h1>\n <ul class=\"nav-list\">\n      <li class=\"nav-list-item\"><router-link to=\"/\"><button id=\"back-home-button\">ホーム</button></router-link></li>\n      <li class=\"nav-list-item\"><!-- 部屋を作成する画面に移動 --><router-link to=\"/room_create\"><button id=\"create-room-button\">ルームを作成する</button></router-link></li>\n      <li class=\"nav-list-item\"> <amplify-sign-out></amplify-sign-out></li>\n  </ul>\t\n\n</header>\n<main>\n  <section>\n    <section>\n      <h2>ルーム広場</h2>\n      <p>ここはルームに入る待機場所です。「ルームを作成する」ボタンを押したら、ルームを作成するページに移動するので\n      そこでルームを作成してください。\n      </p>\n      <router-link to=\"/room_create\"><button id=\"create-room-button\">ルームを作成する</button></router-link>\n\n    </section>\n   \n      <!-- 部屋情報を一つずつ取ってきて表示する、押すとそれぞれの画面に移動する -->\n    <section>\n      <!-- <calendar></calendar> -->\n      <div class=\"main-contents\">\n      <h2>作成したルーム一覧</h2>\n      <p>作成されたルーム一覧です。自分が作ったルームに入りましょう。</p>\n      <div id='room' v-for=\"room in rooms\" :key=\"room.id\">\n        <button id = \"go-my-room-button\" v-on:click=\"passCheck(room.id)\">{{room.tilte}}</button>\n        参加者 : {{room.numberofmember}} 名\n        開始時刻 : {{room.reservedtime}}\n      </div>\n      <div id='overlay' v-show='showContent'>\n        <input id=\"password-input\" placeholder=\"ルームのパスワードを入力してください\" size=\"20\" type='text' value=\"\"/>\n        <button id = \"password-send-button\" v-on:click=\"passwordInput\">送る</button>\n        <br>\n        <p><button v-on:click='closeModel' id = \"password-close-button\">閉じる</button></p>\n        <br>\n        <p id=\"errormessage\"></p>\n      </div>\n      <div class=\"error\">{{ this.error }}</div>\n      </div>\n    </section>\n\n    <section>\n      <h2>予定の確認</h2>\n      <p>「カレンダーページ」ボタンを押すとカレンダーが表示されて、作成されたルームの確認ができます。</p>\n      <router-link to=\"/calendar\"><button id=\"go-calendar-button\">カレンダーページ</button></router-link>\n    </section>\n      \n  </section>\n</main>\n\n</div>\n</template>\n\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport router from '../router/router'\n// import calendar from \"./calendar\"\nimport { listRooms } from '../graphql/queries';\nimport { getRoom } from '../graphql/queries';\n// import { updateRoom } from \"../graphql/mutations\";\nimport { updateUser } from \"../graphql/mutations\";\n// import UserStore from '../mobx/UserStore'\n// import RoomMember from '../mobx/RoomMember'\nimport { Auth } from 'aws-amplify'\nimport { listUsers } from '../graphql/queries';\nimport { updateRoom } from '../graphql/mutations';\n\nwindow.LOG_LEVEL = 'VERBOSE';\n\nexport default {\n  name: 'chat',\n  // components: {\n    // calendar\n  // },\n  data(){\n    return {\n      userName: \"\",\n      userId: \"\",\n      members: [],\n      error: \"\",\n      rooms: [],\n      showContent: false,\n      password: \"\",\n      passcheck: false,\n      roomId: \"\"\n      // subscription: {},\n    }\n  },\n  methods :{\n    async fetch(){\n      //部屋データを取得\n      RoomMember\n      const roomlimit = 100  // 表示する部屋の数のmax\n      const rooms = await API.graphql(graphqlOperation(listRooms,{limit:roomlimit}))\n      this.rooms = rooms.data.listRooms.items\n    },\n    async gotoroom(){\n      //ユーザー部屋入室情報追加\n      const updateuserinput = {\n        id: this.userId,\n        username: this.userName,\n        userRoomidId: this.roomId\n      }\n      await API.graphql(graphqlOperation(updateUser, { input: updateuserinput }))\n        .catch(error => this.error = JSON.stringify(error))\n      // 部屋の人数更新\n      // const getroom = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n      // const roommember = getroom.data.getRoom.numberofmember\n      // const addroommenber = {\n      //   id: this.roomId,\n      //   numberofmember: roommember + 1\n      // }\n      // console.log(roommember)\n      // await API.graphql(graphqlOperation(updateRoom, { input: addroommenber }))\n      //   .catch(error => this.error = JSON.stringify(error))\n\n      router.push('/room/in')\n    },\n    //パスワード関連\n    passwordInput(){\n      console.log(this.passcheck)\n      let passwordinput = document.getElementById(\"password-input\").value\n      if(passwordinput === this.password){\n        this.showContent = false\n        this.gotoroom()\n      }\n      else{\n        var erromessage = document.getElementById(\"errormessage\")\n        erromessage.innerHTML = \"パスワードが違います\"\n      }\n    },\n\n    async passCheck(id){\n      this.roomId = id\n      const getroom = await API.graphql(graphqlOperation(getRoom,{id: this.roomId}))\n      console.log(getroom.data.getRoom.privatepassword)\n      if(getroom.data.getRoom.privatepassword){\n        console.log('passcheck')\n        this.password = getroom.data.getRoom.privatepassword\n        this.showContent = true\n      }\n      else{\n        this.gotoroom()\n      }\n    },\n    async inituserdata() {\n      try{\n        const user = await Auth.currentAuthenticatedUser()\n        this.userName = user.username\n      } catch (err) {\n        console.log('error getting user data... ', err)\n      }\n      console.log('username:',this.userName)\n      if(this.userName !== ''){\n        const userdata =  await API.graphql(graphqlOperation(listUsers, { filter: {'username':{eq: this.userName}}}))\n        console.log(userdata.data.listUsers.items[0].id)\n        this.userId = userdata.data.listUsers.items[0].id\n      }\n    },\n    async init(){\n    try{\n      const roomlimit = 100  // 表示する部屋の数のmax\n      const getroomlist = await API.graphql(graphqlOperation(listRooms,{limit:roomlimit}))\n      this.rooms = getroomlist.data.listRooms.items\n    } catch (err) {\n      console.log('error getting room data... ', err)\n    }\n    for(var i=0;i < this.rooms.length;i++){\n      console.log(this.rooms[i])\n      var roomid = this.rooms[i].id\n      this.upDateRoom(roomid)\n    }\n  },\n  async upDateRoom(id){\n    const getroom = await API.graphql(graphqlOperation(getRoom,{id: id}))\n    const membernum = getroom.data.getRoom.users.items.length\n    const updateroommenber = {\n      id: id,\n      numberofmember: membernum\n    }\n    console.log(updateroommenber)\n    await API.graphql(graphqlOperation(updateRoom, { input: updateroommenber }))\n      .catch(error => this.error = JSON.stringify(error))\n  },\n    closeModel: function(){\n      this.showContent = false\n    },\n  },\n  async created(){\n    await this.inituserdata()\n    await this.init()\n    console.log(this.userName,this.userId)\n    this.fetch()\n  }\n}\n</script>\n\n<style src=\"./chat.css\" />\n"]}]}