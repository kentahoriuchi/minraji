{"remainingRequest":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mech-user/Documents/minraji/utsprint/minraji/src/components/chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/src/components/chat.vue","mtime":1589538080888},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mech-user/Documents/minraji/utsprint/minraji/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBUEksIHsgIGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJzsKaW1wb3J0IHsgQXV0aCB9IGZyb20gJ2F3cy1hbXBsaWZ5JwppbXBvcnQgeyBjcmVhdGVNZXNzYWdlIH0gZnJvbSAiLi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwppbXBvcnQgeyBsaXN0TWVzc2FnZXMgfSBmcm9tICcuLi9ncmFwaHFsL3F1ZXJpZXMnOwppbXBvcnQgeyBvbkNyZWF0ZU1lc3NhZ2UgfSBmcm9tICcuLi9ncmFwaHFsL3N1YnNjcmlwdGlvbnMnOwp3aW5kb3cuTE9HX0xFVkVMID0gJ1ZFUkJPU0UnOwpleHBvcnQgZGVmYXVsdCB7CgogIG5hbWU6ICdjaGF0JywKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlczogW10sCiAgICAgIGNvbnRlbnQ6ICIiLAogICAgICB1c2VyTmFtZTogIiIsCiAgICAgIHN1YnNjcmlwdGlvbjoge30sCiAgICAgIGVycm9yOiAiIgogICAgfQogIH0sCiAgbWV0aG9kcyA6ewogICAgc2VuZE1lc3NhZ2UoKXsKICAgICAgLy8gVE9ETygxKSBHcmFwaFFM44Ko44Oz44OJ44Od44Kk44Oz44OI44GrbXV0YXRpb27jgpLnmbrooYzjgZfjgIHjg6Hjg4Pjgrvjg7zjgrjjgpLnmbvpjLLjgZnjgosKICAgICAgaWYgKGV2ZW50LmtleUNvZGUgIT09IDEzKSByZXR1cm4gLy8gRW50ZXLjgq3jg7zjga7loLTlkIjjga7jgb/pgIHkv6Hlh6bnkIbjgpLooYzjgYYKICAgICAgY29uc3QgbWVzc2FnZSA9IHsgCiAgICAgICAgICBpZDogbmV3IERhdGUoKS5nZXRUaW1lKCkgKyB0aGlzLnVzZXJOYW1lLAogICAgICAgICAgdXNlcm5hbWU6IHRoaXMudXNlck5hbWUsCiAgICAgICAgICBjb250ZW50OiB0aGlzLmNvbnRlbnQKICAgICAgfQogICAgICAvLyBNdXRhdGlvbuOBruWun+ihjAogICAgICBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGNyZWF0ZU1lc3NhZ2UsIHsgaW5wdXQ6IG1lc3NhZ2UgfSkpCiAgICAgICAgLmNhdGNoKGVycm9yID0+IHRoaXMuZXJyb3IgPSBKU09OLnN0cmluZ2lmeShlcnJvcikpCiAgICAgIHRoaXMuY29udGVudCA9ICIiCiAgfSwKICAgIGZldGNoKCl7CiAgICAvLyBUT0RPKDIpIEdyYXBoUUzjgqjjg7Pjg4njg53jgqTjg7Pjg4jjgatxdWVyeeOCkueZuuihjOOBl+OAgeODoeODg+OCu+ODvOOCuOS4gOimp+OCkuWPluW+l+OBmeOCiwogICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihsaXN0TWVzc2FnZXMsIHsgbGltaXQ6IDEwMCB9KSkKICAgICAgLnRoZW4obWVzc2FnZXMgPT4gdGhpcy5tZXNzYWdlcyA9IG1lc3NhZ2VzLmRhdGEubGlzdE1lc3NhZ2VzLml0ZW1zLnNvcnQoKGEsYikgPT4gYS5pZCA+IGIuaWQgPyAxIDogLTEpKQogICAgICAuY2F0Y2goZXJyb3IgPT4gdGhpcy5lcnJvciA9IEpTT04uc3RyaW5naWZ5KGVycm9yKSkKICB9LAogICAgc3Vic2NyaWJlKCl7CiAgICAgIC8vIFRPRE8oMy0xKSBHcmFwaFFM44Ko44Oz44OJ44Od44Kk44Oz44OI44Grc3Vic2NyaXB0aW9u44KS55m66KGM44GX44CBbXV0YXRpb27jgpLnm6PoppbjgZnjgosKICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKG9uQ3JlYXRlTWVzc2FnZSkpLnN1YnNjcmliZSh7CiAgICAgICAgbmV4dDogKGV2ZW50RGF0YSkgPT4gewogICAgICAgICAgY29uc3QgbWVzc2FnZSA9IGV2ZW50RGF0YS52YWx1ZS5kYXRhLm9uQ3JlYXRlTWVzc2FnZTsKICAgICAgICAgIHRoaXMubWVzc2FnZXMucHVzaChtZXNzYWdlKTsKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgYmVmb3JlRGVzdHJveSgpIHsKICAgICAgLy8gVE9ETygzLTIpIOODgeODo+ODg+ODiOeUu+mdouOBi+OCiembouOCjOOCi+mam+OBq+OAgVVuU3Vic2NyaWJl44GZ44KLCiAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7CiAgICB9LAogICAgc2Nyb2xsQm90dG9tKCkgewogICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCIubWVzc2FnZV9iYXNlIik7CiAgICAgIGNvbnRhaW5lci5zY3JvbGxUb3AgPSBjb250YWluZXIuc2Nyb2xsSGVpZ2h0OwogICAgfQogIH0sCiAgYXN5bmMgY3JlYXRlZCgpewogICAgdGhpcy51c2VyTmFtZSA9IChhd2FpdCBBdXRoLmN1cnJlbnRBdXRoZW50aWNhdGVkVXNlcigpKS51c2VybmFtZTsKICAgIHRoaXMuZmV0Y2goKQogICAgdGhpcy5zdWJzY3JpYmUoKQogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIC8vIFRPRE8oMy0yKSDjg4Hjg6Pjg4Pjg4jnlLvpnaLjgYvjgonpm6LjgozjgovpmpvjgavjgIFVblN1YnNjcmliZeOBmeOCiwogIH0sCiAgdXBkYXRlZDogZnVuY3Rpb24gKCkgewogICAgdGhpcy5zY3JvbGxCb3R0b20oKQogIH0KfQo="},{"version":3,"sources":["chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <div class=\"title\">\n    <h2>Amplifyで作るチャットアプリ</h2>\n  </div>\n  <div class=\"main-contents\">\n    <div class=\"message_base\">\n        <div v-for=\"message in messages\" :key=\"message.id\">\n          <div v-bind:class=\"[message.username === userName ? 'message' : 'message_opponent']\">{{message.content}}</div>\n          <div v-bind:class=\"[message.username === userName ? 'username' : 'username_opponent']\">{{message.username}}</div>\n        </div>\n    </div>\n    <el-input placeholder=\"メッセージを入力(Enterで送信)\" v-model=\"content\" @keydown.enter.native=\"sendMessage\"></el-input>\n    <div class=\"error\">{{ this.error }}</div>\n  </div>\n</div>\n</template>\n\n<script>\nimport API, {  graphqlOperation } from '@aws-amplify/api';\nimport { Auth } from 'aws-amplify'\nimport { createMessage } from \"../graphql/mutations\";\nimport { listMessages } from '../graphql/queries';\nimport { onCreateMessage } from '../graphql/subscriptions';\nwindow.LOG_LEVEL = 'VERBOSE';\nexport default {\n\n  name: 'chat',\n  data(){\n    return {\n      messages: [],\n      content: \"\",\n      userName: \"\",\n      subscription: {},\n      error: \"\"\n    }\n  },\n  methods :{\n    sendMessage(){\n      // TODO(1) GraphQLエンドポイントにmutationを発行し、メッセージを登録する\n      if (event.keyCode !== 13) return // Enterキーの場合のみ送信処理を行う\n      const message = { \n          id: new Date().getTime() + this.userName,\n          username: this.userName,\n          content: this.content\n      }\n      // Mutationの実行\n      API.graphql(graphqlOperation(createMessage, { input: message }))\n        .catch(error => this.error = JSON.stringify(error))\n      this.content = \"\"\n  },\n    fetch(){\n    // TODO(2) GraphQLエンドポイントにqueryを発行し、メッセージ一覧を取得する\n    API.graphql(graphqlOperation(listMessages, { limit: 100 }))\n      .then(messages => this.messages = messages.data.listMessages.items.sort((a,b) => a.id > b.id ? 1 : -1))\n      .catch(error => this.error = JSON.stringify(error))\n  },\n    subscribe(){\n      // TODO(3-1) GraphQLエンドポイントにsubscriptionを発行し、mutationを監視する\n      this.subscription = API.graphql(graphqlOperation(onCreateMessage)).subscribe({\n        next: (eventData) => {\n          const message = eventData.value.data.onCreateMessage;\n          this.messages.push(message);\n        }\n      })\n    },\n    beforeDestroy() {\n      // TODO(3-2) チャット画面から離れる際に、UnSubscribeする\n      this.subscription.unsubscribe();\n    },\n    scrollBottom() {\n      const container = this.$el.querySelector(\".message_base\");\n      container.scrollTop = container.scrollHeight;\n    }\n  },\n  async created(){\n    this.userName = (await Auth.currentAuthenticatedUser()).username;\n    this.fetch()\n    this.subscribe()\n  },\n  beforeDestroy() {\n    // TODO(3-2) チャット画面から離れる際に、UnSubscribeする\n  },\n  updated: function () {\n    this.scrollBottom()\n  }\n}\n</script>\n\n<style src=\"./chat.css\" />\n"]}]}